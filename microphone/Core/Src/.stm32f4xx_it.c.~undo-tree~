(undo-tree-save-format-version . 1)
"f1a28991fdf5ac9ad614a9276b753197880d4e60"
[nil nil nil nil (25315 19153 825680 537000) 0 nil]
([nil nil ((#("    " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 4 (fontified t ws-butler-chg chg c-in-sws t)) . -6001) (undo-tree-id10 . -4) 6005 (6001 . 6005) (6001 . 6002) (#("
" 0 1 (fontified t c-is-sws t)) . 6001) (t 25315 18942 859362 993000)) nil (25315 19153 825678 540000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -6005) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -6006) (undo-tree-id6 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -6007) (undo-tree-id7 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -6008) (undo-tree-id8 . -1) 6009 (6005 . 6009) (6001 . 6005) (6001 . 6002) (#("
" 0 1 (fontified t ws-butler-chg delete c-is-sws t)) . 6001) (undo-tree-id9 . 1)) nil (25315 19153 825673 817000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 4 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . 6001) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -3)) nil (25315 19153 825662 194000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -2227) (undo-tree-id11 . -1) 2228 (2227 . 2228) (t 25315 19153 827966 99000)) nil (25315 19253 310324 907000) 0 nil])
([nil nil ((2294 . 2295) (2293 . 2294) (2272 . 2273) (2271 . 2272) (2250 . 2251) (2249 . 2250) (2230 . 2231) (2229 . 2230) (2207 . 2209)) nil (25315 19253 310310 924000) 0 nil])
([nil nil ((2331 . 2332) (2313 . 2331) (#("/" 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -2313) (undo-tree-id12 . -1) (#("/" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face c-in-sws t)) . -2314) (undo-tree-id13 . -1) 2315 (2313 . 2315) (2312 . 2313) (2311 . 2312) (t 25315 19253 314723 690000) 2294) nil (25315 19333 41916 854000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2332 . 2333) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . -2352) (2332 . 2353) 2331) nil (25315 19333 41904 347000) 0 nil])
([nil nil ((2345 . 2348) (#("cur" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 1 2 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 2 3 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . 2345)) nil (25315 19333 41902 83000) 0 nil])
([nil nil ((2325 . 2327)) nil (25315 19333 41900 434000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 2326)) nil (25315 19333 41898 52000) 0 nil])
([nil nil ((2346 . 2347)) nil (25315 19333 41892 637000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . 2325) (t 25315 19336 786680 461000)) nil (25315 19401 9002 42000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . 2345)) nil (25315 19401 9000 822000) 0 nil])
([nil nil ((2328 . 2330) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2325) (undo-tree-id21 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2326) (undo-tree-id22 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2327) (undo-tree-id23 . -1) (#("k" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2328) (undo-tree-id24 . -1) 2329 (2328 . 2329) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2328) (undo-tree-id25 . -1) 2329 (2325 . 2329)) nil (25315 19401 8998 440000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 2328)) nil (25315 19401 8990 368000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 2328)) nil (25315 19401 8989 129000) 0 nil])
([nil nil ((2324 . 2326)) nil (25315 19401 8987 683000) 0 nil])
([nil nil ((2346 . 2348)) nil (25315 19401 8986 638000) 0 nil])
([nil nil ((2324 . 2325)) nil (25315 19401 8985 26000) 0 nil])
([nil nil ((2347 . 2348) (#(")" 0 1 (fontified t ws-butler-chg chg)) . -2347) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . 1) (undo-tree-id19 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -2348) (undo-tree-id20 . -1) 2349 (2348 . 2349) (2347 . 2348)) nil (25315 19401 8979 581000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 4 (fontified t ws-butler-chg chg c-in-sws t)) . -6058) (undo-tree-id147 . -4) 6062 (6058 . 6062) (6058 . 6059) (#("
" 0 1 (c-is-sws t fontified t)) . 6058) (t 25315 19401 10996 243000)) nil (25315 19918 241182 339000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil ws-butler-chg chg)) . 2419) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (2423 . 2424) (2418 . 2423) (2417 . 2418) (2416 . 2417) (#("{" 0 1 (fontified t ws-butler-chg chg)) . -2416) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) 2417 (2416 . 2417) (2415 . 2416) (2410 . 2415) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -2410) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2411) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 2412 (2410 . 2412) (2406 . 2410) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2406) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -2407) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -2408) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 2409 (2406 . 2409) (2405 . 2406) (2403 . 2405) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2403) (undo-tree-id113 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2404) (undo-tree-id114 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2405) (undo-tree-id115 . -1) 2406 (2399 . 2406) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2399) (undo-tree-id116 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2400) (undo-tree-id117 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2401) (undo-tree-id118 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2402) (undo-tree-id119 . -1) 2403 (2399 . 2403) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2399) (undo-tree-id120 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2400) (undo-tree-id121 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2401) (undo-tree-id122 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2402) (undo-tree-id123 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2403) (undo-tree-id124 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2404) (undo-tree-id125 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2405) (undo-tree-id126 . -1) 2406 (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2406) (undo-tree-id127 . -1) 2407 (2399 . 2407) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2399) (undo-tree-id128 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2400) (undo-tree-id129 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2401) (undo-tree-id130 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2402) (undo-tree-id131 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2403) (undo-tree-id132 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2404) (undo-tree-id133 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2405) (undo-tree-id134 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2406) (undo-tree-id135 . -1) 2407 (2399 . 2407) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2399) (undo-tree-id136 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2400) (undo-tree-id137 . -1) 2401 (2399 . 2401) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2399) (undo-tree-id138 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2400) (undo-tree-id139 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2401) (undo-tree-id140 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2402) (undo-tree-id141 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2403) (undo-tree-id142 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2404) (undo-tree-id143 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2405) (undo-tree-id144 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2406) (undo-tree-id145 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2407) (undo-tree-id146 . -1) 2408 (2404 . 2408) (2394 . 2404) (2387 . 2394) (2386 . 2387) 2386) nil (25315 19918 241168 821000) 0 nil])
([nil nil ((2423 . 2429) (2418 . 2423) 2387) nil (25315 19918 241054 796000) 0 nil])
([nil nil ((#("inline void pushts(uint8_t i) {
" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified t ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified t ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified t ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified t ws-butler-chg chg face font-lock-keyword-face) 5 6 (fontified t ws-butler-chg chg face font-lock-keyword-face) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg face font-lock-type-face) 8 9 (fontified t ws-butler-chg chg face font-lock-type-face) 9 10 (fontified t ws-butler-chg chg face font-lock-type-face) 10 11 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg face font-lock-function-name-face) 13 14 (fontified t ws-butler-chg chg face font-lock-function-name-face) 14 15 (fontified t ws-butler-chg chg face font-lock-function-name-face) 15 16 (fontified t ws-butler-chg chg face font-lock-function-name-face) 16 17 (fontified t ws-butler-chg chg face font-lock-function-name-face) 17 18 (fontified t ws-butler-chg chg face font-lock-function-name-face) 18 19 (fontified t ws-butler-chg chg c-type c-decl-arg-start) 19 20 (fontified t ws-butler-chg chg face font-lock-type-face) 20 21 (fontified t ws-butler-chg chg face font-lock-type-face) 21 22 (fontified t ws-butler-chg chg face font-lock-type-face) 22 23 (fontified t ws-butler-chg chg face font-lock-type-face) 23 24 (fontified t ws-butler-chg chg face font-lock-type-face) 24 25 (fontified t ws-butler-chg chg face font-lock-type-face) 25 26 (fontified t ws-butler-chg chg face font-lock-type-face) 26 27 (fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 28 29 (fontified t ws-butler-chg chg) 29 30 (fontified t ws-butler-chg chg) 30 31 (fontified t ws-butler-chg chg) 31 32 (fontified t ws-butler-chg chg)) . 2387) (undo-tree-id94 . -9) (undo-tree-id95 . -19) (undo-tree-id96 . -29) (undo-tree-id97 . -9) 2396) nil (25315 19918 241053 98000) 0 nil])
([nil nil ((#("    mic_ts
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg)) . 2387) (undo-tree-id87 . 1) (undo-tree-id88 . -9) (undo-tree-id89 . -4) (undo-tree-id90 . -11) (undo-tree-id91 . -10) (undo-tree-id92 . -10) (undo-tree-id93 . -9) 2396) nil (25315 19918 241046 947000) 0 nil])
([nil nil ((#("}
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg delete fontified t)) . 2387) (undo-tree-id83 . 2) (undo-tree-id84 . -1) (undo-tree-id85 . 2) (undo-tree-id86 . -1)) nil (25315 19918 241040 608000) 0 nil])
([nil nil ((1394 . 1401) (1393 . 1394)) nil (25315 19918 241036 671000) 0 nil])
([nil nil ((#("#define 
" 0 1 (fontified t c-is-sws t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face) 5 6 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face) 6 7 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face) 7 8 (fontified t ws-butler-chg chg c-in-sws t) 8 9 (fontified t c-in-sws t)) . 1393) (undo-tree-id79 . 1) (undo-tree-id80 . -7) (undo-tree-id81 . -8) (undo-tree-id82 . -7) 1400) nil (25315 19918 241035 4000) 0 nil])
([nil nil ((1392 . 1393) 1375) nil (25315 19918 241027 781000) 0 nil])
([nil nil ((2411 . 2412) (2410 . 2411) (2409 . 2410) (2408 . 2409) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face c-in-sws t) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face c-in-sws t) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face c-in-sws t) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face c-in-sws t) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face c-in-sws t)) . 2408) (undo-tree-id26 . -5) (undo-tree-id27 . -5) (undo-tree-id28 . -5) (2403 . 2408) 2408 (2402 . 2408) (2401 . 2402) (2400 . 2401) (2399 . 2400) (2396 . 2399) (2389 . 2396) (2385 . 2389) (2384 . 2385) (2383 . 2384) (2382 . 2383) (2381 . 2382) (2371 . 2381) (#("mic_ts_" 0 7 (c-in-sws t fontified t ws-butler-chg chg)) . -2371) (undo-tree-id29 . -7) (undo-tree-id30 . -7) 2378 (2371 . 2378) (#("mic_ts" 0 1 (fontified t ws-butler-chg chg c-in-sws t) 1 2 (fontified t ws-butler-chg chg c-in-sws t) 2 3 (fontified t ws-butler-chg chg c-in-sws t) 3 4 (fontified t ws-butler-chg chg c-in-sws t) 4 5 (fontified t ws-butler-chg chg c-in-sws t) 5 6 (fontified t ws-butler-chg chg c-in-sws t)) . -2371) (undo-tree-id31 . -6) (undo-tree-id32 . -6) 2377 (2370 . 2377) (2369 . 2370) (2368 . 2369) (2367 . 2368) (2366 . 2367) (2365 . 2366) (2364 . 2365) (2354 . 2364) (#("mic_ts_" 0 7 (c-in-sws t fontified t ws-butler-chg chg)) . -2354) (undo-tree-id33 . -7) (undo-tree-id34 . -7) 2361 (2354 . 2361) (#("mic_ts" 0 1 (fontified t ws-butler-chg chg c-in-sws t) 1 2 (fontified t ws-butler-chg chg c-in-sws t) 2 3 (fontified t ws-butler-chg chg c-in-sws t) 3 4 (fontified t ws-butler-chg chg c-in-sws t) 4 5 (fontified t ws-butler-chg chg c-in-sws t) 5 6 (fontified t ws-butler-chg chg c-in-sws t)) . -2354) (undo-tree-id35 . -6) (undo-tree-id36 . -6) 2360 (2350 . 2360) (2349 . 2350) (#("]" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2349) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . 1) (undo-tree-id40 . -1) 2350 (2348 . 2350) (2347 . 2348) (#("i" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2347) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("]" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2348) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . 1) (undo-tree-id46 . -1) 2349 (2346 . 2349) (2336 . 2346) (#("mic_ts_" 0 7 (c-in-sws t fontified t ws-butler-chg chg)) . -2336) (undo-tree-id47 . -7) (undo-tree-id48 . -7) 2343 (2336 . 2343) (#("mic_ts" 0 1 (fontified t ws-butler-chg chg c-in-sws t) 1 2 (fontified t ws-butler-chg chg c-in-sws t) 2 3 (fontified t ws-butler-chg chg c-in-sws t) 3 4 (fontified t ws-butler-chg chg c-in-sws t) 4 5 (fontified t ws-butler-chg chg c-in-sws t) 5 6 (fontified t ws-butler-chg chg c-in-sws t)) . -2336) (undo-tree-id49 . -6) (undo-tree-id50 . -6) 2342 (2335 . 2342) (2334 . 2335) (2331 . 2334) (#("d" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2331) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-keyword-face)) . -2332) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2333) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("{" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2334) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 2335 (2334 . 2335) (2331 . 2334) (#("d" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2331) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-keyword-face)) . -2332) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 2333 (2331 . 2333) (2330 . 2331) (2329 . 2330) (2328 . 2329) (2327 . 2328) (2323 . 2327) (#("U" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2323) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2324) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("D" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2325) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 2326 (2323 . 2326) (#("P" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2323) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("U" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2324) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("S" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2325) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("H" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2326) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2327) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 2328 (2327 . 2328) (2320 . 2327) (2314 . 2320) (2313 . 2314) (2312 . 2313) (2311 . 2312) 2293) nil (25315 19918 241013 486000) 0 nil])
([nil nil ((6172 . 6173) (6171 . 6172) (6170 . 6171) (6169 . 6170) (6163 . 6169) (#("P" 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -6163) (undo-tree-id151 . -1) (#("U" 0 1 (fontified t ws-butler-chg chg)) . -6164) (undo-tree-id152 . -1) (#("S" 0 1 (fontified t ws-butler-chg chg)) . -6165) (undo-tree-id153 . -1) (#("H" 0 1 (fontified t ws-butler-chg chg)) . -6166) (undo-tree-id154 . -1) 6167 (6163 . 6167) (6159 . 6163) (6159 . 6160) (#("
" 0 1 (c-is-sws t fontified t)) . 6159) (t 25315 19918 244508 907000)) nil (25315 19968 794235 114000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6467 . 6468) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . -6478) (6463 . 6479) 6438) nil (25315 19968 794227 241000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6479)) nil (25315 19968 794225 22000) 0 nil])
([nil nil ((6475 . 6476) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 6475)) nil (25315 19968 794223 987000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified nil)) . -7074) (undo-tree-id150 . -1) (7059 . 7075) 7032) nil (25315 19968 794222 281000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified nil)) . -6783) (undo-tree-id149 . -1) (6768 . 6784) 6740) nil (25315 19968 794219 8000) 0 nil])
([nil nil ((6780 . 6781) (#("1" 0 1 (ws-butler-chg chg fontified t)) . 6780)) nil (25315 19968 794215 332000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6784)) nil (25315 19968 794213 490000) 0 nil])
([nil nil ((7085 . 7086) (#("2" 0 1 (fontified t ws-butler-chg chg)) . 7085) (undo-tree-id148 . -1) (7085 . 7086) (#("1" 0 1 (ws-butler-chg chg fontified t)) . 7085)) nil (25315 19968 794211 219000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7089)) nil (25315 19968 794197 883000) 0 nil])
([nil nil ((6211 . 6212) (6208 . 6211) (6195 . 6208) (6193 . 6195) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -6193) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("]" 0 1 (fontified t ws-butler-chg chg)) . -6194) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . 1) (undo-tree-id160 . -1) 6195 (6192 . 6195) (6182 . 6192) (#("mic_ts_cu" 0 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg)) . -6182) (undo-tree-id161 . -9) (undo-tree-id162 . -9) 6191 (6189 . 6191) (6182 . 6189) (#("mic_ts" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -6182) (undo-tree-id163 . -6) (undo-tree-id164 . -6) 6188 (6182 . 6188) (6181 . 6182) (6178 . 6181) (6173 . 6178) (t 25315 19968 798503 190000) 6159) nil (25315 20194 554922 512000) 0 nil])
([nil nil ((6176 . 6177) (6163 . 6176) (6158 . 6163) 6157) nil (25315 20194 554903 1000) 0 nil])
([nil nil ((6189 . 6190) (#("0" 0 1 (fontified t)) . 6189)) nil (25315 20194 554901 123000) 0 nil])
([nil nil ((6212 . 6213) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 6212)) nil (25315 20194 554899 739000) 0 nil])
([nil nil ((6228 . 6229) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 6228)) nil (25315 20194 554897 891000) 0 nil])
([nil nil ((6230 . 6235)) nil (25315 20194 554895 605000) 0 nil])
([nil nil ((6233 . 6235)) nil (25315 20194 554886 952000) 0 nil])
([nil nil ((#("#define TS_UPD(i) do { mic_ts_lst[(i)] = mic_ts_cur[(i)]; mic_ts_cur[(i)] = TIM10->CNT; } while (0)
" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face) 2 3 (fontified t c-in-sws t face font-lock-preprocessor-face) 3 4 (fontified t c-in-sws t face font-lock-preprocessor-face) 4 5 (fontified t c-in-sws t face font-lock-preprocessor-face) 5 6 (fontified t c-in-sws t face font-lock-preprocessor-face) 6 7 (fontified t c-in-sws t face font-lock-preprocessor-face) 7 8 (fontified t c-in-sws t) 8 9 (fontified t c-in-sws t face font-lock-function-name-face) 9 10 (fontified t c-in-sws t face font-lock-function-name-face) 10 11 (fontified t c-in-sws t face font-lock-function-name-face) 11 12 (fontified t c-in-sws t face font-lock-function-name-face) 12 13 (fontified t c-in-sws t face font-lock-function-name-face) 13 14 (fontified t c-in-sws t face font-lock-function-name-face) 14 15 (fontified t c-in-sws t) 15 16 (fontified t c-in-sws t face font-lock-variable-name-face) 16 17 (fontified t c-in-sws t) 17 18 (fontified t c-in-sws t) 18 19 (fontified t c-in-sws t face font-lock-keyword-face) 19 20 (fontified t c-in-sws t face font-lock-keyword-face) 20 21 (fontified t c-in-sws t) 21 22 (fontified t c-in-sws t) 22 23 (fontified t c-in-sws t) 23 33 (c-in-sws t fontified t) 33 34 (fontified t c-in-sws t) 34 35 (fontified t c-in-sws t) 35 36 (fontified t c-in-sws t) 36 37 (fontified t c-in-sws t) 37 38 (fontified t c-in-sws t) 38 39 (fontified t c-in-sws t) 39 40 (fontified t c-in-sws t) 40 41 (fontified t c-in-sws t) 41 51 (c-in-sws t fontified t) 51 52 (fontified t c-in-sws t) 52 53 (fontified t c-in-sws t) 53 54 (fontified t c-in-sws t) 54 55 (fontified t c-in-sws t) 55 56 (fontified t c-in-sws t) 56 57 (fontified t c-in-sws t) 57 58 (fontified t c-in-sws t) 58 68 (c-in-sws t fontified t) 68 69 (fontified t c-in-sws t) 69 70 (fontified t c-in-sws t) 70 71 (fontified t c-in-sws t) 71 72 (fontified t c-in-sws t) 72 73 (fontified t c-in-sws t) 73 74 (fontified t c-in-sws t) 74 75 (fontified t c-in-sws t) 75 76 (fontified t c-in-sws t) 76 77 (fontified t c-in-sws t) 77 78 (fontified t c-in-sws t) 78 79 (fontified t c-in-sws t) 79 80 (fontified t c-in-sws t) 80 81 (fontified t c-in-sws t) 81 82 (fontified t c-in-sws t) 82 83 (fontified t c-in-sws t) 83 84 (fontified t c-in-sws t) 84 85 (fontified t c-in-sws t) 85 86 (fontified t c-in-sws t) 86 87 (fontified t c-in-sws t) 87 88 (fontified t c-in-sws t) 88 89 (fontified t c-in-sws t) 89 90 (fontified t c-in-sws t) 90 95 (c-in-sws t fontified t face font-lock-keyword-face) 95 96 (fontified t c-in-sws t) 96 97 (fontified t c-in-sws t) 97 98 (fontified t c-in-sws t) 98 99 (fontified t c-in-sws t) 99 100 (fontified t c-in-sws t)) . 2313) (undo-tree-id187 . -99) (undo-tree-id188 . -8) (undo-tree-id189 . -14) (undo-tree-id190 . -41) (undo-tree-id191 . -41) (undo-tree-id192 . -41) 2354 (t 25315 20194 559278 369000)) nil (25315 20353 586286 619000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t ws-butler-chg delete)) . 2313) (undo-tree-id186 . -1)) nil (25315 20353 586275 133000) 0 nil])
([nil nil ((nil ws-butler-chg delete 2314 . 2315) (2313 . 2314)) nil (25315 20353 586270 891000) 0 nil])
([nil nil ((nil ws-butler-chg delete 2413 . 2414) (2313 . 2413)) nil (25315 20353 586269 95000) 0 nil])
([nil nil ((2332 . 2337) (2331 . 2332) (t 25315 20194 559278 369000)) nil (25315 20353 586267 348000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t c-in-sws t ws-butler-chg chg)) . 2331)) nil (25315 20353 586264 155000) 0 nil])
([nil nil ((2330 . 2331) (#("     " 0 1 (fontified nil c-in-sws t) 1 2 (fontified nil ws-butler-chg delete c-is-sws t) 2 5 (fontified nil ws-butler-chg chg c-is-sws t)) . 2330) (#("
" 0 1 (fontified t ws-butler-chg delete c-in-sws t)) . -2331) 2330) nil (25315 20353 586261 965000) 0 nil])
([nil nil ((2337 . 2346) (2336 . 2337)) nil (25315 20353 586259 547000) 0 nil])
([nil nil ((2382 . 2391) (2381 . 2382)) nil (25315 20353 586257 624000) 0 nil])
([nil nil ((2422 . 2427) (2421 . 2422)) nil (25315 20353 586255 364000) 0 nil])
([nil nil ((2475 . 2476) (2470 . 2475) (2467 . 2470) (2466 . 2467) (2465 . 2466) (2464 . 2465) (2463 . 2464) (2453 . 2463) (#("mic_ts_l" 0 1 (fontified t ws-butler-chg chg c-in-sws t) 1 2 (fontified t ws-butler-chg chg c-in-sws t) 2 3 (fontified t ws-butler-chg chg c-in-sws t) 3 4 (fontified t ws-butler-chg chg c-in-sws t) 4 5 (fontified t ws-butler-chg chg c-in-sws t) 5 6 (fontified t ws-butler-chg chg c-in-sws t) 6 7 (fontified t ws-butler-chg chg c-in-sws t) 7 8 (fontified t ws-butler-chg chg c-in-sws t)) . -2453) (undo-tree-id178 . -8) (undo-tree-id179 . -8) 2461 (2449 . 2461) (2448 . 2449) (2447 . 2448) (2446 . 2447) (#("i" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2446) (undo-tree-id180 . -1) (undo-tree-id181 . -1) 2447 (2445 . 2447) (2435 . 2445) (#("mic_ts_c" 0 1 (fontified t ws-butler-chg chg c-in-sws t) 1 2 (fontified t ws-butler-chg chg c-in-sws t) 2 3 (fontified t ws-butler-chg chg c-in-sws t) 3 4 (fontified t ws-butler-chg chg c-in-sws t) 4 5 (fontified t ws-butler-chg chg c-in-sws t) 5 6 (fontified t ws-butler-chg chg c-in-sws t) 6 7 (fontified t ws-butler-chg chg c-in-sws t) 7 8 (fontified t ws-butler-chg chg c-in-sws t)) . -2435) (undo-tree-id182 . -8) (undo-tree-id183 . -8) 2443 (2442 . 2443) (2435 . 2442) (#("i" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2435) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 2436 (2435 . 2436) (2434 . 2435) (2431 . 2434) (2422 . 2431) 2386) nil (25315 20353 586248 636000) 0 nil])
([nil nil ((2469 . 2470) (#("<" 0 1 (c-in-sws t fontified t ws-butler-chg chg)) . 2469) (undo-tree-id177 . -1) (2469 . 2470) (#(">" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . 2469)) nil (25315 20353 586190 465000) 0 nil])
([nil nil ((2519 . 2521) (2518 . 2519) (2517 . 2518) (2516 . 2517) (#("i" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2516) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2517) (undo-tree-id169 . -1) (undo-tree-id170 . -1) 2518 (2517 . 2518) (2515 . 2517) (2505 . 2515) (#("mic_ts_" 0 7 (c-in-sws t fontified t ws-butler-chg chg)) . -2505) (undo-tree-id171 . -7) (undo-tree-id172 . -7) 2512 (2505 . 2512) (#("mic_ts" 0 1 (fontified t ws-butler-chg chg c-in-sws t) 1 2 (fontified t ws-butler-chg chg c-in-sws t) 2 3 (fontified t ws-butler-chg chg c-in-sws t) 3 4 (fontified t ws-butler-chg chg c-in-sws t) 4 5 (fontified t ws-butler-chg chg c-in-sws t) 5 6 (fontified t ws-butler-chg chg c-in-sws t)) . -2505) (undo-tree-id173 . -6) (undo-tree-id174 . -6) 2511 (2505 . 2511) (2501 . 2505) (#("\\" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -2501) (undo-tree-id175 . -1) 2502 (2501 . 2502) (2500 . 2501) (2499 . 2500) (2498 . 2499) (2491 . 2498) (2478 . 2491) (2476 . 2478) (#("
" 0 1 (c-in-sws t fontified t ws-butler-chg chg)) . -2476) (undo-tree-id176 . -1) 2477 (2476 . 2477) 2469) nil (25315 20353 586182 490000) 0 nil])
([nil nil ((2520 . 2521) (#("'" 0 1 (c-in-sws t fontified t ws-butler-chg chg face font-lock-warning-face)) . 2520) (undo-tree-id165 . -1) (2520 . 2521) (#("'" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-warning-face)) . 2520) (undo-tree-id166 . -1)) nil (25315 20353 586160 798000) 0 nil])
([nil nil ((2602 . 2603) (2586 . 2602) (2585 . 2586) (2584 . 2585) (t 25315 20353 590832 440000) 2583) nil (25315 20359 750114 861000) 0 nil])
([nil nil ((#("    if (mic_ts_cur[i] - mic_ts_lst[i] > TSTH)
" 0 4 (fontified t) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t) 8 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t)) . 6337) (undo-tree-id193 . -41) (undo-tree-id194 . -41) (undo-tree-id195 . -32) (undo-tree-id196 . -41) (undo-tree-id197 . -32) (undo-tree-id198 . -32) 6369 (t 25315 20359 753972 8000)) nil (25315 20393 907012 773000) 0 nil])
([nil nil ((#("    uint8_t i = 0;
" 0 1 (c-is-sws t fontified t) 1 4 (c-is-sws t fontified t) 4 5 (c-is-sws t fontified t face font-lock-type-face) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (fontified t) 12 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 6303) (undo-tree-id199 . -19) (undo-tree-id200 . -19) (undo-tree-id201 . -19) (undo-tree-id202 . -17) (undo-tree-id203 . -17) 6320 (t 25315 20393 911747 422000)) nil (25315 20397 374971 171000) 0 nil])
([nil nil ((6314 . 6315) (#("i" 0 1 (fontified t)) . 6314)) nil (25315 20397 374953 951000) 0 nil])
([nil nil ((8312 . 8316) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 8312) (undo-tree-id205 . -8) (8320 . 8321) (8311 . 8320) (8310 . 8311) (8309 . 8310) (8308 . 8309) (8304 . 8308) (8303 . 8304) (8297 . 8303) (8296 . 8297) (8288 . 8296) (8283 . 8288) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8283) (undo-tree-id206 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -8284) (undo-tree-id207 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -8285) (undo-tree-id208 . -1) 8286 (8283 . 8286) (8282 . 8283) (8278 . 8282) (8274 . 8278) (8274 . 8275) (#("
" 0 1 (fontified t c-is-sws t)) . 8274) (t 25315 20397 378826 298000)) nil (25315 20479 122804 400000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t ws-butler-chg chg)) . -8312) (undo-tree-id204 . -8) 8320 (8311 . 8320) 8278) nil (25315 20479 122794 35000) 0 nil])
([nil nil ((#("u" 0 1 (c-is-sws t fontified t face font-lock-type-face)) . 2539)) nil (25315 20479 122786 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-type-face)) . 2561)) nil (25315 20479 122784 817000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face font-lock-type-face)) . 2564)) nil (25315 20479 122783 576000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 2564)) nil (25315 20479 122782 183000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg delete c-type c-decl-id-start face font-lock-type-face)) . 2564)) nil (25315 20479 122781 108000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face font-lock-type-face)) . 2542)) nil (25315 20479 122779 944000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 2542)) nil (25315 20479 122778 825000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg delete c-type c-decl-id-start face font-lock-type-face)) . 2542)) nil (25315 20479 122777 231000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face font-lock-type-face)) . 2581)) nil (25315 20479 122775 942000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 2581)) nil (25315 20479 122774 638000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg delete c-type c-decl-id-start face font-lock-type-face)) . 2581)) nil (25315 20479 122772 537000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-type-face)) . 2577)) nil (25315 20479 122764 265000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -2549) (undo-tree-id214 . -1) 2550 (2549 . 2550) (2538 . 2549) (t 25315 20479 127693 807000) 2538) nil (25315 20492 983761 649000) 0 nil])
([nil nil ((#("          
" 0 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg delete)) . 2539) (undo-tree-id209 . 1) (undo-tree-id210 . -9) (undo-tree-id211 . -11) (undo-tree-id212 . -10) (undo-tree-id213 . -10) 2548) nil (25315 20492 983757 114000) 0 nil])
([nil nil ((2521 . 2523)) nil (25315 20492 983740 899000) 0 nil])
([nil nil ((2559 . 2560) (2557 . 2559) (#("]" 0 1 (fontified t ws-butler-chg chg)) . -2557) (undo-tree-id215 . -1) (undo-tree-id216 . 1) (undo-tree-id217 . -1) 2558 (2548 . 2558) (2541 . 2548) (2540 . 2541) (t 25315 20492 988011 734000) 2540) nil (25315 20507 878042 110000) 0 nil])
([nil nil ((2360 . 2361) (2357 . 2360) (2346 . 2357) (2337 . 2346) (t 25315 20507 882353 740000) 2321) nil (25315 20558 712938 108000) 0 nil])
([nil nil ((2565 . 2575) (2586 . 2587) (2583 . 2586) (t 25315 20558 718523 596000)) nil (25315 20579 472760 923000) 0 nil])
([nil nil ((2361 . 2363)) nil (25315 20579 472759 24000) 0 nil])
([nil nil ((#("          " 0 10 (ws-butler-chg chg c-is-sws t fontified t)) . 2567) (undo-tree-id218 . -10)) nil (25315 20579 472756 857000) 0 nil])
([nil nil ((2590 . 2591) (2589 . 2590)) nil (25315 20579 472744 473000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8354) (t 25315 20579 476002 285000)) nil (25315 20856 930343 855000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8359 . 8360) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -8360) (8359 . 8361) 8354) nil (25315 20856 930342 313000) 0 nil])
([nil nil ((#("    for (uint8_t i = 0; i < 4; i++) {
    }
" 0 1 (c-is-sws t fontified t) 1 4 (c-in-sws t c-is-sws t fontified t) 4 5 (c-is-sws t fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t face font-lock-type-face) 11 12 (fontified t face font-lock-type-face) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face) 14 15 (fontified t face font-lock-type-face) 15 16 (fontified t c-type c-decl-id-start face font-lock-type-face) 16 17 (fontified t) 17 18 (fontified t face font-lock-variable-name-face) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t ws-butler-chg delete) 39 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t ws-butler-chg chg rear-nonsticky t)) . 8316) (undo-tree-id252 . -44) (undo-tree-id253 . -44) (undo-tree-id254 . -44) (undo-tree-id255 . -38) (undo-tree-id256 . -38)) nil (25315 20856 930339 921000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11044 . 11045) (#("
" 0 1 (ws-butler-chg chg rear-nonsticky t fontified nil)) . -11084) (11040 . 11085) 11039) nil (25315 20856 930334 770000) 0 nil])
([nil nil ((11090 . 11091) (11089 . 11090) (11088 . 11089) (11087 . 11088) (11045 . 11049)) nil (25315 20856 930332 795000) 0 nil])
([nil nil ((#("        for (uint8_t i = 0; i < 4; i++) {
" 0 1 (fontified t ws-butler-chg chg) 1 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg rear-nonsticky t) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg face font-lock-keyword-face) 9 10 (fontified t ws-butler-chg chg face font-lock-keyword-face) 10 11 (fontified t ws-butler-chg chg face font-lock-keyword-face) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg face font-lock-type-face) 14 15 (fontified t ws-butler-chg chg face font-lock-type-face) 15 16 (fontified t ws-butler-chg chg face font-lock-type-face) 16 17 (fontified t ws-butler-chg chg face font-lock-type-face) 17 18 (fontified t ws-butler-chg chg face font-lock-type-face) 18 19 (fontified t ws-butler-chg chg face font-lock-type-face) 19 20 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face) 20 21 (fontified t ws-butler-chg chg) 21 22 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 22 23 (fontified t ws-butler-chg chg) 23 24 (fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg chg) 25 26 (fontified t ws-butler-chg chg) 26 27 (fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg chg) 28 29 (fontified t ws-butler-chg chg) 29 30 (fontified t ws-butler-chg chg) 30 31 (fontified t ws-butler-chg chg) 31 32 (fontified t ws-butler-chg chg) 32 33 (fontified t ws-butler-chg chg) 33 34 (fontified t ws-butler-chg chg) 34 35 (fontified t ws-butler-chg chg) 35 36 (fontified t ws-butler-chg chg) 36 37 (fontified t ws-butler-chg chg) 37 38 (fontified t ws-butler-chg chg) 38 39 (fontified t ws-butler-chg chg) 39 40 (fontified t ws-butler-chg chg) 40 41 (fontified t ws-butler-chg chg) 41 42 (fontified t ws-butler-chg chg)) . 11041) (undo-tree-id247 . 34) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -8) (undo-tree-id251 . -8) 11049) nil (25315 20856 930330 311000) 0 nil])
([nil nil ((#("        }
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg delete fontified t)) . 11041) (undo-tree-id237 . -9) (undo-tree-id238 . 10) (undo-tree-id239 . 1) (undo-tree-id240 . -4) (undo-tree-id241 . -9) (undo-tree-id242 . -8) (undo-tree-id243 . -4) (undo-tree-id244 . -10) (undo-tree-id245 . -9) (undo-tree-id246 . -8) 11049) nil (25315 20856 930324 779000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 11041) (undo-tree-id235 . 1) (undo-tree-id236 . 1)) nil (25315 20856 930314 245000) 0 nil])
([nil nil ((11513 . 11514) (11512 . 11513) (11484 . 11485) (11483 . 11484) (11430 . 11431) (11429 . 11430) (11384 . 11385) (11383 . 11384) (11342 . 11343) (11341 . 11342) (11269 . 11270) (11268 . 11269) (11196 . 11197) (11195 . 11196) (11123 . 11124) (11122 . 11123) (11049 . 11051)) nil (25315 20856 930310 582000) 0 nil])
([nil nil ((11075 . 11076) (11065 . 11075) (11060 . 11065) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -11060) (undo-tree-id230 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -11061) (undo-tree-id231 . -1) 11062 (11053 . 11062) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -11053) (undo-tree-id232 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -11054) (undo-tree-id233 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -11055) (undo-tree-id234 . -1) 11056 (11049 . 11056) (11040 . 11049) 11039) nil (25315 20856 930303 923000) 0 nil])
([nil nil ((11114 . 11115) (11098 . 11114) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -11098) (undo-tree-id226 . -1) (#(">" 0 1 (fontified t ws-butler-chg chg)) . -11099) (undo-tree-id227 . -1) 11100 (11098 . 11100) (11089 . 11098) (#("time" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -11089) (undo-tree-id228 . -4) 11093 (11089 . 11093) (11088 . 11089) (#("9" 0 1 (fontified t ws-butler-chg chg)) . -11088) (undo-tree-id229 . -1) 11089 (11085 . 11089) (11076 . 11085) 11075) nil (25315 20856 930293 794000) 0 nil])
([nil nil ((11118 . 11121) (#("H" 0 1 (fontified t ws-butler-chg chg)) . -11118) (undo-tree-id225 . -1) 11119 (11114 . 11119)) nil (25315 20856 930285 293000) 0 nil])
([nil nil ((11149 . 11150) (11142 . 11149) (11135 . 11142) (#("mic_" 0 4 (fontified t ws-butler-chg chg)) . -11135) (undo-tree-id223 . -4) 11139 (11135 . 11139) (#("mic" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -11135) (undo-tree-id224 . -3) 11138 (11135 . 11138) (11122 . 11135) 11120) nil (25315 20856 930281 639000) 0 nil])
([nil nil ((11089 . 11108)) nil (25315 20856 930275 598000) 0 nil])
([nil nil ((11100 . 11102) (#("&" 0 1 (fontified t ws-butler-chg chg)) . -11100) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 11101 (#("^" 0 1 (fontified t ws-butler-chg chg)) . -11101) (undo-tree-id222 . -1) 11102 (11100 . 11102) (#("==" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg)) . 11100)) nil (25315 20856 930270 523000) 0 nil])
([nil nil ((11161 . 11162) (11160 . 11161) (11159 . 11160) (11158 . 11159) (11092 . 11093) (11091 . 11092) (11090 . 11091) (11089 . 11090) (11049 . 11053) (t 25315 20856 934862 163000)) nil (25315 20888 776714 649000) 0 nil])
([nil nil ((11081 . 11082) (11080 . 11081) (#("{" 0 1 (fontified t ws-butler-chg chg)) . -11080) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) 11081 (11080 . 11081) (11079 . 11080) (11075 . 11079) (11074 . 11075) (11068 . 11074) (11067 . 11068) (11054 . 11067) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -11054) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -11055) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -11056) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -11057) (undo-tree-id271 . -1) (undo-tree-id272 . -1) 11058 (11054 . 11058) (11053 . 11054) (11049 . 11053) (11040 . 11049) 11039) nil (25315 20888 776709 206000) 0 nil])
([nil nil ((11224 . 11232) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 11224) (undo-tree-id257 . -12) (undo-tree-id258 . -12) (11236 . 11237) (#("|" 0 1 (fontified t ws-butler-chg chg)) . -11236) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) 11237 (11236 . 11237) (11223 . 11236) 11222) nil (25315 20888 776691 299000) 0 nil])
([nil nil ((#("        if (mic_lst[i] == 1 && mic_cur[i] == 0)
" 0 8 (fontified t) 8 10 (fontified t face font-lock-keyword-face) 10 48 (fontified t)) . 10367) (undo-tree-id356 . -12) (undo-tree-id357 . -12) (undo-tree-id358 . -12) (undo-tree-id359 . -12) 10379 (t 25315 20888 781136 22000)) nil (25315 21322 609586 943000) 0 nil])
([nil nil ((#("        {
" 0 1 (fontified t ws-butler-chg delete) 1 9 (fontified t) 9 10 (fontified t)) . 10367) (undo-tree-id353 . -8) (undo-tree-id354 . 2) (undo-tree-id355 . -9) 10375) nil (25315 21322 609580 219000) 0 nil])
([nil nil ((#("        }
" 0 10 (fontified t)) . 10580) (undo-tree-id345 . -9) (undo-tree-id346 . -9) (undo-tree-id347 . -9) (undo-tree-id348 . -8) (undo-tree-id349 . -9) (undo-tree-id350 . -9) (undo-tree-id351 . 2) (undo-tree-id352 . -9) 10588) nil (25315 21322 609575 654000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 10546) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -3) (#("    " 0 4 (fontified t)) . 10523) (#("    " 0 4 (fontified t)) . 10494) (#("    " 0 4 (fontified t)) . 10484) (#("    " 0 4 (fontified t)) . 10460) (#("    " 0 4 (fontified t)) . 10443) (#("    " 0 4 (fontified t)) . 10413) (#("    " 0 4 (fontified t)) . 10375) 10577) nil (25315 21322 609561 700000) 0 nil])
([nil nil ((10360 . 10361) (#("    " 0 1 (fontified nil ws-butler-chg delete) 1 4 (fontified nil)) . 10360) (#("
" 0 1 (fontified t)) . -10360) 10333) nil (25315 21322 609552 925000) 0 nil])
([nil nil ((nil ws-butler-chg delete 10361 . 10362) (10360 . 10361) (nil ws-butler-chg delete 10364 . 10365) (10360 . 10364) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 10360)) nil (25315 21322 609548 749000) 0 nil])
([nil nil ((10360 . 10361) (#("    " 0 1 (fontified nil ws-butler-chg delete) 1 4 (fontified nil)) . 10360) (#("
" 0 1 (fontified t)) . -10360) 10333) nil (25315 21322 609544 736000) 0 nil])
([nil nil ((nil ws-butler-chg delete 10361 . 10362) (10360 . 10361) (nil ws-butler-chg delete 10364 . 10365) (10360 . 10364) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 10360)) nil (25315 21322 609542 228000) 0 nil])
([nil nil ((10360 . 10361) (#("    " 0 1 (fontified nil ws-butler-chg delete) 1 4 (fontified nil)) . 10360) (#("
" 0 1 (fontified t)) . -10360) 10333) nil (25315 21322 609539 708000) 0 nil])
([nil nil ((#("        mic_bit[i] = 0; \\
        mic_ts_lst[(i)] = mic_ts_cur[(i)]; \\
        mic_ts_cur[(i)] = TIM10->CNT; \\
        if (mic_ts_cur[(i)] - mic_ts_lst[(i)] > TSTH) \\
            mic_ts[(i)] = mic_ts_cur[(i)]; \\
" 0 8 (fontified t c-in-sws t) 8 9 (fontified t c-in-sws t) 9 10 (fontified t c-in-sws t) 10 11 (fontified t c-in-sws t) 11 12 (fontified t c-in-sws t) 12 13 (fontified t c-in-sws t) 13 14 (fontified t c-in-sws t) 14 15 (fontified t c-in-sws t) 15 16 (fontified t c-in-sws t) 16 17 (fontified t c-in-sws t) 17 18 (fontified t c-in-sws t) 18 19 (fontified t c-in-sws t) 19 20 (fontified t c-in-sws t) 20 21 (fontified t c-in-sws t) 21 22 (fontified t c-in-sws t) 22 23 (fontified t c-in-sws t) 23 24 (fontified t c-in-sws t) 24 25 (fontified t c-in-sws t) 25 26 (fontified t c-in-sws t) 26 34 (fontified t c-in-sws t) 34 35 (fontified t c-in-sws t) 35 43 (fontified t c-in-sws t) 43 44 (fontified t c-in-sws t) 44 45 (fontified t c-in-sws t) 45 46 (fontified t c-in-sws t) 46 47 (fontified t c-in-sws t) 47 48 (fontified t c-in-sws t) 48 49 (fontified t c-in-sws t) 49 50 (fontified t c-in-sws t) 50 51 (fontified t c-in-sws t) 51 52 (fontified t c-in-sws t) 52 62 (fontified t c-in-sws t) 62 63 (fontified t c-in-sws t) 63 64 (fontified t c-in-sws t) 64 65 (fontified t c-in-sws t) 65 66 (fontified t c-in-sws t) 66 67 (fontified t c-in-sws t) 67 68 (fontified t c-in-sws t) 68 69 (fontified t c-in-sws t) 69 70 (fontified t c-in-sws t) 70 71 (fontified t c-in-sws t) 71 79 (fontified t c-in-sws t) 79 80 (fontified t c-in-sws t) 80 88 (fontified t c-in-sws t) 88 89 (fontified t c-in-sws t) 89 90 (fontified t c-in-sws t) 90 91 (fontified t c-in-sws t) 91 92 (fontified t c-in-sws t) 92 93 (fontified t c-in-sws t) 93 94 (fontified t c-in-sws t) 94 95 (fontified t c-in-sws t) 95 96 (fontified t c-in-sws t) 96 97 (fontified t c-in-sws t) 97 98 (fontified t c-in-sws t) 98 99 (fontified t c-in-sws t) 99 100 (fontified t c-in-sws t) 100 101 (fontified t c-in-sws t) 101 102 (fontified t c-in-sws t) 102 103 (fontified t c-in-sws t) 103 104 (fontified t c-in-sws t) 104 105 (fontified t c-in-sws t) 105 106 (fontified t c-in-sws t) 106 107 (fontified t c-in-sws t) 107 108 (fontified t c-in-sws t) 108 109 (fontified t c-in-sws t) 109 110 (fontified t c-in-sws t) 110 111 (fontified t c-in-sws t) 111 119 (fontified t c-in-sws t) 119 120 (fontified t face font-lock-keyword-face c-in-sws t) 120 121 (fontified t face font-lock-keyword-face c-in-sws t) 121 122 (fontified t c-in-sws t) 122 123 (fontified t c-in-sws t) 123 133 (fontified t c-in-sws t) 133 134 (fontified t c-in-sws t) 134 135 (fontified t c-in-sws t) 135 136 (fontified t c-in-sws t) 136 137 (fontified t c-in-sws t) 137 138 (fontified t c-in-sws t) 138 139 (fontified t c-in-sws t) 139 140 (fontified t c-in-sws t) 140 141 (fontified t c-in-sws t) 141 151 (fontified t c-in-sws t) 151 152 (fontified t c-in-sws t) 152 153 (fontified t c-in-sws t) 153 154 (fontified t c-in-sws t) 154 155 (fontified t c-in-sws t) 155 156 (fontified t c-in-sws t) 156 157 (fontified t c-in-sws t) 157 158 (fontified t c-in-sws t) 158 159 (fontified t c-in-sws t) 159 160 (fontified t c-in-sws t) 160 161 (fontified t c-in-sws t) 161 162 (fontified t c-in-sws t) 162 163 (fontified t c-in-sws t) 163 164 (fontified t c-in-sws t) 164 165 (fontified t c-in-sws t) 165 166 (fontified t c-in-sws t) 166 167 (fontified t c-in-sws t) 167 179 (fontified t c-in-sws t) 179 180 (fontified t c-in-sws t) 180 181 (fontified t c-in-sws t) 181 182 (fontified t c-in-sws t) 182 183 (fontified t c-in-sws t) 183 184 (fontified t c-in-sws t) 184 185 (fontified t c-in-sws t) 185 186 (fontified t c-in-sws t) 186 187 (fontified t c-in-sws t) 187 188 (fontified t c-in-sws t) 188 189 (fontified t c-in-sws t) 189 190 (fontified t c-in-sws t) 190 191 (fontified t c-in-sws t) 191 192 (fontified t c-in-sws t) 192 193 (fontified t c-in-sws t) 193 203 (fontified t c-in-sws t) 203 204 (fontified t c-in-sws t) 204 205 (fontified t c-in-sws t) 205 206 (fontified t c-in-sws t) 206 207 (fontified t c-in-sws t) 207 208 (fontified t c-in-sws t) 208 209 (fontified t c-in-sws t) 209 210 (fontified t c-in-sws t) 210 211 (fontified t c-in-sws t) 211 212 (fontified t c-in-sws t)) . 2338) (undo-tree-id338 . -167) (undo-tree-id339 . -167) (undo-tree-id340 . -167) (undo-tree-id341 . -167) 2505) nil (25315 21322 609537 358000) 0 nil])
([nil nil ((6166 . 6167) (6165 . 6166) (6164 . 6165) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -6164) (undo-tree-id330 . -1) 6165 (6164 . 6165) (6163 . 6164) (6152 . 6163) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -6152) (undo-tree-id331 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -6153) (undo-tree-id332 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -6154) (undo-tree-id333 . -1) 6155 (6152 . 6155) (#("v" 0 1 (fontified t ws-butler-chg chg)) . -6152) (undo-tree-id334 . -1) 6153 (#("o" 0 1 (fontified t ws-butler-chg chg)) . -6153) (undo-tree-id335 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -6154) (undo-tree-id336 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -6155) (undo-tree-id337 . -1) 6156 (6152 . 6156) (6147 . 6152) 6137) nil (25315 21322 609523 864000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10140 . 10141) (#("
" 0 1 (c-in-sws t fontified nil ws-butler-chg chg)) . -10344) (10132 . 10345) 10126) nil (25315 21322 609506 932000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . 10157)) nil (25315 21322 609503 914000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . 10156)) nil (25315 21322 609501 957000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . 10200)) nil (25315 21322 609499 881000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . 10199)) nil (25315 21322 609497 639000) 0 nil])
([nil nil ((#("\\" 0 1 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t)) . 10238)) nil (25315 21322 609495 735000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t)) . 10237)) nil (25315 21322 609493 853000) 0 nil])
([nil nil ((#("\\" 0 1 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t)) . 10292)) nil (25315 21322 609491 897000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t)) . 10291)) nil (25315 21322 609489 820000) 0 nil])
([nil nil ((#("\\" 0 1 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t)) . 10335) (undo-tree-id328 . -1) (undo-tree-id329 . -1)) nil (25315 21322 609487 924000) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t)) . 10334) (undo-tree-id326 . -1) (undo-tree-id327 . -1)) nil (25315 21322 609483 854000) 0 nil])
([nil nil ((#("        mic_bit[i] = 0;
        mic_ts_lst[(i)] = mic_ts_cur[(i)];
        mic_ts_cur[(i)] = TIM10->CNT;
        if (mic_ts_cur[(i)] - mic_ts_lst[(i)] > TSTH)
            mic_ts[(i)] = mic_ts_cur[(i)];
" 0 1 (c-is-sws t fontified t ws-butler-chg chg) 1 7 (c-is-sws t fontified t ws-butler-chg chg) 7 8 (c-is-sws t fontified t ws-butler-chg chg rear-nonsticky t) 8 9 (c-is-sws t fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 21 (fontified t ws-butler-chg chg) 21 22 (fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (fontified t ws-butler-chg delete) 24 32 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t) 32 33 (fontified t ws-butler-chg chg c-is-sws t) 33 41 (fontified t ws-butler-chg chg) 41 42 (fontified t ws-butler-chg chg) 42 43 (fontified t ws-butler-chg chg) 43 44 (fontified t ws-butler-chg chg) 44 45 (fontified t ws-butler-chg chg) 45 46 (fontified t ws-butler-chg chg) 46 47 (fontified t ws-butler-chg chg) 47 48 (fontified t ws-butler-chg chg) 48 49 (fontified t ws-butler-chg chg) 49 50 (fontified t ws-butler-chg chg) 50 60 (fontified t ws-butler-chg chg) 60 61 (fontified t ws-butler-chg chg) 61 62 (fontified t ws-butler-chg chg) 62 63 (fontified t ws-butler-chg chg) 63 64 (fontified t ws-butler-chg chg) 64 65 (fontified t ws-butler-chg chg) 65 66 (fontified t ws-butler-chg chg) 66 67 (fontified t ws-butler-chg delete) 67 75 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 75 76 (ws-butler-chg chg c-is-sws t fontified t) 76 84 (ws-butler-chg chg fontified t) 84 85 (ws-butler-chg chg fontified t) 85 86 (ws-butler-chg chg fontified t) 86 87 (ws-butler-chg chg fontified t) 87 88 (ws-butler-chg chg fontified t) 88 89 (ws-butler-chg chg fontified t) 89 90 (ws-butler-chg chg fontified t) 90 91 (ws-butler-chg chg fontified t) 91 92 (ws-butler-chg chg fontified t) 92 93 (ws-butler-chg chg fontified t) 93 94 (ws-butler-chg chg fontified t) 94 95 (ws-butler-chg chg fontified t) 95 96 (ws-butler-chg chg fontified t) 96 97 (ws-butler-chg chg fontified t) 97 98 (ws-butler-chg chg fontified t) 98 99 (ws-butler-chg chg fontified t) 99 100 (ws-butler-chg chg fontified t) 100 101 (ws-butler-chg chg fontified t) 101 102 (ws-butler-chg chg fontified t) 102 103 (ws-butler-chg chg fontified t) 103 104 (ws-butler-chg chg fontified t) 104 105 (ws-butler-chg delete fontified t) 105 113 (ws-butler-chg chg c-is-sws t c-in-sws t fontified t) 113 114 (ws-butler-chg chg c-is-sws t fontified t face font-lock-keyword-face) 114 115 (ws-butler-chg chg fontified t face font-lock-keyword-face) 115 116 (ws-butler-chg chg fontified t) 116 117 (ws-butler-chg chg fontified t) 117 127 (ws-butler-chg chg fontified t) 127 128 (ws-butler-chg chg fontified t) 128 129 (ws-butler-chg chg fontified t) 129 130 (ws-butler-chg chg fontified t) 130 131 (ws-butler-chg chg fontified t) 131 132 (ws-butler-chg chg fontified t) 132 133 (ws-butler-chg chg fontified t) 133 134 (ws-butler-chg chg fontified t) 134 135 (ws-butler-chg chg fontified t) 135 145 (ws-butler-chg chg fontified t) 145 146 (ws-butler-chg chg fontified t) 146 147 (ws-butler-chg chg fontified t) 147 148 (ws-butler-chg chg fontified t) 148 149 (ws-butler-chg chg fontified t) 149 150 (ws-butler-chg chg fontified t) 150 151 (ws-butler-chg chg fontified t) 151 152 (ws-butler-chg chg fontified t) 152 153 (ws-butler-chg chg fontified t) 153 154 (ws-butler-chg chg fontified t) 154 155 (ws-butler-chg chg fontified t) 155 156 (ws-butler-chg chg fontified t) 156 157 (ws-butler-chg chg fontified t) 157 158 (ws-butler-chg chg fontified t) 158 159 (ws-butler-chg delete fontified t) 159 160 (ws-butler-chg chg c-is-sws t fontified t) 160 171 (ws-butler-chg chg fontified t) 171 172 (ws-butler-chg chg fontified t) 172 173 (ws-butler-chg chg fontified t) 173 174 (ws-butler-chg chg fontified t) 174 175 (ws-butler-chg chg fontified t) 175 176 (ws-butler-chg chg fontified t) 176 177 (ws-butler-chg chg fontified t) 177 178 (ws-butler-chg chg fontified t) 178 179 (ws-butler-chg chg fontified t) 179 180 (ws-butler-chg chg fontified t) 180 181 (ws-butler-chg chg fontified t) 181 182 (ws-butler-chg chg fontified t) 182 183 (ws-butler-chg chg fontified t) 183 184 (ws-butler-chg chg fontified t) 184 185 (ws-butler-chg chg fontified t) 185 195 (ws-butler-chg chg fontified t) 195 196 (ws-butler-chg chg fontified t) 196 197 (ws-butler-chg chg fontified t) 197 198 (ws-butler-chg chg fontified t) 198 199 (ws-butler-chg chg fontified t) 199 200 (ws-butler-chg chg fontified t) 200 201 (ws-butler-chg chg fontified t) 201 202 (ws-butler-chg delete fontified t)) . 10133) (undo-tree-id315 . -181) (undo-tree-id316 . -22) (undo-tree-id317 . -181) (undo-tree-id318 . -201) (undo-tree-id319 . -181) (undo-tree-id320 . -22) (undo-tree-id321 . -181) (undo-tree-id322 . 21) (undo-tree-id323 . -182) (undo-tree-id324 . 25) (undo-tree-id325 . -178) 10314) nil (25315 21322 609478 416000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified nil)) . -10372) (10170 . 10373) 10155) nil (25315 21322 609465 853000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t ws-butler-chg chg)) . -10411) (undo-tree-id314 . -8) 10419 (10410 . 10419) 10381) nil (25315 21322 609463 987000) 0 nil])
([nil nil ((#("
        " 0 1 (fontified t ws-butler-chg chg) 1 9 (fontified nil ws-butler-chg chg)) . 10410) (nil ws-butler-chg delete 10419 . 10420) (10411 . 10419)) nil (25315 21322 609461 232000) 0 nil])
([nil nil ((#("
        mic_bit[i] = 0;
        mic_ts_lst[(i)] = mic_ts_cur[(i)];
        mic_ts_cur[(i)] = TIM10->CNT;
        if (mic_ts_cur[(i)] - mic_ts_lst[(i)] > TSTH)
            mic_ts[(i)] = mic_ts_cur[(i)];
" 0 1 (fontified t ws-butler-chg chg) 1 2 (ws-butler-chg chg fontified t) 2 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg rear-nonsticky t fontified t) 9 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg chg fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t) 16 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t) 21 22 (ws-butler-chg chg fontified t) 22 23 (ws-butler-chg chg fontified t) 23 24 (ws-butler-chg chg fontified t) 24 25 (ws-butler-chg chg fontified t) 25 33 (ws-butler-chg chg fontified t) 33 34 (ws-butler-chg chg fontified t) 34 42 (ws-butler-chg chg fontified t) 42 43 (ws-butler-chg chg fontified t) 43 44 (ws-butler-chg chg fontified t) 44 45 (ws-butler-chg chg fontified t) 45 46 (ws-butler-chg chg fontified t) 46 47 (ws-butler-chg chg fontified t) 47 48 (ws-butler-chg chg fontified t) 48 49 (ws-butler-chg chg fontified t) 49 50 (ws-butler-chg chg fontified t) 50 51 (ws-butler-chg chg fontified t) 51 61 (ws-butler-chg chg fontified t) 61 62 (ws-butler-chg chg fontified t) 62 63 (ws-butler-chg chg fontified t) 63 64 (ws-butler-chg chg fontified t) 64 65 (ws-butler-chg chg fontified t) 65 66 (ws-butler-chg chg fontified t) 66 67 (ws-butler-chg chg fontified t) 67 68 (ws-butler-chg chg fontified t) 68 76 (ws-butler-chg chg fontified t) 76 77 (ws-butler-chg chg fontified t) 77 85 (ws-butler-chg chg fontified t) 85 86 (ws-butler-chg chg fontified t) 86 87 (ws-butler-chg chg fontified t) 87 88 (ws-butler-chg chg fontified t) 88 89 (ws-butler-chg chg fontified t) 89 90 (ws-butler-chg chg fontified t) 90 91 (ws-butler-chg chg fontified t) 91 92 (ws-butler-chg chg fontified t) 92 93 (ws-butler-chg chg fontified t) 93 94 (ws-butler-chg chg fontified t) 94 95 (ws-butler-chg chg fontified t) 95 96 (ws-butler-chg chg fontified t) 96 97 (ws-butler-chg chg fontified t) 97 98 (ws-butler-chg chg fontified t) 98 99 (ws-butler-chg chg fontified t) 99 100 (ws-butler-chg chg fontified t) 100 101 (ws-butler-chg chg fontified t) 101 102 (ws-butler-chg chg fontified t) 102 103 (ws-butler-chg chg fontified t) 103 104 (ws-butler-chg chg fontified t) 104 105 (ws-butler-chg chg fontified t) 105 106 (ws-butler-chg chg fontified t) 106 114 (ws-butler-chg chg fontified t) 114 115 (ws-butler-chg chg fontified t face font-lock-keyword-face) 115 116 (ws-butler-chg chg fontified t face font-lock-keyword-face) 116 117 (ws-butler-chg chg fontified t) 117 118 (ws-butler-chg chg fontified t) 118 128 (ws-butler-chg chg fontified t) 128 129 (ws-butler-chg chg fontified t) 129 130 (ws-butler-chg chg fontified t) 130 131 (ws-butler-chg chg fontified t) 131 132 (ws-butler-chg chg fontified t) 132 133 (ws-butler-chg chg fontified t) 133 134 (ws-butler-chg chg fontified t) 134 135 (ws-butler-chg chg fontified t) 135 136 (ws-butler-chg chg fontified t) 136 146 (ws-butler-chg chg fontified t) 146 147 (ws-butler-chg chg fontified t) 147 148 (ws-butler-chg chg fontified t) 148 149 (ws-butler-chg chg fontified t) 149 150 (ws-butler-chg chg fontified t) 150 151 (ws-butler-chg chg fontified t) 151 152 (ws-butler-chg chg fontified t) 152 153 (ws-butler-chg chg fontified t) 153 154 (ws-butler-chg chg fontified t) 154 155 (ws-butler-chg chg fontified t) 155 156 (ws-butler-chg chg fontified t) 156 157 (ws-butler-chg chg fontified t) 157 158 (ws-butler-chg chg fontified t) 158 159 (ws-butler-chg chg fontified t) 159 160 (ws-butler-chg chg fontified t) 160 161 (ws-butler-chg chg fontified nil) 161 172 (ws-butler-chg chg fontified nil) 172 173 (ws-butler-chg chg fontified nil) 173 174 (ws-butler-chg chg fontified nil) 174 175 (ws-butler-chg chg fontified nil) 175 176 (ws-butler-chg chg fontified nil) 176 177 (ws-butler-chg chg fontified nil) 177 178 (ws-butler-chg chg fontified nil) 178 179 (ws-butler-chg chg fontified nil) 179 180 (ws-butler-chg chg fontified nil) 180 181 (ws-butler-chg chg fontified nil) 181 182 (ws-butler-chg chg fontified nil) 182 183 (ws-butler-chg chg fontified nil) 183 184 (ws-butler-chg chg fontified nil) 184 185 (ws-butler-chg chg fontified nil) 185 186 (ws-butler-chg chg fontified nil) 186 196 (ws-butler-chg chg fontified nil) 196 197 (ws-butler-chg chg fontified nil) 197 198 (ws-butler-chg chg fontified nil) 198 199 (ws-butler-chg chg fontified nil) 199 200 (ws-butler-chg chg fontified nil) 200 201 (ws-butler-chg chg fontified nil) 201 202 (ws-butler-chg chg fontified nil) 202 203 (ws-butler-chg chg fontified nil)) . 10170) (undo-tree-id311 . -202) (undo-tree-id312 . -1) (undo-tree-id313 . -202) (nil ws-butler-chg delete 10373 . 10374) (10372 . 10373)) nil (25315 21322 609459 140000) 0 nil])
([nil nil ((nil ws-butler-chg delete 10335 . 10336) (10133 . 10335)) nil (25315 21322 609454 793000) 0 nil])
([nil nil ((nil ws-butler-chg delete 10335 . 10336) (10334 . 10335)) nil (25315 21322 609453 363000) 0 nil])
([nil nil ((10335 . 10336)) nil (25315 21322 609451 942000) 0 nil])
([nil nil ((nil ws-butler-chg delete 10292 . 10293) (10291 . 10292)) nil (25315 21322 609450 865000) 0 nil])
([nil nil ((10292 . 10293)) nil (25315 21322 609449 183000) 0 nil])
([nil nil ((nil ws-butler-chg delete 10238 . 10239) (10237 . 10238)) nil (25315 21322 609448 88000) 0 nil])
([nil nil ((10238 . 10239)) nil (25315 21322 609446 836000) 0 nil])
([nil nil ((nil ws-butler-chg delete 10200 . 10201) (10199 . 10200)) nil (25315 21322 609445 740000) 0 nil])
([nil nil ((10200 . 10201)) nil (25315 21322 609444 333000) 0 nil])
([nil nil ((nil ws-butler-chg delete 10157 . 10158) (10156 . 10157)) nil (25315 21322 609443 258000) 0 nil])
([nil nil ((10157 . 10158)) nil (25315 21322 609441 742000) 0 nil])
([nil nil ((#("
        mic_bit[i] = 0; \\
        mic_ts_lst[(i)] = mic_ts_cur[(i)]; \\
        mic_ts_cur[(i)] = TIM10->CNT; \\
        if (mic_ts_cur[(i)] - mic_ts_lst[(i)] > TSTH) \\
            mic_ts[(i)] = mic_ts_cur[(i)]; \\
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 1 2 (fontified nil ws-butler-chg chg c-is-sws t) 2 8 (fontified nil ws-butler-chg chg c-is-sws t) 8 9 (fontified nil ws-butler-chg chg rear-nonsticky nil c-is-sws t) 9 10 (fontified nil ws-butler-chg chg c-is-sws t) 10 11 (fontified nil ws-butler-chg chg) 11 12 (fontified nil ws-butler-chg chg) 12 13 (fontified nil ws-butler-chg chg) 13 14 (fontified nil ws-butler-chg chg) 14 15 (fontified nil ws-butler-chg chg) 15 16 (fontified nil ws-butler-chg chg) 16 17 (fontified nil ws-butler-chg chg) 17 18 (fontified nil ws-butler-chg chg) 18 19 (fontified nil ws-butler-chg chg) 19 20 (fontified nil ws-butler-chg chg) 20 21 (fontified nil ws-butler-chg chg) 21 22 (fontified nil ws-butler-chg chg) 22 23 (fontified nil ws-butler-chg chg) 23 24 (fontified nil ws-butler-chg chg) 24 25 (fontified nil ws-butler-chg chg) 25 26 (fontified nil ws-butler-chg chg) 26 27 (fontified nil) 27 35 (fontified t ws-butler-chg chg) 35 36 (fontified t ws-butler-chg chg) 36 44 (fontified t ws-butler-chg chg) 44 45 (fontified t ws-butler-chg chg) 45 46 (fontified t ws-butler-chg chg) 46 47 (fontified t ws-butler-chg chg) 47 48 (fontified t ws-butler-chg chg) 48 49 (fontified t ws-butler-chg chg) 49 50 (fontified t ws-butler-chg chg) 50 51 (fontified t ws-butler-chg chg) 51 52 (fontified t ws-butler-chg chg) 52 53 (fontified t ws-butler-chg chg) 53 63 (fontified t ws-butler-chg chg) 63 64 (fontified t ws-butler-chg chg) 64 65 (fontified t ws-butler-chg chg) 65 66 (fontified t ws-butler-chg chg) 66 67 (fontified t ws-butler-chg chg) 67 68 (fontified t ws-butler-chg chg) 68 69 (fontified t ws-butler-chg chg) 69 70 (fontified t ws-butler-chg chg) 70 71 (fontified t ws-butler-chg chg) 71 72 (fontified t) 72 80 (ws-butler-chg chg fontified t) 80 81 (ws-butler-chg chg fontified t) 81 89 (ws-butler-chg chg fontified t) 89 90 (ws-butler-chg chg fontified t) 90 91 (ws-butler-chg chg fontified t) 91 92 (ws-butler-chg chg fontified t) 92 93 (ws-butler-chg chg fontified t) 93 94 (ws-butler-chg chg fontified t) 94 95 (ws-butler-chg chg fontified t) 95 96 (ws-butler-chg chg fontified t) 96 97 (ws-butler-chg chg fontified t) 97 98 (ws-butler-chg chg fontified t) 98 99 (ws-butler-chg chg fontified t) 99 100 (ws-butler-chg chg fontified t) 100 101 (ws-butler-chg chg fontified t) 101 102 (ws-butler-chg chg fontified t) 102 103 (ws-butler-chg chg fontified t) 103 104 (ws-butler-chg chg fontified t) 104 105 (ws-butler-chg chg fontified t) 105 106 (ws-butler-chg chg fontified t) 106 107 (ws-butler-chg chg fontified t) 107 108 (ws-butler-chg chg fontified t) 108 109 (ws-butler-chg chg fontified t) 109 110 (ws-butler-chg chg fontified t c-in-sws t c-is-sws t) 110 111 (ws-butler-chg chg fontified t c-is-sws t c-in-sws t) 111 112 (fontified t c-in-sws t) 112 120 (ws-butler-chg chg fontified t c-is-sws t c-in-sws t) 120 121 (ws-butler-chg chg fontified t face font-lock-keyword-face c-is-sws t) 121 122 (ws-butler-chg chg fontified t face font-lock-keyword-face) 122 123 (ws-butler-chg chg fontified t) 123 124 (ws-butler-chg chg fontified t) 124 134 (ws-butler-chg chg fontified t) 134 135 (ws-butler-chg chg fontified t) 135 136 (ws-butler-chg chg fontified t) 136 137 (ws-butler-chg chg fontified t) 137 138 (ws-butler-chg chg fontified t) 138 139 (ws-butler-chg chg fontified t) 139 140 (ws-butler-chg chg fontified t) 140 141 (ws-butler-chg chg fontified t) 141 142 (ws-butler-chg chg fontified t) 142 152 (ws-butler-chg chg fontified t) 152 153 (ws-butler-chg chg fontified t) 153 154 (ws-butler-chg chg fontified t) 154 155 (ws-butler-chg chg fontified t) 155 156 (ws-butler-chg chg fontified t) 156 157 (ws-butler-chg chg fontified t) 157 158 (ws-butler-chg chg fontified t) 158 159 (ws-butler-chg chg fontified t) 159 160 (ws-butler-chg chg fontified t) 160 161 (ws-butler-chg chg fontified t) 161 162 (ws-butler-chg chg fontified t) 162 163 (ws-butler-chg chg fontified t) 163 164 (ws-butler-chg chg fontified t) 164 165 (ws-butler-chg chg fontified t) 165 166 (ws-butler-chg chg fontified t c-in-sws t c-is-sws t) 166 167 (ws-butler-chg chg fontified t c-in-sws t c-is-sws t) 167 168 (fontified t c-in-sws t) 168 169 (ws-butler-chg chg fontified nil c-is-sws t) 169 180 (ws-butler-chg chg fontified nil) 180 181 (ws-butler-chg chg fontified nil) 181 182 (ws-butler-chg chg fontified nil) 182 183 (ws-butler-chg chg fontified nil) 183 184 (ws-butler-chg chg fontified nil) 184 185 (ws-butler-chg chg fontified nil) 185 186 (ws-butler-chg chg fontified nil) 186 187 (ws-butler-chg chg fontified nil) 187 188 (ws-butler-chg chg fontified nil) 188 189 (ws-butler-chg chg fontified nil) 189 190 (ws-butler-chg chg fontified nil) 190 191 (ws-butler-chg chg fontified nil) 191 192 (ws-butler-chg chg fontified nil) 192 193 (ws-butler-chg chg fontified nil) 193 194 (ws-butler-chg chg fontified nil) 194 204 (ws-butler-chg chg fontified nil) 204 205 (ws-butler-chg chg fontified nil) 205 206 (ws-butler-chg chg fontified nil) 206 207 (ws-butler-chg chg fontified nil) 207 208 (ws-butler-chg chg fontified nil) 208 209 (ws-butler-chg chg fontified nil) 209 210 (ws-butler-chg chg fontified nil) 210 211 (ws-butler-chg chg fontified nil c-in-sws t c-is-sws t) 211 212 (ws-butler-chg chg fontified nil c-in-sws t c-is-sws t) 212 213 (fontified nil ws-butler-chg chg c-in-sws t)) . 10132) (undo-tree-id307 . -1) (undo-tree-id308 . -23) (undo-tree-id309 . -190) (undo-tree-id310 . -25) (10344 . 10345) (nil rear-nonsticky t 10140 . 10141)) nil (25315 21322 609440 306000) 0 nil])
([nil nil ((#("
    " 0 1 (fontified t ws-butler-chg chg) 1 5 (fontified nil ws-butler-chg chg)) . 6147) (#("void" 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg) 3 4 (fontified nil ws-butler-chg chg face font-lock-type-face)) . 6152) (6152 . 6156) (#("tim" 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg)) . 6152) (6152 . 6155) (#("time_update" 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg) 3 4 (fontified nil ws-butler-chg chg) 4 5 (fontified nil ws-butler-chg chg) 5 6 (fontified nil ws-butler-chg chg) 6 7 (fontified nil ws-butler-chg chg) 7 8 (fontified nil ws-butler-chg chg) 8 9 (fontified nil ws-butler-chg chg) 9 10 (fontified nil ws-butler-chg chg) 10 11 (fontified nil ws-butler-chg chg)) . 6152) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . 6163) (#("i" 0 1 (fontified nil ws-butler-chg chg)) . 6164) (nil ws-butler-chg delete 6165 . 6166) (6164 . 6165) (#("0" 0 1 (fontified nil ws-butler-chg chg)) . 6164) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . 6165) (#(";" 0 1 (fontified t ws-butler-chg chg)) . 6166)) nil (25315 21322 609433 560000) 0 nil])
([nil nil ((nil ws-butler-chg delete 2550 . 2551) (2338 . 2550)) nil (25315 21322 609429 267000) 0 nil])
([nil nil ((#("#define TS_UPD(i) do { \\
        mic_bit[i] = 0; \\
        mic_ts_lst[(i)] = mic_ts_cur[(i)]; \\
        mic_ts_cur[(i)] = TIM10->CNT; \\
        if (mic_ts_cur[(i)] - mic_ts_lst[(i)] > TSTH) \\
            mic_ts[(i)] = mic_ts_cur[(i)]; \\
    } while (0)

" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face) 2 3 (fontified t c-in-sws t face font-lock-preprocessor-face) 3 4 (fontified t c-in-sws t face font-lock-preprocessor-face) 4 5 (fontified t c-in-sws t face font-lock-preprocessor-face) 5 6 (fontified t c-in-sws t face font-lock-preprocessor-face) 6 7 (fontified t c-in-sws t face font-lock-preprocessor-face) 7 8 (fontified t c-in-sws t) 8 9 (fontified t c-in-sws t face font-lock-function-name-face) 9 10 (fontified t c-in-sws t face font-lock-function-name-face) 10 11 (fontified t c-in-sws t face font-lock-function-name-face) 11 12 (fontified t c-in-sws t face font-lock-function-name-face) 12 13 (fontified t c-in-sws t face font-lock-function-name-face) 13 14 (fontified t c-in-sws t face font-lock-function-name-face) 14 15 (fontified t c-in-sws t) 15 16 (fontified t c-in-sws t face font-lock-variable-name-face) 16 17 (fontified t c-in-sws t) 17 18 (c-in-sws t fontified t) 18 19 (fontified t c-in-sws t face font-lock-keyword-face) 19 20 (fontified t c-in-sws t face font-lock-keyword-face) 20 21 (fontified t c-in-sws t) 21 22 (fontified t c-in-sws t) 22 23 (fontified t c-in-sws t) 23 24 (fontified t c-in-sws t) 24 25 (fontified t c-in-sws t) 25 33 (fontified t c-in-sws t) 33 34 (fontified t c-in-sws t) 34 35 (fontified t c-in-sws t) 35 36 (fontified t c-in-sws t) 36 37 (fontified t c-in-sws t) 37 38 (fontified t c-in-sws t) 38 39 (fontified t c-in-sws t) 39 40 (fontified t c-in-sws t) 40 41 (fontified t c-in-sws t) 41 42 (fontified t c-in-sws t) 42 43 (fontified t c-in-sws t) 43 44 (fontified t c-in-sws t) 44 45 (fontified t c-in-sws t) 45 46 (fontified t c-in-sws t) 46 47 (fontified t c-in-sws t) 47 48 (fontified t c-in-sws t) 48 49 (fontified t c-in-sws t) 49 50 (fontified t c-in-sws t) 50 51 (fontified t c-in-sws t) 51 59 (fontified t c-in-sws t) 59 60 (fontified t c-in-sws t) 60 68 (fontified t c-in-sws t) 68 69 (fontified t c-in-sws t) 69 70 (fontified t c-in-sws t) 70 71 (fontified t c-in-sws t) 71 72 (fontified t c-in-sws t) 72 73 (fontified t c-in-sws t) 73 74 (fontified t c-in-sws t) 74 75 (fontified t c-in-sws t) 75 76 (fontified t c-in-sws t) 76 77 (fontified t c-in-sws t) 77 87 (fontified t c-in-sws t) 87 88 (fontified t c-in-sws t) 88 89 (fontified t c-in-sws t) 89 90 (fontified t c-in-sws t) 90 91 (fontified t c-in-sws t) 91 92 (fontified t c-in-sws t) 92 93 (fontified t c-in-sws t) 93 94 (fontified t c-in-sws t) 94 95 (fontified t c-in-sws t) 95 96 (fontified t c-in-sws t) 96 104 (fontified t c-in-sws t) 104 105 (fontified t c-in-sws t) 105 113 (fontified t c-in-sws t) 113 114 (fontified t c-in-sws t) 114 115 (fontified t c-in-sws t) 115 116 (fontified t c-in-sws t) 116 117 (fontified t c-in-sws t) 117 118 (fontified t c-in-sws t) 118 119 (fontified t c-in-sws t) 119 120 (fontified t c-in-sws t) 120 121 (fontified t c-in-sws t) 121 122 (fontified t c-in-sws t) 122 123 (fontified t c-in-sws t) 123 124 (fontified t c-in-sws t) 124 125 (fontified t c-in-sws t) 125 126 (fontified t c-in-sws t) 126 127 (fontified t c-in-sws t) 127 128 (fontified t c-in-sws t) 128 129 (fontified t c-in-sws t) 129 130 (fontified t c-in-sws t) 130 131 (fontified t c-in-sws t) 131 132 (fontified t c-in-sws t) 132 133 (fontified t c-in-sws t) 133 134 (fontified t c-in-sws t) 134 135 (fontified t c-in-sws t) 135 136 (fontified t c-in-sws t) 136 144 (fontified t c-in-sws t) 144 145 (fontified t c-in-sws t face font-lock-keyword-face) 145 146 (fontified t c-in-sws t face font-lock-keyword-face) 146 147 (fontified t c-in-sws t) 147 148 (fontified t c-in-sws t) 148 158 (fontified t c-in-sws t) 158 159 (fontified t c-in-sws t) 159 160 (fontified t c-in-sws t) 160 161 (fontified t c-in-sws t) 161 162 (fontified t c-in-sws t) 162 163 (fontified t c-in-sws t) 163 164 (fontified t c-in-sws t) 164 165 (fontified t c-in-sws t) 165 166 (fontified t c-in-sws t) 166 176 (fontified t c-in-sws t) 176 177 (fontified t c-in-sws t) 177 178 (fontified t c-in-sws t) 178 179 (fontified t c-in-sws t) 179 180 (fontified t c-in-sws t) 180 181 (fontified t c-in-sws t) 181 182 (fontified t c-in-sws t) 182 183 (fontified t c-in-sws t) 183 184 (fontified t c-in-sws t) 184 185 (fontified t c-in-sws t) 185 186 (fontified t c-in-sws t) 186 187 (fontified t c-in-sws t) 187 188 (fontified t c-in-sws t) 188 189 (fontified t c-in-sws t) 189 190 (fontified t c-in-sws t) 190 191 (fontified t c-in-sws t) 191 192 (fontified t c-in-sws t) 192 204 (c-in-sws t fontified t) 204 205 (c-in-sws t fontified t) 205 206 (c-in-sws t fontified t) 206 207 (c-in-sws t fontified t) 207 208 (c-in-sws t fontified t) 208 209 (c-in-sws t fontified t) 209 210 (c-in-sws t fontified t) 210 211 (c-in-sws t fontified t) 211 212 (c-in-sws t fontified t) 212 213 (c-in-sws t fontified t) 213 214 (c-in-sws t fontified t) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t fontified t) 216 217 (c-in-sws t fontified t) 217 218 (c-in-sws t fontified t) 218 228 (c-in-sws t fontified t) 228 229 (c-in-sws t fontified t) 229 230 (c-in-sws t fontified t) 230 231 (c-in-sws t fontified t) 231 232 (c-in-sws t fontified t) 232 233 (c-in-sws t fontified t) 233 234 (c-in-sws t fontified t) 234 235 (c-in-sws t fontified t) 235 236 (c-in-sws t fontified t) 236 237 (c-in-sws t fontified t) 237 238 (c-in-sws t fontified t) 238 241 (c-in-sws t fontified t) 241 242 (c-in-sws t fontified t) 242 243 (c-in-sws t fontified t) 243 248 (c-in-sws t fontified t face font-lock-keyword-face) 248 249 (c-in-sws t fontified t) 249 250 (c-in-sws t fontified t) 250 251 (c-in-sws t fontified t) 251 252 (c-in-sws t fontified t) 252 253 (c-in-sws t fontified t) 253 254 (c-is-sws t fontified t)) . 2313) (undo-tree-id300 . -253) (undo-tree-id301 . -253) (undo-tree-id302 . -252) (undo-tree-id303 . -25) (undo-tree-id304 . -253) (undo-tree-id305 . -25) (undo-tree-id306 . -253) 2566) nil (25315 21322 609427 597000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2419 . 2420) (#("
" 0 1 (c-is-sws t fontified nil ws-butler-chg chg)) . -2673) (2419 . 2674)) nil (25315 21322 609420 138000) 0 nil])
([nil nil ((#("#" 0 1 (c-is-sws t c-in-sws t ws-butler-chg chg fontified t face font-lock-preprocessor-face)) . 2420)) nil (25315 21322 609418 251000) 0 nil])
([nil nil ((#("define " 0 1 (ws-butler-chg delete fontified t face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t face font-lock-type-face) 5 6 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (ws-butler-chg chg fontified t)) . 2420)) nil (25315 21322 609416 913000) 0 nil])
([nil nil ((2425 . 2440) (2420 . 2425) (2420 . 2421) (#("TS_UPD(i) do { \\
" 0 1 (ws-butler-chg delete fontified t face font-lock-function-name-face) 1 2 (ws-butler-chg chg fontified t face font-lock-function-name-face) 2 3 (ws-butler-chg chg fontified t face font-lock-function-name-face) 3 4 (ws-butler-chg chg fontified t face font-lock-function-name-face) 4 5 (ws-butler-chg chg fontified t face font-lock-function-name-face) 5 6 (ws-butler-chg chg fontified t face font-lock-function-name-face) 6 7 (ws-butler-chg chg fontified t c-type c-decl-arg-start) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 10 (ws-butler-chg chg fontified t) 10 11 (ws-butler-chg chg fontified t face font-lock-keyword-face) 11 12 (ws-butler-chg chg fontified t face font-lock-keyword-face) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t c-in-sws t c-is-sws t) 15 16 (ws-butler-chg chg fontified t c-in-sws t c-is-sws t) 16 17 (ws-butler-chg chg fontified t c-in-sws t)) . 2420)) nil (25315 21322 609415 513000) 0 nil])
([nil nil ((#("        mp_timestamp[i] = TIM10->CNT;
        mic_order[order] = i;
        order++;
        if (order >= 4)
        {
            sample_flag = 1;
            order = 0;
        }
" 0 1 (ws-butler-chg delete fontified t) 1 8 (fontified t) 8 9 (ws-butler-chg delete fontified t) 9 26 (fontified t) 26 37 (fontified t) 37 38 (fontified t) 38 46 (fontified t) 46 47 (ws-butler-chg delete fontified t) 47 68 (fontified t) 68 76 (fontified t) 76 77 (ws-butler-chg delete fontified t) 77 85 (fontified t) 85 93 (fontified t) 93 94 (ws-butler-chg delete fontified t face font-lock-keyword-face) 94 95 (fontified t face font-lock-keyword-face) 95 109 (fontified t) 109 117 (fontified t) 117 118 (ws-butler-chg delete fontified t) 118 119 (fontified t) 119 127 (fontified t) 127 128 (ws-butler-chg delete fontified t) 128 148 (fontified t) 148 156 (fontified t) 156 157 (ws-butler-chg delete fontified t) 157 171 (fontified t) 171 179 (fontified t) 179 180 (ws-butler-chg delete fontified t) 180 181 (fontified t)) . 10359) (undo-tree-id291 . -176) (undo-tree-id292 . -5) (undo-tree-id293 . -176) (undo-tree-id294 . -26) (undo-tree-id295 . -181) (undo-tree-id296 . -181) (undo-tree-id297 . -176) (undo-tree-id298 . -5) (undo-tree-id299 . -176) 10535) nil (25315 21322 609412 855000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2660 . 2661) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -2833) (undo-tree-id290 . -1) (2652 . 2834) 2619) nil (25315 21322 609397 487000) 0 nil])
([nil nil ((2652 . 2653) 2616) nil (25315 21322 609394 34000) 0 nil])
([nil nil ((2691 . 2693)) nil (25315 21322 609392 521000) 0 nil])
([nil nil ((2723 . 2725) (#("\\" 0 1 (ws-butler-chg chg fontified t)) . -2723) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2724) (undo-tree-id288 . -1) (undo-tree-id289 . -1) 2725 (2723 . 2725)) nil (25315 21322 609390 373000) 0 nil])
([nil nil ((2742 . 2744)) nil (25315 21322 609348 261000) 0 nil])
([nil nil ((2768 . 2770)) nil (25315 21322 609347 269000) 0 nil])
([nil nil ((2770 . 2771) (#("        " 0 1 (ws-butler-chg delete fontified nil) 1 8 (ws-butler-chg chg fontified nil)) . 2770) (undo-tree-id282 . 8) (#("
" 0 1 (ws-butler-chg chg fontified t)) . -2770) (undo-tree-id283 . 1) 2769) nil (25315 21322 609345 618000) 0 nil])
([nil nil ((#("\\" 0 1 (ws-butler-chg chg fontified t)) . 2769)) nil (25315 21322 609342 44000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 2769) (undo-tree-id281 . -1)) nil (25315 21322 609340 824000) 0 nil])
([nil nil ((2770 . 2772) (#("\\" 0 1 (ws-butler-chg chg fontified t)) . -2770) (undo-tree-id279 . -1) (undo-tree-id280 . -1) 2771 (2770 . 2771)) nil (25315 21322 609338 353000) 0 nil])
([nil nil ((2801 . 2803)) nil (25315 21322 609334 19000) 0 nil])
([nil nil ((2826 . 2828)) nil (25315 21322 609332 31000) 0 nil])
([nil nil ((2838 . 2840) (#("\\" 0 1 (ws-butler-chg chg fontified t)) . -2838) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2839) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 2840 (2838 . 2840)) nil (25315 21322 609326 147000) 0 nil])
([nil nil ((#("          " 0 10 (fontified t ws-butler-chg chg)) . -2858) (undo-tree-id376 . -10) 2868 (2857 . 2868) (t 25315 21322 616819 213000) 2857) nil (25315 21456 261009 151000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2858) (undo-tree-id375 . 1)) nil (25315 21456 261006 626000) 0 nil])
([nil nil ((2653 . 2662)) nil (25315 21456 261004 939000) 0 nil])
([nil nil ((#("          " 0 10 (fontified t ws-butler-chg chg)) . -2867) (undo-tree-id374 . -10) 2877 (2866 . 2877) 2866) nil (25315 21456 261003 470000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 2867) (undo-tree-id373 . 1)) nil (25315 21456 260999 490000) 0 nil])
([nil nil ((#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2465)) nil (25315 21456 260997 698000) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . 2464)) nil (25315 21456 260996 669000) 0 nil])
([nil nil ((2448 . 2449) (2447 . 2448) (2446 . 2447) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2446) (undo-tree-id371 . -1) 2447 (2441 . 2447) (2440 . 2441) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2440) (undo-tree-id372 . -1) 2441 (2440 . 2441)) nil (25315 21456 260994 825000) 0 nil])
([nil nil ((2447 . 2448) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2447) (undo-tree-id370 . -1) 2448) nil (25315 21456 260990 343000) 0 nil])
([nil nil ((#("    } while (0)
" 0 1 (c-is-sws t fontified t) 1 4 (c-is-sws t fontified t) 4 5 (c-is-sws t fontified t) 5 6 (fontified t) 6 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (c-in-sws t fontified t)) . 2857) (undo-tree-id368 . -15) (undo-tree-id369 . -16)) nil (25315 21456 260987 677000) 0 nil])
([nil nil ((#("        " 0 1 (fontified nil ws-butler-chg chg c-is-sws t) 1 8 (fontified nil ws-butler-chg chg c-is-sws t)) . 2857) (undo-tree-id365 . -8) (2865 . 2866) (#("{" 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -2865) (undo-tree-id366 . -1) 2866 (2865 . 2866) (#("|" 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -2865) (undo-tree-id367 . -1) 2866 (2865 . 2866) (2856 . 2865) 2845) nil (25315 21456 260984 47000) 0 nil])
([nil nil ((#("    " 0 1 (c-is-sws t fontified t) 1 4 (c-is-sws t fontified t)) . 2797) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (#("    " 0 1 (c-is-sws t fontified t) 1 4 (c-is-sws t fontified t)) . 2776) (#("    " 0 1 (c-is-sws t fontified t) 1 4 (c-is-sws t fontified t)) . 2749) (#("    " 0 1 (c-is-sws t fontified t) 1 4 (c-is-sws t fontified t)) . 2725) (#("    " 0 1 (c-is-sws t fontified t) 1 4 (c-is-sws t fontified t)) . 2710) (#("    " 0 1 (c-is-sws t fontified t) 1 4 (c-is-sws t fontified t)) . 2682) (#("    " 0 1 (fontified t c-is-sws t) 1 4 (fontified t)) . 2646) (#("    " 0 1 (ws-butler-chg chg fontified t c-is-sws t) 1 2 (ws-butler-chg chg c-in-sws t fontified t) 2 3 (ws-butler-chg chg c-in-sws t fontified t) 3 4 (ws-butler-chg chg c-in-sws t fontified t)) . 2640) (#("    " 0 4 (c-is-sws t c-in-sws t fontified t)) . 2599) (#("    " 0 4 (c-is-sws t c-in-sws t fontified t)) . 2547) (#("    " 0 4 (c-is-sws t c-in-sws t fontified t)) . 2511) (#("    " 0 4 (c-is-sws t c-in-sws t fontified t)) . 2470) (#("    " 0 1 (c-is-sws t c-in-sws t fontified t) 1 4 (c-is-sws t c-in-sws t fontified t)) . 2450) (undo-tree-id364 . -3) 2453) nil (25315 21456 260976 88000) 0 nil])
([nil nil ((#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2792) (2793 . 2793) (#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2785) (2786 . 2786) (#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2765) (2766 . 2766) (#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2739) (2740 . 2740) (#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2716) (2717 . 2717) (#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2702) (2703 . 2703) (#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2675) (2676 . 2676) (#("\\" 0 1 (ws-butler-chg chg c-in-sws t fontified t c-is-sws t)) . 2640) (2641 . 2641) (#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2635) (2636 . 2636) (#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2595) (2596 . 2596) (#("\\" 0 1 (c-is-sws t c-in-sws t fontified t)) . 2544) (2545 . 2545) (#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2509) (2510 . 2510)) nil (25315 21456 260967 262000) 0 nil])
([nil nil ((nil ws-butler-chg delete 2510 . 2511) (2509 . 2510) (nil ws-butler-chg delete 2545 . 2546) (2544 . 2545) (nil ws-butler-chg delete 2596 . 2597) (2595 . 2596) (nil ws-butler-chg delete 2636 . 2637) (2635 . 2636) (nil ws-butler-chg delete 2641 . 2642) (2640 . 2641) (nil ws-butler-chg delete 2676 . 2677) (2675 . 2676) (nil ws-butler-chg delete 2703 . 2704) (2702 . 2703) (nil ws-butler-chg delete 2717 . 2718) (2716 . 2717) (nil ws-butler-chg delete 2740 . 2741) (2739 . 2740) (nil ws-butler-chg delete 2766 . 2767) (2765 . 2766) (nil ws-butler-chg delete 2786 . 2787) (2785 . 2786) (nil ws-butler-chg delete 2793 . 2794) (2792 . 2793)) nil (25315 21456 260960 459000) 0 nil])
([nil nil ((#(" \\" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t c-in-sws t c-is-sws t)) . 2780) (2782 . 2782) (#(" \\" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t)) . 2774) (2776 . 2776) (#(" \\" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t c-in-sws t c-is-sws t)) . 2755) (2757 . 2757) (#(" \\" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t c-in-sws t c-is-sws t)) . 2730) (2732 . 2732) (#(" \\" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t c-in-sws t c-is-sws t)) . 2708) (2710 . 2710) (#(" \\" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t c-in-sws t c-is-sws t)) . 2695) (2697 . 2697) (#(" \\" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t c-in-sws t c-is-sws t)) . 2669) (2671 . 2671) (#(" \\" 0 1 (ws-butler-chg chg c-in-sws t fontified t) 1 2 (ws-butler-chg chg fontified t c-in-sws t c-is-sws t)) . 2635) (2637 . 2637) (#(" \\" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t c-in-sws t c-is-sws t)) . 2631) (2633 . 2633) (#(" \\" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t c-in-sws t c-is-sws t)) . 2592) (2594 . 2594) (#(" \\" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t)) . 2542) (2544 . 2544) (#(" \\" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t c-in-sws t c-is-sws t)) . 2508) (2510 . 2510)) nil (25315 21456 260952 44000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t)) . 2634)) nil (25315 21456 260945 412000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t)) . 2633)) nil (25315 21456 260944 48000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t c-in-sws t)) . 2632)) nil (25315 21456 260942 246000) 0 nil])
([nil nil ((2432 . 2441) (#("function" 0 1 (fontified t face font-lock-function-name-face) 1 2 (fontified t face font-lock-function-name-face) 2 3 (fontified t face font-lock-function-name-face) 3 4 (fontified t face font-lock-function-name-face) 4 5 (fontified t face font-lock-function-name-face) 5 6 (fontified t face font-lock-function-name-face) 6 7 (fontified t face font-lock-function-name-face) 7 8 (fontified t face font-lock-function-name-face)) . 2432) (undo-tree-id360 . -7) (undo-tree-id361 . -7)) nil (25315 21456 260937 693000) 0 nil])
([nil nil ((#("void update_timestamp(int i)
{
    mic_bit[i] = 0;
    mic_ts_lst[(i)] = mic_ts_cur[(i)];
    mic_ts_cur[(i)] = TIM10->CNT;
    if (mic_ts_cur[(i)] - mic_ts_lst[(i)] > TSTH)
        mic_ts[(i)] = mic_ts_cur[(i)];

    mp_timestamp[i] = TIM10->CNT;
    mic_order[order] = i;
    order++;
    if (order >= 4) {
        sample_flag = 1;
        order = 0;
    }
}

" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t face font-lock-function-name-face) 6 7 (fontified t face font-lock-function-name-face) 7 8 (fontified t face font-lock-function-name-face) 8 9 (fontified t face font-lock-function-name-face) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t c-type c-decl-arg-start) 22 23 (fontified t face font-lock-type-face) 23 24 (fontified t face font-lock-type-face) 24 25 (fontified t face font-lock-type-face) 25 26 (fontified t) 26 27 (fontified t face font-lock-variable-name-face) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (c-is-sws t c-in-sws t fontified t) 32 35 (c-is-sws t c-in-sws t fontified t) 35 36 (c-is-sws t fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (c-is-sws t c-in-sws t fontified t) 52 55 (c-is-sws t c-in-sws t fontified t) 55 56 (c-is-sws t fontified t) 56 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (c-is-sws t c-in-sws t fontified t) 91 94 (c-is-sws t c-in-sws t fontified t) 94 95 (c-is-sws t fontified t) 95 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (c-is-sws t c-in-sws t fontified t) 125 128 (c-is-sws t c-in-sws t fontified t) 128 129 (c-is-sws t fontified t face font-lock-keyword-face) 129 130 (fontified t face font-lock-keyword-face) 130 131 (fontified t) 131 132 (fontified t) 132 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 160 (fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t) 166 167 (fontified t) 167 168 (fontified t) 168 169 (fontified t) 169 170 (fontified t) 170 171 (fontified t) 171 172 (fontified t) 172 173 (fontified t) 173 174 (fontified t) 174 175 (c-is-sws t c-in-sws t fontified t) 175 182 (c-is-sws t c-in-sws t fontified t) 182 183 (c-is-sws t fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t) 191 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (c-in-sws t fontified t) 215 217 (c-in-sws t fontified t) 217 218 (rear-nonsticky t c-in-sws t fontified t) 218 219 (c-is-sws t fontified t) 219 229 (fontified t) 229 230 (fontified t) 230 236 (fontified t) 236 247 (fontified t) 247 248 (fontified t) 248 249 (c-is-sws t fontified t) 249 252 (c-is-sws t fontified t) 252 253 (c-is-sws t fontified t) 253 260 (fontified t) 260 261 (fontified t) 261 273 (fontified t) 273 274 (fontified t) 274 275 (c-is-sws t fontified t) 275 278 (c-is-sws t fontified t) 278 279 (c-is-sws t fontified t) 279 286 (fontified t) 286 287 (fontified t) 287 288 (c-is-sws t fontified t) 288 291 (c-is-sws t fontified t) 291 292 (c-is-sws t fontified t face font-lock-keyword-face) 292 293 (fontified t face font-lock-keyword-face) 293 306 (fontified t) 306 307 (fontified t) 307 308 (fontified t) 308 309 (fontified t) 309 310 (c-is-sws t fontified t) 310 313 (c-is-sws t fontified t) 313 314 (c-is-sws t fontified t) 314 318 (c-is-sws t fontified t) 318 333 (fontified t) 333 334 (fontified t) 334 335 (c-is-sws t fontified t) 335 338 (c-is-sws t fontified t) 338 339 (c-is-sws t fontified t) 339 343 (c-is-sws t fontified t) 343 352 (fontified t) 352 353 (fontified t) 353 354 (c-is-sws t fontified t) 354 357 (c-is-sws t fontified t) 357 358 (c-is-sws t fontified t) 358 359 (fontified t) 359 360 (c-is-sws t fontified t) 360 361 (fontified t) 361 362 (c-in-sws t c-is-sws t fontified t)) . 2420) (undo-tree-id418 . -361) (undo-tree-id419 . 341) (undo-tree-id420 . -20) (undo-tree-id421 . -361) (undo-tree-id422 . -214) (undo-tree-id423 . -358) (undo-tree-id424 . -361) (undo-tree-id425 . -361) (undo-tree-id426 . -12) (undo-tree-id427 . -31) (undo-tree-id428 . -31) (undo-tree-id429 . -31) (undo-tree-id430 . -89) (undo-tree-id431 . -360) (undo-tree-id432 . -22) (undo-tree-id433 . -28) (undo-tree-id434 . -20) (undo-tree-id435 . -361) (undo-tree-id436 . -20) (undo-tree-id437 . -361) 2781 (t 25315 21456 267070 103000)) nil (25315 21510 663716 136000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10025 . 10026) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -10387) (10025 . 10388) 10003) nil (25315 21510 663693 166000) 0 nil])
([nil nil ((#("void update_timestamp()
{
    // update tick
    for (uint8_t i = 0; i < 4; i++) {
    }
}
" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 12 (fontified t face font-lock-function-name-face) 12 16 (fontified t face font-lock-function-name-face) 16 21 (fontified t face font-lock-function-name-face) 21 26 (fontified t) 26 30 (c-in-sws t c-is-sws t fontified t) 30 31 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 31 33 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 33 44 (c-in-sws t fontified t face font-lock-comment-face) 44 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-is-sws t c-in-sws t fontified t) 46 49 (c-is-sws t c-in-sws t fontified t) 49 50 (c-is-sws t fontified t face font-lock-keyword-face) 50 52 (fontified t face font-lock-keyword-face) 52 54 (fontified t) 54 60 (fontified t face font-lock-type-face) 60 61 (fontified t c-type c-decl-id-start face font-lock-type-face) 61 62 (fontified t) 62 63 (fontified t face font-lock-variable-name-face) 63 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 88 (fontified t) 88 89 (fontified t) 89 91 (fontified t)) . 10388) (undo-tree-id401 . -89) (undo-tree-id402 . -89) (undo-tree-id403 . -83) (undo-tree-id404 . -49) (undo-tree-id405 . -49) (undo-tree-id406 . -49) (undo-tree-id407 . -83) (undo-tree-id408 . -83) (undo-tree-id409 . -83) (undo-tree-id410 . -87) (undo-tree-id411 . -87) (undo-tree-id412 . -89) (undo-tree-id413 . -89) (undo-tree-id414 . 2) (undo-tree-id415 . -90) (undo-tree-id416 . 67) (undo-tree-id417 . -25) 10477) nil (25315 21510 663688 364000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . 10092) (undo-tree-id399 . 1) (undo-tree-id400 . -1)) nil (25315 21510 663596 213000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . 10130)) nil (25315 21510 663591 731000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . 10093) (undo-tree-id397 . 1) (undo-tree-id398 . -1)) nil (25315 21510 663589 850000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . 10130)) nil (25315 21510 663585 171000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . 10108) (undo-tree-id395 . 1) (undo-tree-id396 . -1)) nil (25315 21510 663583 328000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . 10109) (undo-tree-id393 . 1) (undo-tree-id394 . -1)) nil (25315 21510 663577 225000) 0 nil])
([nil nil ((#("(" 0 1 (ws-butler-chg chg fontified t)) . 10227) (undo-tree-id391 . 1) (undo-tree-id392 . -1)) nil (25315 21510 663573 385000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified t)) . 10228) (undo-tree-id389 . 1) (undo-tree-id390 . -1)) nil (25315 21510 663569 529000) 0 nil])
([nil nil ((#("(" 0 1 (ws-butler-chg chg fontified t)) . 10181) (undo-tree-id387 . 1) (undo-tree-id388 . -1)) nil (25315 21510 663566 280000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified t)) . 10182) (undo-tree-id385 . 1) (undo-tree-id386 . -1)) nil (25315 21510 663563 685000) 0 nil])
([nil nil ((#("(" 0 1 (ws-butler-chg chg fontified t)) . 10163) (undo-tree-id383 . 1) (undo-tree-id384 . -1)) nil (25315 21510 663561 133000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified t)) . 10164) (undo-tree-id381 . 1) (undo-tree-id382 . -1)) nil (25315 21510 663557 829000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified t)) . 10207) (undo-tree-id379 . 1) (undo-tree-id380 . -1)) nil (25315 21510 663554 152000) 0 nil])
([nil nil ((#("(" 0 1 (ws-butler-chg chg fontified t)) . 10205) (undo-tree-id377 . 1) (undo-tree-id378 . -1)) nil (25315 21510 663546 935000) 0 nil])
([nil nil ((10262 . 10272) (10261 . 10262) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -10261) (undo-tree-id438 . -1) 10262 (10261 . 10262) (10260 . 10261) (10259 . 10260) (t 25315 21510 670030 171000)) nil (25315 21701 510030 841000) 0 nil])
([nil nil ((#("    mp_timestamp[i] = TIM10->CNT; // mic_ts[i]
" 0 1 (fontified t) 1 3 (fontified t) 3 4 (rear-nonsticky t fontified t) 4 5 (fontified t) 5 15 (fontified t) 15 16 (fontified t) 16 22 (fontified t) 22 33 (fontified t) 33 34 (fontified t c-in-sws t c-is-sws t) 34 35 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 35 36 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 36 37 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 37 38 (fontified t face font-lock-comment-face c-in-sws t) 38 39 (fontified t face font-lock-comment-face c-in-sws t) 39 40 (fontified t face font-lock-comment-face c-in-sws t) 40 41 (fontified t face font-lock-comment-face c-in-sws t) 41 42 (fontified t face font-lock-comment-face c-in-sws t) 42 43 (fontified t face font-lock-comment-face c-in-sws t) 43 44 (fontified t face font-lock-comment-face c-in-sws t) 44 45 (fontified t face font-lock-comment-face c-in-sws t) 45 46 (fontified t face font-lock-comment-face c-in-sws t) 46 47 (fontified t face font-lock-comment-face c-in-sws t)) . 10226) (undo-tree-id453 . 1) (undo-tree-id454 . -45) (undo-tree-id455 . -24) 10250 (t 25315 21701 517555 93000)) nil (25315 21834 635281 528000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face c-in-sws t fontified nil ws-butler-chg chg)) . -10271) (10224 . 10272) 10214) nil (25315 21834 635275 522000) 0 nil])
([nil nil ((10229 . 10233)) nil (25315 21834 635273 679000) 0 nil])
([nil nil ((10190 . 10191) (10189 . 10190)) nil (25315 21834 635272 125000) 0 nil])
([nil nil ((10278 . 10282) (#("        " 0 1 (fontified nil ws-butler-chg chg c-is-sws t) 1 8 (fontified nil ws-butler-chg chg c-is-sws t)) . 10278) (undo-tree-id452 . -8) (10286 . 10287) (10277 . 10286) 10273) nil (25315 21834 635270 758000) 0 nil])
([nil nil ((#(" // mic_ts[i]" 0 1 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t) 1 2 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 4 5 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face) 5 6 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face) 6 7 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face) 7 8 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face) 8 9 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face) 9 10 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face) 10 11 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face) 11 12 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face) 12 13 (c-in-sws t ws-butler-chg chg fontified t face font-lock-comment-face)) . 10264) (undo-tree-id450 . -13) (undo-tree-id451 . -13)) nil (25315 21834 635268 128000) 0 nil])
([nil nil ((#("TIM10->CNT;" 0 11 (ws-butler-chg chg fontified t)) . 10253) (undo-tree-id448 . -11) (undo-tree-id449 . -11)) nil (25315 21834 635265 175000) 0 nil])
([nil nil ((#("        mp_timestamp[i] = 
" 0 1 (ws-butler-chg chg fontified t) 1 3 (ws-butler-chg chg fontified t) 3 4 (rear-nonsticky t ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t) 9 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 26 (ws-butler-chg chg fontified t) 26 27 (ws-butler-chg delete fontified t)) . 10227) (undo-tree-id443 . -26) (undo-tree-id444 . -26) (undo-tree-id445 . -25) (undo-tree-id446 . -26) (undo-tree-id447 . -26) 10252) nil (25315 21834 635262 256000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10199 . 10200) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . -10218) (undo-tree-id442 . -1) (10191 . 10219) 10148) nil (25315 21834 635256 585000) 0 nil])
([nil nil ((10217 . 10218) (#("         " 0 1 (ws-butler-chg chg fontified nil) 1 2 (fontified nil ws-butler-chg delete) 2 9 (fontified nil)) . 10217) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -10218) 10200) nil (25315 21834 635253 131000) 0 nil])
([nil nil ((10218 . 10219)) nil (25315 21834 635242 857000) 0 nil])
([nil nil ((10244 . 10245)) nil (25315 21834 635237 368000) 0 nil])
([nil nil ((#("    }
" 0 1 (c-is-sws t fontified t) 1 4 (c-is-sws t fontified t) 4 5 (c-is-sws t fontified t) 5 6 (fontified t)) . 10247) (undo-tree-id461 . -4) (undo-tree-id462 . 2) (undo-tree-id463 . -5) (undo-tree-id464 . -4) (undo-tree-id465 . -4) 10251 (t 25315 21834 642127 308000)) nil (25315 21846 619884 977000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 10190) (undo-tree-id459 . 1) (undo-tree-id460 . -1)) nil (25315 21846 619878 426000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 10189) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1)) nil (25315 21846 619871 636000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 10216) (undo-tree-id475 . 1) (undo-tree-id476 . -1) (t 25315 21846 626362 517000)) nil (25315 21875 30998 149000) 0 nil])
([nil nil ((#("mic" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 3 (fontified t)) . 10216)) nil (25315 21875 30995 668000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg delete)) . 10216)) nil (25315 21875 30994 876000) 0 nil])
([nil nil ((#("ts" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t)) . 10216)) nil (25315 21875 30993 963000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t ws-butler-chg delete)) . 10216) (undo-tree-id473 . 1) (undo-tree-id474 . -1)) nil (25315 21875 30992 997000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg delete)) . 10216)) nil (25315 21875 30990 570000) 0 nil])
([nil nil ((#("] " 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t)) . 10216) (undo-tree-id471 . 2) (undo-tree-id472 . -1)) nil (25315 21875 30989 443000) 0 nil])
([nil nil ((#("= " 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t)) . 10216)) nil (25315 21875 30986 929000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 10230) (undo-tree-id470 . 1)) nil (25315 21875 30985 862000) 0 nil])
([nil nil ((nil ws-butler-chg delete 10231 . 10232) (10230 . 10231)) nil (25315 21875 30983 965000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 10229) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . 1) (undo-tree-id469 . -1)) nil (25315 21875 30981 347000) 0 nil])
([nil nil ((10240 . 10243) (10233 . 10240) (10231 . 10233) (10230 . 10231)) nil (25315 21875 30965 680000) 0 nil])
([nil nil ((#("    mic_order[order] = i;
    order++;
    if (order >= 4) {
        sample_flag = 1;
        order = 0;
    }
" 0 1 (c-is-sws t fontified t) 1 4 (c-is-sws t fontified t) 4 5 (c-is-sws t fontified t) 5 12 (fontified t) 12 13 (fontified t) 13 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 30 (fontified t) 30 31 (fontified t) 31 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 43 (fontified t) 43 44 (fontified t face font-lock-keyword-face) 44 45 (fontified t face font-lock-keyword-face) 45 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 65 (fontified t) 65 66 (fontified t) 66 70 (fontified t) 70 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 90 (fontified t) 90 91 (fontified t) 91 95 (fontified t) 95 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t)) . 10245) (undo-tree-id490 . -110) (undo-tree-id491 . -24) (undo-tree-id492 . -110) (undo-tree-id493 . -37) (undo-tree-id494 . -37) (undo-tree-id495 . -47) (undo-tree-id496 . -47) (undo-tree-id497 . -30) (undo-tree-id498 . -30) (undo-tree-id499 . -14) (undo-tree-id500 . -14) (undo-tree-id501 . -8) (undo-tree-id502 . -8) (undo-tree-id503 . -110) (undo-tree-id504 . -24) (undo-tree-id505 . -110) 10355 (t 25315 21875 37922 285000)) nil (25315 21923 887926 98000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10247 . 10248) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -10354) (undo-tree-id489 . -1) (10243 . 10355) 10190) nil (25315 21923 887911 814000) 0 nil])
([nil nil ((10376 . 10377) (10375 . 10376) (10374 . 10375) (10373 . 10374) (10353 . 10354) (10352 . 10353) (10351 . 10352) (10350 . 10351) (10324 . 10325) (10323 . 10324) (10322 . 10323) (10321 . 10322) (10298 . 10299) (10297 . 10298) (10296 . 10297) (10295 . 10296) (10281 . 10282) (10280 . 10281) (10279 . 10280) (10278 . 10279) (10248 . 10252)) nil (25315 21923 887907 735000) 0 nil])
([nil nil ((10190 . 10191) (10189 . 10190)) nil (25315 21923 887902 200000) 0 nil])
([nil nil ((10381 . 10385) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . 10381) (undo-tree-id477 . -8) (undo-tree-id478 . -8) (10389 . 10390) (10381 . 10389) (10381 . 10382) (#("
" 0 1 (c-is-sws t fontified t)) . 10381) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1)) nil (25315 21923 887896 698000) 0 nil])
([nil nil ((10401 . 10404) (10398 . 10401) (#("[" 0 1 (fontified t ws-butler-chg chg)) . -10398) (undo-tree-id518 . -1) 10399 (10391 . 10399) (10386 . 10391) (t 25315 21923 893891 517000) 10385) nil (25315 22515 234841 116000) 0 nil])
([nil nil ((#("    last_ts = mp_
" 0 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg delete)) . 10387) (undo-tree-id516 . 1) (undo-tree-id517 . -16) 10403) nil (25315 22515 234837 632000) 0 nil])
([nil nil ((10122 . 10126) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -10122) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -10123) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -10124) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -10125) (undo-tree-id515 . -1) 10126 (10116 . 10126)) nil (25315 22515 234832 776000) 0 nil])
([nil nil ((10126 . 10127)) nil (25315 22515 234812 193000) 0 nil])
([nil nil ((10153 . 10154)) nil (25315 22515 234806 305000) 0 nil])
([nil nil ((2403 . 2404) (2392 . 2403) (2392 . 2393) 2417 (t 25315 22515 241072 24000)) nil (25315 22540 196902 800000) 0 nil])
([nil nil ((#("            int timestamp = TIM10->CNT;
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face) 14 15 (fontified t c-type c-decl-id-start face font-lock-type-face) 15 16 (fontified t) 16 17 (fontified t face font-lock-variable-name-face) 17 18 (fontified t face font-lock-variable-name-face) 18 19 (fontified t face font-lock-variable-name-face) 19 20 (fontified t face font-lock-variable-name-face) 20 21 (fontified t face font-lock-variable-name-face) 21 22 (fontified t face font-lock-variable-name-face) 22 23 (fontified t face font-lock-variable-name-face) 23 24 (fontified t face font-lock-variable-name-face) 24 25 (fontified t face font-lock-variable-name-face) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t)) . 10842) (undo-tree-id520 . -8) (undo-tree-id521 . -8) 10850 (t 25315 22540 203598 58000)) nil (25315 22603 571870 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10811 . 10812) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -10839) (undo-tree-id519 . -1) (10799 . 10840) 10798) nil (25315 22603 571865 370000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg rear-nonsticky t)) . 10808)) nil (25315 22603 571851 609000) 0 nil])
([nil nil ((11050 . 11051) (11049 . 11050) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -11049) (undo-tree-id522 . -1) 11050 (11041 . 11050) (11028 . 11041) (11027 . 11028) (11024 . 11027) (#("H" 0 1 (fontified t ws-butler-chg chg)) . -11024) (undo-tree-id523 . -1) 11025 (11020 . 11025) (11013 . 11020) (#("las" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -11013) (undo-tree-id524 . -3) 11016 (11010 . 11016) (11001 . 11010) (#("time" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -11001) (undo-tree-id525 . -4) 11005 (11001 . 11005) (11000 . 11001) (10997 . 11000) (10988 . 10997) (t 25315 22603 578936 228000) 10987) nil (25315 22669 917594 751000) 0 nil])
([nil nil ((2325 . 2328) (2313 . 2325) (2312 . 2313) (2311 . 2312) (t 25315 22669 925340 832000) 2310) nil (25315 22707 778722 543000) 0 nil])
([nil nil ((#("TS" 0 1 (c-is-sws t fontified t) 1 2 (fontified t)) . 6430) (t 25315 22707 786143 891000)) nil (25315 22791 853711 846000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t c-is-sws t ws-butler-chg delete)) . 6430) (undo-tree-id540 . 1)) nil (25315 22791 853710 144000) 0 nil])
([nil nil ((6430 . 6435) (#("UPD" 0 1 (fontified t c-is-sws t ws-butler-chg delete) 1 2 (fontified t) 2 3 (fontified t)) . 6430) (undo-tree-id539 . 3)) nil (25315 22791 853708 200000) 0 nil])
([nil nil ((6430 . 6436) (#("times" 0 1 (c-is-sws t fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . 6430)) nil (25315 22791 853706 73000) 0 nil])
([nil nil ((6430 . 6446) (#("update_tim" 0 1 (c-is-sws t fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg)) . -6430) (undo-tree-id536 . -10) 6440 (6437 . 6440) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -6437) (undo-tree-id537 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -6438) (undo-tree-id538 . -1) 6439 (6436 . 6439)) nil (25315 22791 853704 70000) 0 nil])
([nil nil ((#("TS_" 0 1 (c-is-sws t fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 6745)) nil (25315 22791 853699 426000) 0 nil])
([nil nil ((#("PD" 0 1 (fontified t) 1 2 (fontified t)) . 6746)) nil (25315 22791 853698 377000) 0 nil])
([nil nil ((6745 . 6761) (#("update_" 0 1 (c-is-sws t fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg)) . -6745) (undo-tree-id533 . -7) (undo-tree-id534 . -7) 6752 (6745 . 6752) (#("U" 0 1 (fontified t c-is-sws t ws-butler-chg delete)) . 6745) (undo-tree-id535 . -1)) nil (25315 22791 853696 541000) 0 nil])
([nil nil ((6125 . 6141) (#("update" 0 1 (fontified t c-is-sws t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -6125) (undo-tree-id530 . -6) (undo-tree-id531 . -6) (undo-tree-id532 . -6) 6131 (6127 . 6131) (6125 . 6127) (#("TS_UPD" 0 1 (c-is-sws t fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 6125)) nil (25315 22791 853689 574000) 0 nil])
([nil current ((7070 . 7086) (#("update" 0 1 (c-is-sws t fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -7070) (undo-tree-id526 . -6) (undo-tree-id527 . -6) (undo-tree-id528 . -6) (undo-tree-id529 . -6) 7076 (7070 . 7076) (#("TS_UPD" 0 1 (c-is-sws t fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 7070)) nil (25315 22791 853681 167000) 0 nil])
nil
