(undo-tree-save-format-version . 1)
"385804f9e9caf2c8d7a809b20809cb702980280b"
[nil nil nil nil (25314 12136 10752 864000) 0 nil]
([nil nil ((#("}" 0 1 (c-is-sws t fontified t)) . 8617) (undo-tree-id27 . -1) (undo-tree-id28 . 1) (undo-tree-id29 . -1) (t 25314 10699 48057 517000)) nil (25314 12136 10751 135000) 0 nil])
([nil nil ((9916 . 9917) (9912 . 9914) (#("    " 0 4 (fontified nil)) . 9912) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . 3) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (9916 . 9918)) nil (25314 12136 10746 403000) 0 nil])
([nil nil ((#("//" 0 1 (c-in-sws t face font-lock-comment-delimiter-face c-is-sws t fontified nil) 1 2 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil)) . 9916) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (nil ws-butler-chg delete 9916 . 9917) (9912 . 9916) (#("  " 0 2 (c-is-sws t c-in-sws t ws-butler-chg chg fontified nil)) . 9912) (#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 9916) (undo-tree-id20 . -1)) nil (25314 12136 10739 488000) 0 nil])
([nil nil ((9912 . 9914) (#("    " 0 4 (fontified nil)) . 9912) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (9916 . 9918)) nil (25314 12136 10734 721000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10900 . 10901) (nil fontified nil 10900 . 10901) (nil fontified nil 10899 . 10900) (10899 . 10901) (nil rear-nonsticky nil 10890 . 10891) (nil fontified nil 10890 . 10891) (nil fontified nil 10889 . 10890) (10889 . 10891) (nil rear-nonsticky nil 10856 . 10857) (nil fontified nil 10856 . 10857) (nil fontified nil 10855 . 10856) (10855 . 10857) (nil rear-nonsticky nil 10846 . 10847) (nil fontified nil 10846 . 10847) (nil fontified nil 10845 . 10846) (10845 . 10847) (nil rear-nonsticky nil 10810 . 10811) (nil fontified nil 10810 . 10811) (nil fontified nil 10809 . 10810) (10809 . 10811) (nil rear-nonsticky nil 10804 . 10805) (nil fontified nil 10804 . 10805) (nil fontified nil 10803 . 10804) (10803 . 10805) (nil rear-nonsticky nil 10753 . 10754) (nil fontified nil 10753 . 10754) (nil fontified nil 10752 . 10753) (10752 . 10754) (nil rear-nonsticky nil 10747 . 10748) (nil fontified nil 10747 . 10748) (nil fontified nil 10746 . 10747) (10746 . 10748) (nil rear-nonsticky nil 10737 . 10738) (nil fontified nil 10737 . 10738) (nil fontified nil 10736 . 10737) (10736 . 10738) (nil rear-nonsticky nil 10703 . 10704) (nil fontified nil 10703 . 10704) (nil fontified nil 10702 . 10703) (10702 . 10704) (nil rear-nonsticky nil 10639 . 10640) (nil fontified nil 10639 . 10640) (nil fontified nil 10638 . 10639) (10638 . 10640) (nil rear-nonsticky nil 10629 . 10630) (nil fontified nil 10629 . 10630) (nil fontified nil 10628 . 10629) (10628 . 10630) (nil rear-nonsticky nil 10593 . 10594) (nil fontified nil 10593 . 10594) (nil fontified nil 10592 . 10593) (10592 . 10594) (nil rear-nonsticky nil 10504 . 10505) (nil fontified nil 10504 . 10505) (nil fontified nil 10503 . 10504) (10503 . 10505) (nil rear-nonsticky nil 10415 . 10416) (nil fontified nil 10415 . 10416) (nil fontified nil 10414 . 10415) (10414 . 10416) (nil rear-nonsticky nil 10326 . 10327) (nil fontified nil 10326 . 10327) (nil fontified nil 10325 . 10326) (10325 . 10327) (nil rear-nonsticky nil 10290 . 10291) (nil fontified nil 10290 . 10291) (nil fontified nil 10289 . 10290) (10289 . 10291) (nil rear-nonsticky nil 10280 . 10281) (nil fontified nil 10280 . 10281) (nil fontified nil 10279 . 10280) (10279 . 10281) (nil rear-nonsticky nil 10256 . 10257) (nil fontified nil 10256 . 10257) (nil fontified nil 10255 . 10256) (10255 . 10257) (nil rear-nonsticky nil 10217 . 10218) (nil fontified nil 10217 . 10218) (nil fontified nil 10216 . 10217) (10216 . 10218) (nil rear-nonsticky nil 10207 . 10208) (nil fontified nil 10207 . 10208) (nil fontified nil 10206 . 10207) (10206 . 10208) (nil rear-nonsticky nil 10171 . 10172) (nil fontified nil 10171 . 10172) (nil fontified nil 10170 . 10171) (10170 . 10172) (nil rear-nonsticky nil 10131 . 10132) (nil fontified nil 10131 . 10132) (nil fontified nil 10130 . 10131) (10130 . 10132) (nil rear-nonsticky nil 10091 . 10092) (nil fontified nil 10091 . 10092) (nil fontified nil 10090 . 10091) (10090 . 10092) (nil rear-nonsticky nil 10051 . 10052) (nil fontified nil 10051 . 10052) (nil fontified nil 10050 . 10051) (10050 . 10052) (nil rear-nonsticky nil 10011 . 10012) (nil fontified nil 10011 . 10012) (nil fontified nil 10010 . 10011) (10010 . 10012) (nil rear-nonsticky nil 9988 . 9989) (nil fontified nil 9988 . 9989) (nil fontified nil 9987 . 9988) (9987 . 9989) (nil rear-nonsticky nil 9966 . 9967) (nil fontified nil 9966 . 9967) (nil fontified nil 9965 . 9966) (9965 . 9967) (nil rear-nonsticky nil 9960 . 9961) (nil fontified nil 9960 . 9961) (nil fontified nil 9959 . 9960) (9959 . 9961) (#("  " 0 2 (fontified t)) . 10843) (undo-tree-id9 . -1) (undo-tree-id10 . -2) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("  " 0 2 (fontified t)) . 10835) (#("  " 0 2 (fontified t)) . 10803) (#("  " 0 2 (fontified t)) . 10795) (#("  " 0 2 (fontified t)) . 10761) (#("  " 0 2 (fontified t)) . 10757) (#("  " 0 2 (fontified t)) . 10708) (#("  " 0 2 (fontified t)) . 10704) (#("  " 0 2 (fontified t)) . 10696) (#("  " 0 2 (fontified t)) . 10664) (#("  " 0 2 (fontified t)) . 10602) (#("  " 0 2 (fontified t)) . 10594) (#("  " 0 1 (c-is-sws t fontified t) 1 2 (fontified t c-in-sws t)) . 10560) (#("  " 0 1 (c-is-sws t fontified t) 1 2 (fontified t c-in-sws t)) . 10473) (#("  " 0 1 (c-is-sws t fontified t) 1 2 (fontified t c-in-sws t)) . 10386) (#("  " 0 2 (fontified t c-is-sws t c-in-sws t)) . 10299) (#("  " 0 2 (fontified t)) . 10265) (#("  " 0 2 (fontified t)) . 10257) (#("  " 0 2 (fontified t)) . 10235) (#("  " 0 2 (fontified t)) . 10198) (#("  " 0 2 (fontified t)) . 10190) (#("  " 0 2 (fontified t)) . 10156) (#("  " 0 2 (fontified t)) . 10118) (#("  " 0 2 (fontified t)) . 10080) (#("  " 0 2 (fontified t)) . 10042) (#("  " 0 2 (fontified t)) . 10004) (#("  " 0 2 (fontified t)) . 9983) (#("  " 0 2 (fontified t)) . 9963) (#("  " 0 2 (c-is-sws t fontified t)) . 9959) 10901) nil (25314 12136 10719 381000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t)) . -9914) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 9915 (9914 . 9915) (9911 . 9914) 9910) nil (25314 12136 10680 429000) 0 nil])
([nil nil ((#("
  " 0 1 (ws-butler-chg chg fontified t) 1 3 (ws-butler-chg chg fontified nil)) . 9911) (undo-tree-id0 . -2) (undo-tree-id1 . -3) (undo-tree-id2 . -1) (undo-tree-id3 . -2) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (#("i" 0 1 (ws-butler-chg chg fontified nil)) . 9914) (undo-tree-id6 . -1) (nil ws-butler-chg delete 9915 . 9916) (9914 . 9915)) nil (25314 12136 10670 855000) 0 nil])
([nil nil ((9914 . 9916) (9911 . 9914) (t 25314 12136 22152 853000) 9910) nil (25314 12547 966944 551000) 0 nil])
([nil nil ((#("  if
" 0 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified t ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified t)) . 9912) (undo-tree-id43 . -3) (undo-tree-id44 . 1) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -2) 9914) nil (25314 12547 966941 576000) 0 nil])
([nil nil ((9945 . 9947) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 9945) (undo-tree-id26 . -4) (9949 . 9950) (9944 . 9949) (9943 . 9944) (9942 . 9943) (9941 . 9942) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -9941) (undo-tree-id27 . -1) (#("&" 0 1 (fontified t ws-butler-chg chg)) . -9942) (undo-tree-id28 . -1) (#("&" 0 1 (fontified t ws-butler-chg chg)) . -9943) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -9944) (undo-tree-id30 . -1) 9945 (9940 . 9945) (9939 . 9940) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -9939) (undo-tree-id31 . -1) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -9940) (undo-tree-id32 . -1) 9941 (9923 . 9941) (9918 . 9923) (#("T" 0 1 (fontified t ws-butler-chg chg)) . -9918) (undo-tree-id33 . -1) (#("I" 0 1 (fontified t ws-butler-chg chg)) . -9919) (undo-tree-id34 . -1) (#("M" 0 1 (fontified t ws-butler-chg chg)) . -9920) (undo-tree-id35 . -1) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -9921) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -9922) (undo-tree-id37 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -9923) (undo-tree-id38 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -9924) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -9925) (undo-tree-id40 . -1) 9926 (9921 . 9926) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -9921) (undo-tree-id41 . -1) 9922 (9918 . 9922) (9917 . 9918) (9916 . 9917) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -9916) (undo-tree-id42 . -1) 9917 (9916 . 9917) (9914 . 9916) (9911 . 9914) 9910) nil (25314 12547 966525 535000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . -9945) (undo-tree-id25 . -4) 9949 (9945 . 9949) (9945 . 9946) 9947) nil (25314 12547 966499 383000) 0 nil])
([nil nil ((2228 . 2229) (2220 . 2228) (2215 . 2220) (#("G" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2215) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2216) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("I" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2217) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg)) . -2218) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 2219 (2215 . 2219) (2211 . 2215) (#("6" 0 1 (fontified t ws-butler-chg chg)) . -2211) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 2212 (2207 . 2212) (#("G" 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -2207) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg)) . -2208) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("I" 0 1 (fontified t ws-butler-chg chg)) . -2209) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 2210 (2207 . 2210) (2206 . 2207) 2182) nil (25314 12547 966478 269000) 0 nil])
([nil nil ((10052 . 10053) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -9975) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 9976 (9972 . 9976) (9968 . 9972) (9968 . 9969) (#("
" 0 1 (fontified t)) . 9968) (undo-tree-id52 . 1) (t 25314 12547 971620 327000)) nil (25314 12718 384115 507000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . 10052)) nil (25314 12718 384101 36000) 0 nil])
([nil nil ((5744 . 7012) ("EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI0_IRQn 0 */
    printf(\"0\");
    mp_timestamp[0] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI0_IRQn);
  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}

/**
  * @brief This function handles EXTI line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI1_IRQn 0 */
    printf(\"1\");
    mp_timestamp[1] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI1_IRQn);
  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
  /* USER CODE BEGIN EXTI1_IRQn 1 */
  /* USER CODE END EXTI1_IRQn 1 */
}

/**
  * @brief This function handles EXTI line2 interrupt.
  */
void EXTI2_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI2_IRQn 0 */
    printf(\"2\");
    mp_timestamp[2] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI2_IRQn);
  /* USER CODE END EXTI2_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
  /* USER CODE BEGIN EXTI2_IRQn 1 */
  /* USER CODE END EXTI2_IRQn 1 */
}

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI3_IRQn 0 */
    printf(\"3\");
    mp_timestamp[3] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI3_IRQn);
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
  /* USER CODE BEGIN EXTI3_IRQn 1 */
  /* USER CODE END EXTI3_IRQn 1 */
}

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_rx);
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}

/**
  * @brief This function handles DMA1 stream5 global interrupt.
  */
void DMA1_Stream5_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_rx);
  /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */

  /* USER CODE END DMA1_Stream5_IRQn 1 */
}

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
  HAL_TIM_IRQHandler(&htim10);
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
" . 5744) (t 25314 12718 392054 792000)) nil (25314 13189 408615 275000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t ws-butler-chg chg)) . -8346) (undo-tree-id37 . -1) (#("A" 0 1 (fontified t ws-butler-chg chg)) . -8347) (undo-tree-id38 . -1) (#("L" 0 1 (fontified t ws-butler-chg chg)) . -8348) (undo-tree-id39 . -1) 8349 (8346 . 8349) (8340 . 8346) (8340 . 8341) (#("    for
" 0 4 (fontified t) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t)) . 8340) (undo-tree-id40 . -7) (undo-tree-id41 . 1) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -6) (undo-tree-id46 . -6) 8346 (t 25314 12870 720000 0)) nil (25314 13189 408610 877000) 0 nil])
([nil nil ((#("      
" 0 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg delete)) . 8340) (undo-tree-id36 . 1)) nil (25314 13189 408600 410000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 8307) (undo-tree-id35 . 2)) nil (25314 13189 408598 686000) 0 nil])
([nil nil ((8307 . 8311)) nil (25314 13189 408596 836000) 0 nil])
([nil nil ((#("  " 0 1 (ws-butler-chg delete fontified t) 1 2 (fontified t)) . 8342) (undo-tree-id34 . 2)) nil (25314 13189 408595 653000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg chg)) . -8342) (8342 . 8343) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -8342) (8342 . 8343)) nil (25314 13189 408593 681000) 0 nil])
([nil nil ((8342 . 8346)) nil (25314 13189 408592 275000) 0 nil])
([nil nil ((8391 . 8392) (8383 . 8391) (#("G" 0 1 (fontified t ws-butler-chg chg)) . -8383) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg)) . -8384) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 8385 (8383 . 8385) (8382 . 8383) (8381 . 8382) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -8381) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 8382 (8381 . 8382) (8367 . 8381) (#("G" 0 1 (fontified t ws-butler-chg chg)) . -8367) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg)) . -8368) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("I" 0 1 (fontified t ws-butler-chg chg)) . -8369) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg)) . -8370) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("D" 0 1 (fontified t ws-butler-chg chg)) . -8371) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("," 0 1 (fontified t ws-butler-chg chg)) . -8372) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8373) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 8374 (#("G" 0 1 (fontified t ws-butler-chg chg)) . -8374) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg)) . -8375) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("I" 0 1 (fontified t ws-butler-chg chg)) . -8376) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg)) . -8377) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 8378 (8373 . 8378) (8372 . 8373) (8371 . 8372) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -8371) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 8372 (8367 . 8372) (8366 . 8367) (8358 . 8366) (8350 . 8358) (8341 . 8350) 8309) nil (25314 13189 408586 623000) 0 nil])
([nil nil ((8370 . 8371) (#("3" 0 1 (fontified t ws-butler-chg chg)) . 8370)) nil (25314 13189 408553 850000) 0 nil])
([nil nil ((8392 . 8393)) nil (25314 13189 408552 613000) 0 nil])
([nil nil ((8350 . 8351)) nil (25314 13189 408551 629000) 0 nil])
([nil nil ((2215 . 2218) (#("gpio" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face)) . 2215)) nil (25314 13189 408550 27000) 0 nil])
([nil nil ((2220 . 2224) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2220) (undo-tree-id0 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2221) (undo-tree-id1 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2222) (undo-tree-id2 . -1) 2223 (2219 . 2223) (#("value" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face)) . 2219) (undo-tree-id3 . -5)) nil (25314 13189 408544 762000) 0 nil])
([nil nil ((2219 . 2222) (#("input" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face)) . 2219) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (t 25314 13189 419019 540000)) nil (25314 13201 878047 285000) 0 nil])
([nil nil ((8348 . 8351) (t 25314 13201 883124 451000)) nil (25314 13235 334848 507000) 0 nil])
([nil nil ((#("micHAL" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 8348) (undo-tree-id53 . 3)) nil (25314 13235 334846 160000) 0 nil])
([nil nil ((nil ws-butler-chg delete 8354 . 8355) (8348 . 8354)) nil (25314 13235 334842 881000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . 8348)) nil (25314 13235 334840 712000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg delete)) . 8348)) nil (25314 13235 334839 34000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg delete)) . 8348)) nil (25314 13235 334836 608000) 0 nil])
([nil nil ((8354 . 8359) (8347 . 8354) (#("mic" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -8347) (undo-tree-id52 . -3) 8350 (8347 . 8350)) nil (25314 13235 334833 909000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8411 . 8412) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -8468) (undo-tree-id51 . -1) (8403 . 8469) 8358) nil (25314 13235 334828 770000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8476 . 8477) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -8533) (undo-tree-id50 . -1) (8468 . 8534) 8412) nil (25314 13235 334824 28000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8541 . 8542) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -8598) (undo-tree-id49 . -1) (8533 . 8599) 8477) nil (25314 13235 334818 479000) 0 nil])
([nil nil ((8420 . 8421) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 8420)) nil (25314 13235 334806 862000) 0 nil])
([nil nil ((8485 . 8486) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 8485)) nil (25314 13235 334805 548000) 0 nil])
([nil nil ((8550 . 8551) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 8550)) nil (25314 13235 334803 697000) 0 nil])
([nil nil ((8445 . 8446) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8445)) nil (25314 13235 334801 537000) 0 nil])
([nil nil ((8510 . 8511) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8510)) nil (25314 13235 334799 490000) 0 nil])
([nil nil ((8575 . 8576) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8575)) nil (25314 13235 334797 210000) 0 nil])
([nil nil ((8461 . 8462) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8461)) nil (25314 13235 334794 194000) 0 nil])
([nil nil ((8526 . 8527) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8526)) nil (25314 13235 334791 112000) 0 nil])
([nil nil ((8591 . 8592) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8591)) nil (25314 13235 334782 520000) 0 nil])
([nil nil ((8617 . 8618) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -8617) (undo-tree-id77 . -1) 8618 (8617 . 8618) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -8617) (undo-tree-id78 . -1) 8618 (8616 . 8618) (#("3" 0 1 (fontified t ws-butler-chg chg)) . -8616) (undo-tree-id79 . -1) (#("]" 0 1 (fontified t ws-butler-chg chg)) . -8617) (undo-tree-id80 . -1) (undo-tree-id81 . 1) (undo-tree-id82 . -1) 8618 (8611 . 8618) (8608 . 8611) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -8608) (undo-tree-id83 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8609) (undo-tree-id84 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -8610) (undo-tree-id85 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -8611) (undo-tree-id86 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -8612) (undo-tree-id87 . -1) 8613 (8612 . 8613) (8608 . 8612) (8599 . 8608) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 8599) (undo-tree-id88 . -8) 8607 (8598 . 8607) (t 25314 13235 342406 84000) 8591) nil (25314 13568 13594 339000) 0 nil])
([nil nil ((8612 . 8613) (8608 . 8612) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -8608) (undo-tree-id73 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8609) (undo-tree-id74 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -8610) (undo-tree-id75 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -8611) (undo-tree-id76 . -1) 8612 (8608 . 8612)) nil (25314 13568 13560 785000) 0 nil])
([nil nil ((8613 . 8614)) nil (25314 13568 13555 347000) 0 nil])
([nil nil ((#("        push(&mic_que[0]
" 0 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg delete) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 21 (fontified t ws-butler-chg chg) 21 22 (fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg delete)) . 8600) (undo-tree-id62 . 1) (undo-tree-id63 . -25) (undo-tree-id64 . -25) (undo-tree-id65 . -25) (undo-tree-id66 . -25) (undo-tree-id67 . -25) (undo-tree-id68 . -23) (undo-tree-id69 . 2) (undo-tree-id70 . -24) (undo-tree-id71 . 4) (undo-tree-id72 . -22) 8623) nil (25314 13568 13553 790000) 0 nil])
([nil nil ((1524 . 1530)) nil (25314 13568 13544 562000) 0 nil])
([nil nil ((1524 . 1525) (#("Queue 
" 0 1 (fontified t c-is-sws t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t)) . 1524) (undo-tree-id57 . 1) (undo-tree-id58 . -5) (undo-tree-id59 . -6) (undo-tree-id60 . -5) (undo-tree-id61 . -5) 1529) nil (25314 13568 13542 568000) 0 nil])
([nil nil ((2243 . 2244) (2237 . 2243) (2227 . 2237) (2226 . 2227) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -2226) (undo-tree-id54 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2227) (undo-tree-id55 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2228) (undo-tree-id56 . -1) 2229 (2227 . 2229) (2226 . 2227) 2207) nil (25314 13568 13533 137000) 0 nil])
([nil nil ((8639 . 8642) (8632 . 8639) (#("mic_q" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -8632) (undo-tree-id136 . -5) (undo-tree-id137 . -5) 8637 (8631 . 8637) (8630 . 8631) (8627 . 8630) (8626 . 8627) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -8626) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -8627) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -8628) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -8629) (undo-tree-id147 . -1) (undo-tree-id148 . -1) 8630 (8629 . 8630) (8626 . 8629) (8617 . 8626) (t 25314 13568 22206 329000) 8617) nil (25314 13652 977786 115000) 0 nil])
([nil nil ((8655 . 8656) (8654 . 8655) (8652 . 8654) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -8652) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 8653 (8647 . 8653) (8643 . 8647) (8642 . 8643)) nil (25314 13652 977771 75000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t ws-butler-chg chg)) . -8617) (undo-tree-id132 . -8) (undo-tree-id133 . -8) 8625 (8617 . 8625) (8617 . 8618) (#("
" 0 1 (fontified t ws-butler-chg chg)) . 8617)) nil (25314 13652 977765 682000) 0 nil])
([nil nil ((8631 . 8640) (8630 . 8631) (8626 . 8630) (8617 . 8626) 8617) nil (25314 13652 977700 220000) 0 nil])
([nil nil ((8652 . 8653) (8648 . 8652) (8647 . 8648) (8645 . 8647) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -8645) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 8646 (8644 . 8646) (#("+" 0 1 (fontified t ws-butler-chg chg)) . -8644) (undo-tree-id130 . -1) (undo-tree-id131 . -1) 8645 (8641 . 8645) (8640 . 8641)) nil (25314 13652 977695 450000) 0 nil])
([nil nil ((8654 . 8655) (8653 . 8654) (#("{" 0 1 (fontified t ws-butler-chg chg)) . -8653) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 8654 (8653 . 8654)) nil (25314 13652 977682 961000) 0 nil])
([nil nil ((8664 . 8668)) nil (25314 13652 977675 779000) 0 nil])
([nil nil ((8699 . 8707) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 8699) (undo-tree-id123 . -12) (undo-tree-id124 . -12) (8711 . 8712) (8698 . 8711) 8667) nil (25314 13652 977673 496000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -8726) (undo-tree-id117 . -1) (undo-tree-id118 . -1) 8727 (8723 . 8727) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8723) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8724) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 8725 (8715 . 8725) (8714 . 8715) (8711 . 8714) (8698 . 8711) 8664) nil (25314 13652 977668 464000) 0 nil])
([nil nil ((#("            pop(&mic_que[i]
" 0 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 21 (fontified t ws-butler-chg chg) 21 22 (fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg chg) 25 26 (fontified t ws-butler-chg chg) 26 27 (fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg delete)) . 8699) (undo-tree-id105 . 1) (undo-tree-id106 . -26) (undo-tree-id107 . -15) (undo-tree-id108 . -27) (undo-tree-id109 . 2) (undo-tree-id110 . -27) (undo-tree-id111 . 4) (undo-tree-id112 . -25) (undo-tree-id113 . -12) (undo-tree-id114 . -28) (undo-tree-id115 . -27) (undo-tree-id116 . -26) 8725) nil (25314 13652 977660 599000) 0 nil])
([nil nil ((#("        }
" 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg delete fontified t) 9 10 (ws-butler-chg delete fontified t)) . 8699) (undo-tree-id94 . 10) (undo-tree-id95 . -10) (undo-tree-id96 . -10) (undo-tree-id97 . -10) (undo-tree-id98 . -10) (undo-tree-id99 . -10) (undo-tree-id100 . -8) (undo-tree-id101 . 2) (undo-tree-id102 . -9) (undo-tree-id103 . -9) (undo-tree-id104 . -8) 8707) nil (25314 13652 977649 906000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t ws-butler-chg chg)) . 8654) (undo-tree-id92 . 1) (undo-tree-id93 . -1)) nil (25314 13652 977639 307000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 8653) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1)) nil (25314 13652 977633 78000) 0 nil])
([nil nil ((8711 . 8712) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8711) (undo-tree-id159 . -1) 8712 (8706 . 8712) (#("q" 0 1 (fontified t ws-butler-chg chg)) . -8706) (undo-tree-id160 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8707) (undo-tree-id161 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8708) (undo-tree-id162 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8709) (undo-tree-id163 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8710) (undo-tree-id164 . -1) 8711 (8706 . 8711) (8697 . 8706) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 8697) (undo-tree-id165 . -8) 8705 (8696 . 8705) (t 25314 13652 981921 456000) 8688) nil (25314 14824 983377 305000) 0 nil])
([nil nil ((8716 . 8717) (8712 . 8716)) nil (25314 14824 983362 600000) 0 nil])
([nil nil ((8718 . 8719) (8717 . 8718) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -8717) (undo-tree-id155 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8718) (undo-tree-id156 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -8719) (undo-tree-id157 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -8720) (undo-tree-id158 . -1) 8721 (8717 . 8721)) nil (25314 14824 983359 251000) 0 nil])
([nil nil ((8260 . 8261) (8259 . 8260) 8258) nil (25314 14824 983351 228000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil ws-butler-chg chg)) . 8281) (undo-tree-id151 . -4) (8285 . 8286) (8280 . 8285) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 8279) (undo-tree-id152 . -4) (8283 . 8284) (8278 . 8283) (8276 . 8278) (8269 . 8276) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -8269) (undo-tree-id153 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -8270) (undo-tree-id154 . -1) 8271 (8261 . 8271) (8260 . 8261) 8260) nil (25314 14824 983347 235000) 0 nil])
([nil nil ((8315 . 8319) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 8315) (undo-tree-id150 . -8) (8323 . 8324) (8314 . 8323) (8313 . 8314) (8312 . 8313) (8311 . 8312) (8307 . 8311) (8306 . 8307) (8300 . 8306) (8299 . 8300) (8290 . 8299) (8289 . 8290) (8285 . 8289) (8280 . 8285) 8279) nil (25314 14824 983337 169000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t ws-butler-chg chg)) . -8315) (undo-tree-id149 . -8) 8323 (8314 . 8323) 8285) nil (25314 14824 983327 707000) 0 nil])
([nil nil ((8343 . 8344) (8332 . 8343) (8328 . 8332) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8328) (undo-tree-id172 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -8329) (undo-tree-id173 . -1) 8330 (8323 . 8330) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8323) (undo-tree-id174 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -8324) (undo-tree-id175 . -1) 8325 (8323 . 8325) (8315 . 8323) (8315 . 8316) (#("
" 0 1 (fontified t)) . 8315) (undo-tree-id176 . 1) (t 25314 14824 990786 538000)) nil (25314 17052 521600 863000) 0 nil])
([nil nil ((8331 . 8332)) nil (25314 17052 521589 645000) 0 nil])
([nil nil ((8359 . 8360) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8359) (undo-tree-id171 . -1) 8360 (8345 . 8360)) nil (25314 17052 521587 879000) 0 nil])
([nil nil ((8331 . 8332)) nil (25314 17052 521582 218000) 0 nil])
([nil nil ((8375 . 8376) (8368 . 8375) (#("W" 0 1 (fontified t ws-butler-chg chg)) . -8368) (undo-tree-id169 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg)) . -8369) (undo-tree-id170 . -1) 8370 (8361 . 8370)) nil (25314 17052 521580 425000) 0 nil])
([nil nil ((8327 . 8328) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 8327)) nil (25314 17052 521575 798000) 0 nil])
([nil nil ((8349 . 8354) (#("U" 0 1 (fontified t ws-butler-chg chg)) . -8349) (undo-tree-id168 . -1) 8350 (8349 . 8350) (#("WINDOW" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . 8349)) nil (25314 17052 521573 556000) 0 nil])
([nil nil ((8363 . 8368) (#("U" 0 1 (fontified nil ws-butler-chg chg)) . -8363) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 8364 (8363 . 8364) (#("WINDOW" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . 8363)) nil (25314 17052 521566 352000) 0 nil])
([nil nil ((8383 . 8391) (8374 . 8383) (t 25314 17052 528536 249000) 8367) nil (25314 17087 71660 424000) 0 nil])
([nil nil ((8323 . 8330) (#("i" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -8323) (undo-tree-id186 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -8324) (undo-tree-id187 . -1) 8325 (8323 . 8325) (#("int" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) . 8323)) nil (25314 17087 71657 989000) 0 nil])
([nil nil ((8290 . 8297) (#("int" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) . 8290)) nil (25314 17087 71654 250000) 0 nil])
([nil nil ((8391 . 8398) (#("int" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . 8391)) nil (25314 17087 71652 409000) 0 nil])
([nil nil ((8418 . 8419) (8414 . 8418) (#("I" 0 1 (ws-butler-chg chg fontified t)) . -8414) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("S" 0 1 (ws-butler-chg chg fontified t)) . -8415) (undo-tree-id180 . -1) 8416 (8410 . 8416) (8407 . 8410) (#("Q" 0 1 (ws-butler-chg chg fontified t)) . -8407) (undo-tree-id181 . -1) (#("U" 0 1 (ws-butler-chg chg fontified t)) . -8408) (undo-tree-id182 . -1) (#("E" 0 1 (ws-butler-chg chg fontified t)) . -8409) (undo-tree-id183 . -1) (#("U" 0 1 (ws-butler-chg chg fontified t)) . -8410) (undo-tree-id184 . -1) (#("E" 0 1 (ws-butler-chg chg fontified t)) . -8411) (undo-tree-id185 . -1) 8412 (8403 . 8412)) nil (25314 17087 71646 292000) 0 nil])
([nil nil ((8442 . 8450) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 8442) (undo-tree-id191 . -12) (undo-tree-id192 . -12) (8454 . 8455) (8441 . 8454) (8440 . 8441) (8439 . 8440) (8438 . 8439) (8435 . 8438) (8434 . 8435) (8433 . 8434) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -8433) (8433 . 8435) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 8433) (undo-tree-id193 . -5) (8428 . 8433) 8433 (8428 . 8433) (8419 . 8428) (t 25314 17087 80827 87000) 8418) nil (25314 17105 391996 803000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t ws-butler-chg chg)) . -8442) (undo-tree-id188 . -12) (undo-tree-id189 . -12) (undo-tree-id190 . -12) 8454 (8441 . 8454) 8428) nil (25314 17105 391986 415000) 0 nil])
([nil nil ((8435 . 8445)) nil (25314 17105 391971 410000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 8438) (t 25314 17105 397981 265000)) nil (25314 17131 288974 873000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . 8441)) nil (25314 17131 288973 763000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t ws-butler-chg delete)) . 8441) (undo-tree-id200 . -1)) nil (25314 17131 288972 724000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 8441)) nil (25314 17131 288970 836000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg delete)) . 8441) (undo-tree-id199 . 1)) nil (25314 17131 288969 756000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8440) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1)) nil (25314 17131 288967 875000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg delete)) . 8440) (undo-tree-id195 . 1)) nil (25314 17131 288963 840000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg delete)) . 8440) (undo-tree-id194 . 1)) nil (25314 17131 288960 459000) 0 nil])
([nil nil ((8460 . 8461) (8457 . 8460) (8444 . 8457) 8444) nil (25314 17131 288950 342000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 8458) (t 25314 17131 294199 239000)) nil (25314 17134 167457 606000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg delete)) . 8458) (undo-tree-id201 . -1) (undo-tree-id202 . -1)) nil (25314 17134 167455 98000) 0 nil])
([nil nil ((8457 . 8459)) nil (25314 17134 167441 799000) 0 nil])
([nil nil ((8472 . 8473) (8471 . 8472) (8460 . 8471) (8459 . 8460) (8456 . 8459) (8444 . 8456) (8444 . 8445) (#("
" 0 1 (fontified t)) . 8444) (t 25314 17134 172223 464000)) nil (25314 17181 359202 215000) 0 nil])
([nil nil ((8348 . 8349) (8342 . 8348) (8338 . 8342) (#("mic" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -8338) (undo-tree-id203 . -3) 8341 (8334 . 8341) (8333 . 8334) (8327 . 8333) (#("q" 0 1 (fontified t ws-butler-chg chg)) . -8327) (undo-tree-id204 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8328) (undo-tree-id205 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8329) (undo-tree-id206 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8330) (undo-tree-id207 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8331) (undo-tree-id208 . -1) 8332 (8327 . 8332) (8318 . 8327) (t 25314 17181 364620 707000) 8309) nil (25314 17216 302778 384000) 0 nil])
([nil nil ((8338 . 8339)) nil (25314 17216 302760 791000) 0 nil])
([nil nil ((8373 . 8376) (t 25314 17216 313914 882000)) nil (25314 17260 693080 25000) 0 nil])
([nil nil ((8384 . 8387)) nil (25314 17260 693078 85000) 0 nil])
([nil nil ((8378 . 8379) (8377 . 8378) (8376 . 8377) (8375 . 8376) (8371 . 8375) (#("((q->front - q->back) + QUEUE_SIZE) % QUEUE_SIZE;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t)) . 8371) (undo-tree-id211 . 33) (undo-tree-id212 . 49) (undo-tree-id213 . -1) (undo-tree-id214 . 15) (undo-tree-id215 . -35)) nil (25314 17260 693075 491000) 0 nil])
([nil nil ((#("(&" 0 1 (fontified t) 1 2 (fontified t)) . 8456) (undo-tree-id209 . 2) (undo-tree-id210 . -1)) nil (25314 17260 693064 307000) 0 nil])
([nil nil ((#("mic_que[i]);" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 8456)) nil (25314 17260 693051 358000) 0 nil])
([nil nil ((8459 . 8460) (8458 . 8459) (8457 . 8458) (8456 . 8457)) nil (25314 17260 693045 160000) 0 nil])
([nil nil ((#("        uint8_t l = size(q);
" 0 8 (fontified t) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t face font-lock-type-face) 11 12 (fontified t face font-lock-type-face) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face) 14 15 (fontified t c-type c-decl-id-start face font-lock-type-face) 15 16 (fontified t) 16 17 (fontified t face font-lock-variable-name-face) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t)) . 8351) (undo-tree-id225 . -28) (undo-tree-id226 . -27) (undo-tree-id227 . -27) (undo-tree-id228 . -27) 8378 (t 25314 17260 699288 482000)) nil (25314 17569 561261 488000) 0 nil])
([nil nil ((8377 . 8378) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -8377) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 8378 (8376 . 8378) (8375 . 8376) (8373 . 8375) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8373) (undo-tree-id222 . -1) 8374 (8373 . 8374) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8373) (undo-tree-id223 . -1) (#("z" 0 1 (fontified t ws-butler-chg chg)) . -8374) (undo-tree-id224 . -1) 8375 (8371 . 8375) (#("l" 0 1 (fontified t)) . 8371)) nil (25314 17569 561252 116000) 0 nil])
([nil nil ((8377 . 8378) (8376 . 8377) (8375 . 8376) (8374 . 8375) (8371 . 8374) (t 25314 17569 570888 320000)) nil (25314 17668 255536 667000) 0 nil])
([nil nil ((8399 . 8400)) nil (25314 17668 255531 603000) 0 nil])
([nil nil ((8371 . 8374) (#("max" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . 8371)) nil (25314 17668 255521 149000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 8419) (t 25314 17668 262719 35000)) nil (25314 17676 950010 477000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 8419)) nil (25314 17676 950008 512000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t ws-butler-chg delete)) . 8419)) nil (25314 17676 950007 206000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8418) (undo-tree-id241 . -1) (undo-tree-id242 . -1)) nil (25314 17676 950005 154000) 0 nil])
([nil nil ((8418 . 8420)) nil (25314 17676 949998 827000) 0 nil])
([nil nil ((#("            --d;
" 0 1 (fontified t) 1 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t)) . 8444) (undo-tree-id239 . -15) (undo-tree-id240 . -15) 8459) nil (25314 17676 949996 578000) 0 nil])
([nil nil ((#("        }
" 0 1 (ws-butler-chg delete fontified t) 1 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 8444) (undo-tree-id234 . -8) (undo-tree-id235 . -9) (undo-tree-id236 . 2) (undo-tree-id237 . -9) (undo-tree-id238 . -8) 8452) nil (25314 17676 949991 328000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 8422) (undo-tree-id232 . 1) (undo-tree-id233 . -1)) nil (25314 17676 949982 310000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8421) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1)) nil (25314 17676 949973 885000) 0 nil])
([nil nil ((8904 . 8911) (#("cut" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 8904) (undo-tree-id244 . -3) (t 25314 17676 956792 215000)) nil (25314 17766 429698 86000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-function-name-face)) . 8272)) nil (25314 17766 429693 309000) 0 nil])
([nil nil ((nil ws-butler-chg delete 8273 . 8274) (8272 . 8273)) nil (25314 17766 429691 18000) 0 nil])
([nil nil ((8273 . 8280) (#("cut" 0 1 (fontified t face font-lock-function-name-face) 1 2 (fontified t face font-lock-function-name-face) 2 3 (fontified t face font-lock-function-name-face)) . 8273) (undo-tree-id243 . 3)) nil (25314 17766 429684 520000) 0 nil])
([nil nil ((8291 . 8302) (8289 . 8291) (8284 . 8289) (t 25314 17766 435545 379000) 8283) nil (25314 17829 894290 925000) 0 nil])
([nil nil ((8520 . 8521) (8519 . 8520) (8518 . 8519) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-comment-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-comment-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 8518) (undo-tree-id248 . -4) (8514 . 8518) 8518 (8514 . 8518) (#("w" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8514) (undo-tree-id249 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8515) (undo-tree-id250 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -8516) (undo-tree-id251 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8517) (undo-tree-id252 . -1) 8518 (8514 . 8518) (8497 . 8514) (#("1" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8497) (undo-tree-id253 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8498) (undo-tree-id254 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8499) (undo-tree-id255 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8500) (undo-tree-id256 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8501) (undo-tree-id257 . -1) 8502 (8497 . 8502) (8496 . 8497) (8495 . 8496) (#("(" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -8495) (undo-tree-id258 . -1) 8496 (8495 . 8496) (8478 . 8495) (#("w" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8478) (undo-tree-id259 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8479) (undo-tree-id260 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8480) (undo-tree-id261 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8481) (undo-tree-id262 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8482) (undo-tree-id263 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8483) (undo-tree-id264 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8484) (undo-tree-id265 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8485) (undo-tree-id266 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8486) (undo-tree-id267 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8487) (undo-tree-id268 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -8488) (undo-tree-id269 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8489) (undo-tree-id270 . -1) 8490 (8485 . 8490) (8477 . 8485) (8475 . 8477) (8470 . 8475) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 8470) (undo-tree-id271 . -4) 8474 (8469 . 8474) 8468) nil (25314 17829 894281 443000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 4 (fontified t ws-butler-chg chg c-is-sws t)) . -8522) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) 8526 (8521 . 8526) 8520) nil (25314 17829 894192 6000) 0 nil])
([nil nil ((2263 . 2264) (2261 . 2263) (2258 . 2261) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2258) (undo-tree-id272 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2259) (undo-tree-id273 . -1) 2260 (2258 . 2260) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2258) (undo-tree-id274 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2259) (undo-tree-id275 . -1) 2260 (2258 . 2260) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2258) (undo-tree-id276 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2259) (undo-tree-id277 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2260) (undo-tree-id278 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2261) (undo-tree-id279 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2262) (undo-tree-id280 . -1) 2263 (2261 . 2263) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2261) (undo-tree-id281 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2262) (undo-tree-id282 . -1) (#("[" 0 1 (fontified t ws-butler-chg chg)) . -2263) (undo-tree-id283 . -1) 2264 (2263 . 2264) (2245 . 2263) (2244 . 2245) (t 25314 17829 901079 581000) 2227) nil (25314 17893 701300 696000) 0 nil])
([nil nil ((8580 . 8584) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 8580) (undo-tree-id337 . -8) (8588 . 8589) (8579 . 8588) (8578 . 8579) (8577 . 8578) (8576 . 8577) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -8576) (undo-tree-id338 . -1) 8577 (8576 . 8577) (8572 . 8576) (8571 . 8572) (8565 . 8571) (8564 . 8565) (8556 . 8564) (#("-" 0 1 (fontified t ws-butler-chg chg)) . -8556) (undo-tree-id339 . -1) 8557 (8551 . 8557) (8550 . 8551) (8546 . 8550) (8542 . 8546) (8542 . 8543) (#("
" 0 1 (c-is-sws t fontified t)) . 8542) (t 25314 17893 710616 680000)) nil (25314 18064 816168 118000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t c-is-sws t ws-butler-chg chg) 1 4 (fontified t c-is-sws t ws-butler-chg chg)) . -8542) (undo-tree-id336 . -4) 8546 (8542 . 8546) (8542 . 8543) 8546) nil (25314 18064 816160 868000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete c-is-sws t)) . 8542) (undo-tree-id335 . 1)) nil (25314 18064 816158 582000) 0 nil])
([nil nil ((8601 . 8602) (8596 . 8601) (8592 . 8596) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8592) (undo-tree-id334 . -1) 8593 (8588 . 8593) (8579 . 8588) 8542) nil (25314 18064 816156 453000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t ws-butler-chg chg)) . -8628) (undo-tree-id330 . -1) (undo-tree-id331 . -1) 8629 (8616 . 8629) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8616) (undo-tree-id332 . -1) (undo-tree-id333 . -1) 8617 (8616 . 8617) (8615 . 8616) (8611 . 8615) (8602 . 8611) 8601) nil (25314 18064 816152 518000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8610 . 8611) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -8634) (8602 . 8635) 8601) nil (25314 18064 816145 974000) 0 nil])
([nil nil ((#("        Queue *q = &mic_que[i];
" 0 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg rear-nonsticky t) 8 9 (fontified t ws-butler-chg chg face font-lock-type-face) 9 10 (fontified t ws-butler-chg chg face font-lock-type-face) 10 11 (fontified t ws-butler-chg chg face font-lock-type-face) 11 12 (fontified t ws-butler-chg chg face font-lock-type-face) 12 13 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 24 (fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg chg) 25 26 (fontified t ws-butler-chg chg) 26 27 (fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg chg) 28 29 (fontified t ws-butler-chg chg) 29 30 (fontified t ws-butler-chg chg) 30 31 (fontified t ws-butler-chg chg) 31 32 (fontified t ws-butler-chg delete)) . 8603) (undo-tree-id325 . -31) (undo-tree-id326 . -31) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) 8611) nil (25314 18064 816144 127000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified nil)) . -8611) (undo-tree-id324 . -1) (8579 . 8612) 8550) nil (25314 18064 816137 407000) 0 nil])
([nil nil ((8708 . 8709) (8703 . 8708) (8695 . 8703) (8694 . 8695) (8689 . 8694) (8688 . 8689) (8685 . 8688) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8685) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8686) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (#(")" 0 1 (ws-butler-chg chg fontified t)) . -8687) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . 1) (undo-tree-id301 . -1) 8688 (8687 . 8688) (8684 . 8687) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8684) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8685) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#("j" 0 1 (ws-butler-chg chg fontified t)) . -8686) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (#(")" 0 1 (ws-butler-chg chg fontified t)) . -8687) (undo-tree-id311 . -1) (undo-tree-id312 . 1) (undo-tree-id313 . -1) 8688 (8687 . 8688) (8684 . 8687) (#("j" 0 1 (ws-butler-chg chg fontified t)) . -8684) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8685) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8686) (undo-tree-id318 . -1) (undo-tree-id319 . -1) 8687 (8683 . 8687) (8682 . 8683) (8674 . 8682) (8671 . 8674) (#("<" 0 1 (ws-butler-chg chg fontified t)) . -8671) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8672) (undo-tree-id322 . -1) (undo-tree-id323 . -1) 8673 (8668 . 8673) (8667 . 8668) (8660 . 8667)) nil (25314 18064 816130 257000) 0 nil])
([nil nil ((8737 . 8738) (8724 . 8737) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -8724) (undo-tree-id284 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8725) (undo-tree-id285 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -8726) (undo-tree-id286 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -8727) (undo-tree-id287 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8728) (undo-tree-id288 . -1) (#("|" 0 1 (fontified t ws-butler-chg chg)) . -8729) (undo-tree-id289 . -1) (#("|" 0 1 (fontified t ws-butler-chg chg)) . -8730) (undo-tree-id290 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8731) (undo-tree-id291 . -1) 8732 (8727 . 8732) (8726 . 8727) (8724 . 8726) (#("|" 0 1 (fontified t ws-butler-chg chg)) . -8724) (undo-tree-id292 . -1) 8725 (8722 . 8725) (8709 . 8722) 8708) nil (25314 18064 816082 165000) 0 nil])
([nil nil ((8761 . 8762) (8747 . 8761) (8738 . 8747) (t 25314 18064 826056 995000) 8737) nil (25314 18083 496838 392000) 0 nil])
([nil nil ((8724 . 8725) (#("|" 0 1 (fontified t)) . 8724) (t 25314 18083 504214 214000)) nil (25314 18177 652698 568000) 0 nil])
([nil nil ((8632 . 8633) (#("0" 0 1 (fontified t)) . 8632)) nil (25314 18177 652692 148000) 0 nil])
([nil nil ((9263 . 9264) (9261 . 9263) (9259 . 9261) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -9259) (undo-tree-id340 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -9260) (undo-tree-id341 . -1) 9261 (9245 . 9261) (9236 . 9245) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 9236) (undo-tree-id342 . -8) 9244 (9235 . 9244) (t 25314 18177 659006 737000) 9234) nil (25314 18422 847652 644000) 0 nil])
([nil nil ((9259 . 9260) (9257 . 9259) (9254 . 9257) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -9254) (undo-tree-id343 . -1) (undo-tree-id344 . -1) 9255 (9250 . 9255) (9249 . 9250) (9242 . 9249) (9241 . 9242) (9233 . 9241) (9232 . 9233) (9229 . 9232) (9225 . 9229) (9224 . 9225) (9221 . 9224) (#("s" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -9221) (undo-tree-id345 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -9222) (undo-tree-id346 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -9223) (undo-tree-id347 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -9224) (undo-tree-id348 . -1) 9225 (9224 . 9225) (9218 . 9224) (9209 . 9218) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 9209) (undo-tree-id349 . -8) 9217 (9208 . 9217) (t 25314 18422 854070 605000) 9192) nil (25314 18470 133197 718000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2264 . 2265) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -2284) (undo-tree-id350 . -1) (2264 . 2285) 2245 (t 25314 18470 139468 616000)) nil (25314 18495 152010 786000) 0 nil])
([nil nil ((2277 . 2280) (#("ftr" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 2 3 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 2277)) nil (25314 18495 151993 592000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified nil)) . 8818) (undo-tree-id410 . -4) (8822 . 8823) (8817 . 8822) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 8816) (undo-tree-id411 . -4) (8820 . 8821) (8815 . 8820) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8815) (undo-tree-id412 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -8816) (undo-tree-id413 . -1) 8817 (8816 . 8817) (8815 . 8816) (8813 . 8815) (8810 . 8813) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8810) (undo-tree-id414 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8811) (undo-tree-id415 . -1) 8812 (8792 . 8812) (8791 . 8792) (8790 . 8791) (t 25314 18495 157679 204000) 8789) nil (25314 18668 960557 392000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -8827) (undo-tree-id399 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -8828) (undo-tree-id400 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -8829) (undo-tree-id401 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8830) (undo-tree-id402 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -8831) (undo-tree-id403 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8832) (undo-tree-id404 . -1) (#("=" 0 1 (ws-butler-chg chg fontified t)) . -8833) (undo-tree-id405 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8834) (undo-tree-id406 . -1) (#("0" 0 1 (ws-butler-chg chg fontified t)) . -8835) (undo-tree-id407 . -1) (#(";" 0 1 (ws-butler-chg chg fontified t)) . -8836) (undo-tree-id408 . -1) 8837 (8836 . 8837) (8827 . 8836) (8826 . 8827) (8822 . 8826) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8822) (undo-tree-id409 . -1) 8823 (8822 . 8823) (8817 . 8822) 8816) nil (25314 18668 960541 868000) 0 nil])
([nil nil ((9202 . 9209) (#("int" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) . 9202)) nil (25314 18668 960529 734000) 0 nil])
([nil nil ((8882 . 8892) (8866 . 8882) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -8866) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -8867) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -8868) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8869) (undo-tree-id397 . -1) (undo-tree-id398 . -1) 8870 (8866 . 8870) (8865 . 8866) (8862 . 8865) (8853 . 8862) (8852 . 8853) (8848 . 8852) (8847 . 8848) (8842 . 8847) (8841 . 8842) (8840 . 8841) (8827 . 8840)) nil (25314 18668 960526 730000) 0 nil])
([nil nil ((nil fontified nil 9384 . 9385) (nil fontified nil 9383 . 9384) (nil fontified nil 9382 . 9383) (nil fontified nil 9381 . 9382) (nil fontified nil 9380 . 9381) (nil fontified nil 9379 . 9380) (nil fontified nil 9378 . 9379) (#("mic_ftr" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil)) . 9378) (9385 . 9392) (nil fontified t 9368 . 9369) (nil fontified t 9367 . 9368) (nil fontified t 9366 . 9367) (nil fontified t 9365 . 9366) (nil fontified t 9364 . 9365) (nil fontified t 9363 . 9364) (nil fontified t 9362 . 9363) (#("mic_ftr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 9362) (9369 . 9376) (nil fontified t 8891 . 8892) (nil ws-butler-chg chg 8891 . 8892) (nil fontified t 8890 . 8891) (nil ws-butler-chg chg 8890 . 8891) (nil fontified t 8889 . 8890) (nil ws-butler-chg chg 8889 . 8890) (nil fontified t 8888 . 8889) (nil ws-butler-chg chg 8888 . 8889) (nil fontified t 8887 . 8888) (nil ws-butler-chg chg 8887 . 8888) (nil fontified t 8886 . 8887) (nil ws-butler-chg chg 8886 . 8887) (nil fontified t 8885 . 8886) (nil ws-butler-chg chg 8885 . 8886) (#("mic_ftr" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg)) . 8885) (8892 . 8899) (nil fontified t 8773 . 8774) (nil fontified t 8772 . 8773) (nil fontified t 8771 . 8772) (nil fontified t 8770 . 8771) (nil fontified t 8769 . 8770) (nil fontified t 8768 . 8769) (nil fontified t 8767 . 8768) (#("mic_ftr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 8767) (8774 . 8781) (nil fontified t 2259 . 2260) (nil face font-lock-variable-name-face 2259 . 2260) (nil fontified t 2258 . 2259) (nil face font-lock-variable-name-face 2258 . 2259) (nil fontified t 2257 . 2258) (nil face font-lock-variable-name-face 2257 . 2258) (nil fontified t 2256 . 2257) (nil face font-lock-variable-name-face 2256 . 2257) (nil fontified t 2255 . 2256) (nil face font-lock-variable-name-face 2255 . 2256) (nil fontified t 2254 . 2255) (nil face font-lock-variable-name-face 2254 . 2255) (nil fontified t 2253 . 2254) (nil face font-lock-variable-name-face 2253 . 2254) (#("mic_ftr" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t face font-lock-variable-name-face)) . 2253) (2260 . 2267)) nil (25314 18668 960505 469000) 0 nil])
([nil nil ((8901 . 8909) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 8901) (undo-tree-id384 . -12) (undo-tree-id385 . -12) (undo-tree-id386 . -12) (8913 . 8914) (#("]" 0 1 (ws-butler-chg chg fontified t)) . -8913) (undo-tree-id387 . -1) (undo-tree-id388 . 1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) 8914 (8913 . 8914) (8900 . 8913) (8899 . 8900) (8898 . 8899) (8897 . 8898) (8893 . 8897) (8892 . 8893)) nil (25314 18668 960483 203000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -8913) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8914) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -8915) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8916) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -8917) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8918) (undo-tree-id382 . -1) 8919 (8915 . 8919) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8915) (undo-tree-id383 . -1) 8916 (8913 . 8916) (8900 . 8913) 8862) nil (25314 18668 960432 114000) 0 nil])
([nil nil ((2305 . 2306) (2299 . 2305) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2299) (undo-tree-id354 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2300) (undo-tree-id355 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2301) (undo-tree-id356 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2302) (undo-tree-id357 . -1) 2303 (2294 . 2303) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2294) (undo-tree-id358 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2295) (undo-tree-id359 . -1) 2296 (2294 . 2296) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2294) (undo-tree-id360 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2295) (undo-tree-id361 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2296) (undo-tree-id362 . -1) 2297 (2285 . 2297) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2285) (undo-tree-id363 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2286) (undo-tree-id364 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -2287) (undo-tree-id365 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2288) (undo-tree-id366 . -1) 2289 (2285 . 2289) (2284 . 2285) 2276) nil (25314 18668 960397 930000) 0 nil])
([nil nil ((#("            " 0 12 (ws-butler-chg chg)) . 8923) (undo-tree-id351 . -11) (undo-tree-id352 . -11) (undo-tree-id353 . -11)) nil (25314 18668 960368 734000) 0 nil])
([nil nil ((8952 . 8954) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8952) (undo-tree-id416 . -1) 8953 (8949 . 8953) (#("]" 0 1 (fontified t ws-butler-chg chg)) . -8949) (undo-tree-id417 . -1) (undo-tree-id418 . 1) (undo-tree-id419 . -1) 8950 (8948 . 8950) (8935 . 8948) (#("mic_time" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg)) . -8935) (undo-tree-id420 . -8) 8943 (8935 . 8943) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8935) (undo-tree-id421 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8936) (undo-tree-id422 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -8937) (undo-tree-id423 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8938) (undo-tree-id424 . -1) 8939 (8935 . 8939) (8923 . 8935) (8923 . 8924) (#("
" 0 1 (fontified t)) . 8923) (t 25314 18668 974142 252000)) nil (25314 18956 205746 697000) 0 nil])
([nil nil ((2293 . 2297) (#("timestamp" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face)) . 2293)) nil (25314 18956 205723 612000) 0 nil])
([nil nil ((#("timestamp" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t) 2 3 (face font-lock-function-name-face fontified t) 3 4 (face font-lock-function-name-face fontified t) 4 5 (face font-lock-function-name-face fontified t) 5 6 (fontified t face font-lock-function-name-face) 6 7 (fontified t face font-lock-function-name-face) 7 8 (fontified t face font-lock-function-name-face) 8 9 (fontified t face font-lock-function-name-face)) . 8821)) nil (25314 18956 205721 457000) 0 nil])
([nil nil ((nil ws-butler-chg delete 8830 . 8831) (8821 . 8830)) nil (25314 18956 205719 666000) 0 nil])
([nil nil ((8934 . 8938) (#("timestamp" 0 9 (ws-butler-chg chg fontified t)) . 8934)) nil (25314 18956 205716 704000) 0 nil])
([nil nil ((8944 . 8949)) nil (25314 18956 205713 517000) 0 nil])
([nil nil ((8954 . 8955) (8949 . 8954)) nil (25314 18956 205706 601000) 0 nil])
([nil nil ((9019 . 9020) (nil syntax-table nil 9019 . 9020) (nil syntax-table (1) 9017 . 9018) (9018 . 9019) (nil syntax-table nil 9018 . 9019) (nil syntax-table (1) 9017 . 9018) (9017 . 9018) (9016 . 9017) (9010 . 9016) (9001 . 9010) (9000 . 9001) (8996 . 9000) (8995 . 8996) (8992 . 8995) (8989 . 8992) (8988 . 8989) (8975 . 8988) (8974 . 8975) (8970 . 8974) (8965 . 8970) (t 25314 18956 212560 14000) 8964) nil (25314 20282 455592 824000) 0 nil])
([nil nil ((9003 . 9004) (nil syntax-table nil 9055 . 9056) (nil syntax-table (15) 9058 . 9059) (nil syntax-table (15) 9055 . 9056) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9055 . 9056) (9002 . 9003) (nil syntax-table nil 9054 . 9055) (nil syntax-table (15) 9057 . 9058) (nil syntax-table (15) 9054 . 9055) (nil syntax-table nil 9057 . 9058) (nil syntax-table (1) 9054 . 9055) (9001 . 9002) (nil syntax-table nil 9053 . 9054) (nil syntax-table (15) 9056 . 9057) (nil syntax-table (15) 9053 . 9054) (nil syntax-table nil 9056 . 9057) (nil syntax-table (1) 9053 . 9054) (9000 . 9001) (nil syntax-table nil 9052 . 9053) (nil syntax-table (15) 9055 . 9056) (nil syntax-table (15) 9052 . 9053) (nil syntax-table nil 9055 . 9056) (nil syntax-table (1) 9052 . 9053) (8999 . 9000) (nil syntax-table nil 9051 . 9052) (nil syntax-table (15) 9054 . 9055) (nil syntax-table (15) 9051 . 9052) (nil syntax-table nil 9054 . 9055) (nil syntax-table (1) 9051 . 9052) (8998 . 8999) (nil syntax-table nil 9050 . 9051) (nil syntax-table (15) 9053 . 9054) (nil syntax-table (15) 9050 . 9051) (nil syntax-table nil 9053 . 9054) (nil syntax-table (1) 9050 . 9051) (8997 . 8998) (nil syntax-table nil 9049 . 9050) (nil syntax-table (15) 9052 . 9053) (nil syntax-table (15) 9049 . 9050) (nil syntax-table nil 9052 . 9053) (nil syntax-table (1) 9049 . 9050) (8996 . 8997) (nil syntax-table nil 9048 . 9049) (nil syntax-table (15) 9051 . 9052) (nil syntax-table (15) 9048 . 9049) (nil syntax-table nil 9051 . 9052) (nil syntax-table (1) 9048 . 9049) (#("k" 0 1 (fontified t ws-butler-chg chg)) . -8996) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (nil syntax-table nil 9049 . 9050) (nil syntax-table (15) 9052 . 9053) (nil syntax-table (15) 9049 . 9050) (nil syntax-table nil 9052 . 9053) (nil syntax-table (1) 9049 . 9050) (8996 . 8997) (nil syntax-table nil 9048 . 9049) (nil syntax-table (15) 9051 . 9052) (nil syntax-table (15) 9048 . 9049) (nil syntax-table nil 9051 . 9052) (nil syntax-table (1) 9048 . 9049) (8995 . 8996) (nil syntax-table nil 9047 . 9048) (nil syntax-table (15) 9050 . 9051) (nil syntax-table (15) 9047 . 9048) (nil syntax-table nil 9050 . 9051) (nil syntax-table (1) 9047 . 9048) (8994 . 8995) (nil syntax-table nil 9046 . 9047) (nil syntax-table (15) 9049 . 9050) (nil syntax-table (15) 9046 . 9047) (nil syntax-table nil 9049 . 9050) (nil syntax-table (1) 9046 . 9047) (8993 . 8994) (nil syntax-table nil 9045 . 9046) (nil syntax-table (15) 9048 . 9049) (nil syntax-table (15) 9045 . 9046) (nil syntax-table nil 9048 . 9049) (nil syntax-table (1) 9045 . 9046) (8992 . 8993) (nil syntax-table nil 9044 . 9045) (nil syntax-table (15) 9047 . 9048) (nil syntax-table (15) 9044 . 9045) (nil syntax-table nil 9047 . 9048) (nil syntax-table (1) 9044 . 9045) (8991 . 8992) (nil syntax-table nil 9043 . 9044) (nil syntax-table (15) 9046 . 9047) (nil syntax-table (15) 9043 . 9044) (nil syntax-table nil 9046 . 9047) (nil syntax-table nil 9043 . 9044) (nil syntax-table nil 8991 . 8992) (nil syntax-table nil 8977 . 8978) (8990 . 8991) (nil syntax-table nil 9042 . 9043) (nil syntax-table (15) 9045 . 9046) (nil syntax-table (15) 9042 . 9043) (nil syntax-table nil 9045 . 9046) (nil syntax-table nil 9042 . 9043) (nil syntax-table nil 9026 . 9027) (nil syntax-table nil 8977 . 8978) (8989 . 8990) (nil syntax-table nil 9041 . 9042) (nil syntax-table (15) 9044 . 9045) (nil syntax-table (15) 9041 . 9042) (nil syntax-table nil 9044 . 9045) (nil syntax-table nil 9041 . 9042) (nil syntax-table nil 8989 . 8990) (nil syntax-table nil 8977 . 8978) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8989) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (nil syntax-table nil 9042 . 9043) (nil syntax-table (15) 9045 . 9046) (nil syntax-table (15) 9042 . 9043) (nil syntax-table nil 9045 . 9046) (nil syntax-table (1) 9042 . 9043) (8989 . 8990) (nil syntax-table nil 9041 . 9042) (nil syntax-table (15) 9044 . 9045) (nil syntax-table (15) 9041 . 9042) (nil syntax-table nil 9044 . 9045) (nil syntax-table nil 9041 . 9042) (nil syntax-table nil 8989 . 8990) (nil syntax-table nil 8977 . 8978) (8988 . 8989) (nil syntax-table nil 9040 . 9041) (nil syntax-table (15) 9043 . 9044) (nil syntax-table (15) 9040 . 9041) (nil syntax-table nil 9043 . 9044) (nil syntax-table nil 9040 . 9041) (nil syntax-table nil 8988 . 8989) (nil syntax-table nil 8977 . 8978) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8988) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (nil syntax-table nil 9041 . 9042) (nil syntax-table (15) 9044 . 9045) (nil syntax-table (15) 9041 . 9042) (nil syntax-table nil 9044 . 9045) (nil syntax-table nil 9041 . 9042) (nil syntax-table nil 8989 . 8990) (nil syntax-table nil 8977 . 8978) (8988 . 8989) (nil syntax-table nil 9040 . 9041) (nil syntax-table (15) 9043 . 9044) (nil syntax-table (15) 9040 . 9041) (nil syntax-table nil 9043 . 9044) (nil syntax-table nil 9040 . 9041) (nil syntax-table nil 8988 . 8989) (nil syntax-table nil 8977 . 8978) (8987 . 8988) (nil syntax-table nil 9039 . 9040) (nil syntax-table (15) 9042 . 9043) (nil syntax-table (15) 9039 . 9040) (nil syntax-table nil 9042 . 9043) (nil syntax-table nil 9039 . 9040) (nil syntax-table nil 8987 . 8988) (nil syntax-table nil 8977 . 8978) (8986 . 8987) (nil syntax-table nil 9038 . 9039) (nil syntax-table (15) 9041 . 9042) (nil syntax-table (15) 9038 . 9039) (nil syntax-table nil 9041 . 9042) (nil syntax-table nil 9038 . 9039) (nil syntax-table nil 8986 . 8987) (nil syntax-table nil 8977 . 8978) (8985 . 8986) (nil syntax-table nil 9037 . 9038) (nil syntax-table (15) 9040 . 9041) (nil syntax-table (15) 9037 . 9038) (nil syntax-table nil 9040 . 9041) (nil syntax-table nil 9037 . 9038) (nil syntax-table nil 8985 . 8986) (nil syntax-table nil 8977 . 8978) (8984 . 8985) (nil syntax-table nil 9036 . 9037) (nil syntax-table (15) 9039 . 9040) (nil syntax-table (15) 9036 . 9037) (nil syntax-table nil 9039 . 9040) (nil syntax-table nil 9036 . 9037) (nil syntax-table nil 8984 . 8985) (nil syntax-table nil 8977 . 8978) (8983 . 8984) (nil syntax-table nil 9035 . 9036) (nil syntax-table (15) 9038 . 9039) (nil syntax-table (15) 9035 . 9036) (nil syntax-table nil 9038 . 9039) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 8983 . 8984) (nil syntax-table nil 8977 . 8978) (8982 . 8983) (nil syntax-table nil 9034 . 9035) (nil syntax-table (15) 9037 . 9038) (nil syntax-table (15) 9034 . 9035) (nil syntax-table nil 9037 . 9038) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 8982 . 8983) (nil syntax-table nil 8977 . 8978) (8981 . 8982) (nil syntax-table nil 9033 . 9034) (nil syntax-table (15) 9036 . 9037) (nil syntax-table (15) 9033 . 9034) (nil syntax-table nil 9036 . 9037) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 8981 . 8982) (nil syntax-table nil 8977 . 8978) (8980 . 8981) (nil syntax-table nil 9032 . 9033) (nil syntax-table (15) 9035 . 9036) (nil syntax-table (15) 9032 . 9033) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 9032 . 9033) (nil syntax-table nil 8980 . 8981) (nil syntax-table nil 8977 . 8978) (8979 . 8980) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (8978 . 8979) (nil syntax-table nil 9030 . 9031) (nil syntax-table (15) 9033 . 9034) (nil syntax-table (15) 9030 . 9031) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 9030 . 9031) (nil syntax-table nil 8978 . 8979) (nil syntax-table nil 8977 . 8978) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8978) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8979) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (nil syntax-table nil 9032 . 9033) (nil syntax-table (15) 9035 . 9036) (nil syntax-table (15) 9032 . 9033) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 9032 . 9033) (nil syntax-table nil 8980 . 8981) (nil syntax-table nil 8977 . 8978) (8979 . 8980) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (8978 . 8979) (nil syntax-table nil 9030 . 9031) (nil syntax-table (15) 9033 . 9034) (nil syntax-table (15) 9030 . 9031) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 9030 . 9031) (nil syntax-table nil 8978 . 8979) (nil syntax-table nil 8977 . 8978) (#("%" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8978) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8979) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (nil syntax-table nil 9032 . 9033) (nil syntax-table (15) 9035 . 9036) (nil syntax-table (15) 9032 . 9033) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 9032 . 9033) (nil syntax-table nil 8980 . 8981) (nil syntax-table nil 8977 . 8978) (#("\\" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face c-is-sws t)) . -8980) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (nil syntax-table nil 9033 . 9034) (nil syntax-table (15) 9036 . 9037) (nil syntax-table (15) 9033 . 9034) (nil syntax-table nil 9036 . 9037) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 9017 . 9018) (nil syntax-table nil 8977 . 8978) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8981) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (nil syntax-table nil 9034 . 9035) (nil syntax-table (15) 9037 . 9038) (nil syntax-table (15) 9034 . 9035) (nil syntax-table nil 9037 . 9038) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 8982 . 8983) (nil syntax-table nil 8977 . 8978) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8982) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (nil syntax-table nil 9035 . 9036) (nil syntax-table (15) 9038 . 9039) (nil syntax-table (15) 9035 . 9036) (nil syntax-table nil 9038 . 9039) (nil syntax-table (1) 9035 . 9036) (8982 . 8983) (nil syntax-table nil 9034 . 9035) (nil syntax-table (15) 9037 . 9038) (nil syntax-table (15) 9034 . 9035) (nil syntax-table nil 9037 . 9038) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 8982 . 8983) (nil syntax-table nil 8977 . 8978) (8981 . 8982) (nil syntax-table nil 9033 . 9034) (nil syntax-table (15) 9036 . 9037) (nil syntax-table (15) 9033 . 9034) (nil syntax-table nil 9036 . 9037) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 9017 . 9018) (nil syntax-table nil 8977 . 8978) (8980 . 8981) (nil syntax-table nil 9032 . 9033) (nil syntax-table (15) 9035 . 9036) (nil syntax-table (15) 9032 . 9033) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 9032 . 9033) (nil syntax-table nil 8980 . 8981) (nil syntax-table nil 8977 . 8978) (8979 . 8980) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8979) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (nil syntax-table nil 9032 . 9033) (nil syntax-table (15) 9035 . 9036) (nil syntax-table (15) 9032 . 9033) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 9032 . 9033) (nil syntax-table nil 8980 . 8981) (nil syntax-table nil 8977 . 8978) (8979 . 8980) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (8978 . 8979) (nil syntax-table nil 9030 . 9031) (nil syntax-table (15) 9033 . 9034) (nil syntax-table (15) 9030 . 9031) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 9030 . 9031) (nil syntax-table nil 8978 . 8979) (nil syntax-table nil 8977 . 8978) (8977 . 8978) (nil syntax-table nil 9029 . 9030) (nil syntax-table (15) 9032 . 9033) (nil syntax-table (15) 9029 . 9030) (nil syntax-table nil 9032 . 9033) (nil syntax-table (1) 9029 . 9030) (8976 . 8977) (nil syntax-table nil 9028 . 9029) (nil syntax-table (15) 9031 . 9032) (nil syntax-table (15) 9028 . 9029) (nil syntax-table nil 9031 . 9032) (nil syntax-table (1) 9028 . 9029) (8975 . 8976) (nil syntax-table nil 9027 . 9028) (nil syntax-table (15) 9030 . 9031) (nil syntax-table (15) 9027 . 9028) (nil syntax-table nil 9030 . 9031) (nil syntax-table (1) 9027 . 9028) (8974 . 8975) (nil syntax-table nil 9026 . 9027) (nil syntax-table (15) 9029 . 9030) (nil syntax-table (15) 9026 . 9027) (nil syntax-table nil 9029 . 9030) (nil syntax-table (1) 9026 . 9027) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -8974) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (nil syntax-table nil 9027 . 9028) (nil syntax-table (15) 9030 . 9031) (nil syntax-table (15) 9027 . 9028) (nil syntax-table nil 9030 . 9031) (nil syntax-table (1) 9027 . 9028) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8975) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (nil syntax-table nil 9028 . 9029) (nil syntax-table (15) 9031 . 9032) (nil syntax-table (15) 9028 . 9029) (nil syntax-table nil 9031 . 9032) (nil syntax-table (1) 9028 . 9029) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -8976) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (nil syntax-table nil 9029 . 9030) (nil syntax-table (15) 9032 . 9033) (nil syntax-table (15) 9029 . 9030) (nil syntax-table nil 9032 . 9033) (nil syntax-table (1) 9029 . 9030) (8976 . 8977) (nil syntax-table nil 9028 . 9029) (nil syntax-table (15) 9031 . 9032) (nil syntax-table (15) 9028 . 9029) (nil syntax-table nil 9031 . 9032) (nil syntax-table (1) 9028 . 9029) (8975 . 8976) (nil syntax-table nil 9027 . 9028) (nil syntax-table (15) 9030 . 9031) (nil syntax-table (15) 9027 . 9028) (nil syntax-table nil 9030 . 9031) (nil syntax-table (1) 9027 . 9028) (8974 . 8975) (nil syntax-table nil 9026 . 9027) (nil syntax-table (15) 9029 . 9030) (nil syntax-table (15) 9026 . 9027) (nil syntax-table nil 9029 . 9030) (nil syntax-table (1) 9026 . 9027) (8973 . 8974) (nil syntax-table nil 9025 . 9026) (nil syntax-table (15) 9028 . 9029) (nil syntax-table (15) 9025 . 9026) (nil syntax-table nil 9028 . 9029) (nil syntax-table (1) 9025 . 9026) (8972 . 8973) (nil syntax-table nil 9024 . 9025) (nil syntax-table (15) 9027 . 9028) (nil syntax-table (15) 9024 . 9025) (nil syntax-table nil 9027 . 9028) (nil syntax-table (1) 9024 . 9025) (8971 . 8972) (nil syntax-table nil 9023 . 9024) (nil syntax-table (15) 9026 . 9027) (nil syntax-table (15) 9023 . 9024) (nil syntax-table nil 9026 . 9027) (nil syntax-table (1) 9023 . 9024) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8971) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (nil syntax-table nil 9024 . 9025) (nil syntax-table (15) 9027 . 9028) (nil syntax-table (15) 9024 . 9025) (nil syntax-table nil 9027 . 9028) (nil syntax-table (1) 9024 . 9025) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -8972) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (nil syntax-table nil 9025 . 9026) (nil syntax-table (15) 9028 . 9029) (nil syntax-table (15) 9025 . 9026) (nil syntax-table nil 9028 . 9029) (nil syntax-table (1) 9025 . 9026) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8973) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (nil syntax-table nil 9026 . 9027) (nil syntax-table (15) 9029 . 9030) (nil syntax-table (15) 9026 . 9027) (nil syntax-table nil 9029 . 9030) (nil syntax-table (1) 9026 . 9027) (8973 . 8974) (nil syntax-table nil 9025 . 9026) (nil syntax-table (15) 9028 . 9029) (nil syntax-table (15) 9025 . 9026) (nil syntax-table nil 9028 . 9029) (nil syntax-table (1) 9025 . 9026) (8972 . 8973) (nil syntax-table nil 9024 . 9025) (nil syntax-table (15) 9027 . 9028) (nil syntax-table (15) 9024 . 9025) (nil syntax-table nil 9027 . 9028) (nil syntax-table (1) 9024 . 9025) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -8972) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (nil syntax-table nil 9025 . 9026) (nil syntax-table (15) 9028 . 9029) (nil syntax-table (15) 9025 . 9026) (nil syntax-table nil 9028 . 9029) (nil syntax-table (1) 9025 . 9026) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8973) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (nil syntax-table nil 9026 . 9027) (nil syntax-table (15) 9029 . 9030) (nil syntax-table (15) 9026 . 9027) (nil syntax-table nil 9029 . 9030) (nil syntax-table (1) 9026 . 9027) (8973 . 8974) (nil syntax-table nil 9025 . 9026) (nil syntax-table (15) 9028 . 9029) (nil syntax-table (15) 9025 . 9026) (nil syntax-table nil 9028 . 9029) (nil syntax-table (1) 9025 . 9026) (8972 . 8973) (nil syntax-table nil 9024 . 9025) (nil syntax-table (15) 9027 . 9028) (nil syntax-table (15) 9024 . 9025) (nil syntax-table nil 9027 . 9028) (nil syntax-table (1) 9024 . 9025) (8971 . 8972) (nil syntax-table nil 9023 . 9024) (nil syntax-table (15) 9026 . 9027) (nil syntax-table (15) 9023 . 9024) (nil syntax-table nil 9026 . 9027) (nil syntax-table (1) 9023 . 9024) (8970 . 8971) (nil syntax-table nil 9022 . 9023) (nil syntax-table (15) 9025 . 9026) (nil syntax-table (15) 9022 . 9023) (nil syntax-table nil 9025 . 9026) (nil syntax-table (1) 9022 . 9023) (8966 . 8970) (nil syntax-table nil 9018 . 9019) (nil syntax-table (15) 9021 . 9022) (nil syntax-table (15) 9018 . 9019) (nil syntax-table nil 9021 . 9022) (nil syntax-table (1) 9018 . 9019) (8965 . 8966) (nil syntax-table nil 9017 . 9018) (nil syntax-table (15) 9020 . 9021) (nil syntax-table (15) 9017 . 9018) (nil syntax-table nil 9020 . 9021) (nil syntax-table (1) 9017 . 9018) 8964) nil (25314 20282 455559 161000) 0 nil])
([nil nil ((9068 . 9069) (nil syntax-table nil 9068 . 9069) (nil syntax-table (1) 9056 . 9057) (9067 . 9068) (nil syntax-table nil 9067 . 9068) (nil syntax-table (1) 9056 . 9057) (9066 . 9067) (nil syntax-table nil 9066 . 9067) (nil syntax-table (1) 9056 . 9057) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9066) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (nil syntax-table nil 9067 . 9068) (nil syntax-table (1) 9056 . 9057) (9066 . 9067) (nil syntax-table nil 9066 . 9067) (nil syntax-table (1) 9056 . 9057) (9065 . 9066) (nil syntax-table nil 9065 . 9066) (nil syntax-table (1) 9056 . 9057) (9064 . 9065) (nil syntax-table nil 9064 . 9065) (nil syntax-table (1) 9056 . 9057) (9063 . 9064) (nil syntax-table nil 9063 . 9064) (nil syntax-table (1) 9056 . 9057) (9062 . 9063) (nil syntax-table nil 9062 . 9063) (nil syntax-table (1) 9056 . 9057) (9061 . 9062) (nil syntax-table nil 9061 . 9062) (nil syntax-table (1) 9056 . 9057) (9060 . 9061) (nil syntax-table nil 9060 . 9061) (nil syntax-table (1) 9056 . 9057) (9059 . 9060) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057) (9058 . 9059) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9056 . 9057) (9057 . 9058) (nil syntax-table nil 9057 . 9058) (nil syntax-table (1) 9056 . 9057) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9057) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9056 . 9057) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9058) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9059) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (nil syntax-table nil 9060 . 9061) (nil syntax-table (1) 9056 . 9057) (#("k" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9060) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (nil syntax-table nil 9061 . 9062) (nil syntax-table (1) 9056 . 9057) (9060 . 9061) (nil syntax-table nil 9060 . 9061) (nil syntax-table (1) 9056 . 9057) (9059 . 9060) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057) (9058 . 9059) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9056 . 9057) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9058) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9059) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (nil syntax-table nil 9060 . 9061) (nil syntax-table (1) 9056 . 9057) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9060) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (nil syntax-table nil 9061 . 9062) (nil syntax-table (1) 9056 . 9057) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9061) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (nil syntax-table nil 9062 . 9063) (nil syntax-table (1) 9056 . 9057) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9062) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (nil syntax-table nil 9063 . 9064) (nil syntax-table (1) 9056 . 9057) (9062 . 9063) (nil syntax-table nil 9062 . 9063) (nil syntax-table (1) 9056 . 9057) (9061 . 9062) (nil syntax-table nil 9061 . 9062) (nil syntax-table (1) 9056 . 9057) (9060 . 9061) (nil syntax-table nil 9060 . 9061) (nil syntax-table (1) 9056 . 9057) (9059 . 9060) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057) (9058 . 9059) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9056 . 9057) (9057 . 9058) (nil syntax-table nil 9057 . 9058) (nil syntax-table (1) 9056 . 9057) (#("%" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9057) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9056 . 9057) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9058) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057)) nil (25314 20282 455379 411000) 0 nil])
([nil nil ((#("_" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . 9019) (nil syntax-table nil 9056 . 9057) (nil syntax-table (15) 9069 . 9070) (nil syntax-table (15) 9056 . 9057) (nil syntax-table nil 9069 . 9070) (nil syntax-table (1) 9056 . 9057)) nil (25314 20282 455330 122000) 0 nil])
([nil nil ((9016 . 9017) (nil syntax-table nil 9051 . 9052) (nil syntax-table (15) 9064 . 9065) (nil syntax-table (15) 9051 . 9052) (nil syntax-table nil 9064 . 9065) (nil syntax-table (1) 9051 . 9052) (9015 . 9016) (nil syntax-table nil 9050 . 9051) (nil syntax-table (15) 9063 . 9064) (nil syntax-table (15) 9050 . 9051) (nil syntax-table nil 9063 . 9064) (nil syntax-table (1) 9050 . 9051) (9014 . 9015) (nil syntax-table nil 9049 . 9050) (nil syntax-table (15) 9062 . 9063) (nil syntax-table (15) 9049 . 9050) (nil syntax-table nil 9062 . 9063) (nil syntax-table (1) 9049 . 9050) (#("uint8t" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t face font-lock-type-face) 5 6 (ws-butler-chg delete fontified t c-type c-decl-id-start face font-lock-type-face)) . 9014) (undo-tree-id432 . 1) (undo-tree-id433 . -5) (undo-tree-id434 . -5) (nil syntax-table nil 9055 . 9056) (nil syntax-table (15) 9068 . 9069) (nil syntax-table (15) 9055 . 9056) (nil syntax-table nil 9068 . 9069) (nil syntax-table (1) 9055 . 9056)) nil (25314 20282 455322 330000) 0 nil])
([nil nil ((9090 . 9091) (9089 . 9090) (9086 . 9089) (9078 . 9086) (#("mic_" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t)) . -9078) (undo-tree-id426 . -4) (undo-tree-id427 . -4) 9082 (9077 . 9082) (9076 . 9077) (9074 . 9076) (9073 . 9074) (9072 . 9073) (nil syntax-table nil 9072 . 9073) (nil syntax-table (1) 9052 . 9053) (9071 . 9072) (nil syntax-table nil 9073 . 9074) (nil syntax-table (1) 9052 . 9053) (9070 . 9071) (nil syntax-table nil 9070 . 9071) (nil syntax-table (1) 9052 . 9053) (9069 . 9070) (nil syntax-table nil 9069 . 9070) (nil syntax-table (1) 9052 . 9053) (9068 . 9069) (nil syntax-table nil 9068 . 9069) (nil syntax-table (1) 9052 . 9053) (9067 . 9068) (nil syntax-table nil 9067 . 9068) (nil syntax-table (1) 9052 . 9053) (9066 . 9067) (nil syntax-table nil 9066 . 9067) (nil syntax-table (1) 9052 . 9053) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9066) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (nil syntax-table nil 9067 . 9068) (nil syntax-table (1) 9052 . 9053) (#("=" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9067) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (nil syntax-table nil 9068 . 9069) (nil syntax-table (1) 9052 . 9053) (9067 . 9068) (nil syntax-table nil 9067 . 9068) (nil syntax-table (1) 9052 . 9053) (9066 . 9067) (nil syntax-table nil 9066 . 9067) (nil syntax-table (1) 9052 . 9053) (9065 . 9066) (nil syntax-table nil 9065 . 9066) (nil syntax-table (1) 9052 . 9053)) nil (25314 20282 455002 731000) 0 nil])
([nil nil ((9108 . 9109) (9107 . 9108) (9106 . 9107) (nil syntax-table nil 9106 . 9107) (nil syntax-table (1) 9103 . 9104) (9105 . 9106) (nil syntax-table nil 9107 . 9108) (nil syntax-table (1) 9103 . 9104) (9104 . 9105) (nil syntax-table nil 9104 . 9105) (nil syntax-table (1) 9103 . 9104) (9103 . 9104) (9102 . 9103) (9097 . 9102) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -9097) (undo-tree-id425 . -1) 9098 (9096 . 9098) (9091 . 9096) 9090) nil (25314 20282 454941 955000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . -8966) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) 8970 (8965 . 8970) (t 25314 20282 744725 773000) 8964) nil (25314 20284 602004 366000) 0 nil])
([nil nil ((8974 . 8977) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8974) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8975) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8976) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8977) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8978) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8979) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8980) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8981) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8982) (undo-tree-id524 . -1) 8983 (8978 . 8983) (8973 . 8978) (8971 . 8973) (8966 . 8971) (t 25314 20284 609741 472000) 8966) nil (25314 20292 578498 705000) 0 nil])
([nil nil ((8852 . 8853) (#("k" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8852) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8853) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8854) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8855) (undo-tree-id534 . -1) 8856 (8849 . 8856) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8849) (undo-tree-id535 . -1) 8850 (8849 . 8850) (8841 . 8849) (8839 . 8841) (8834 . 8839) (t 25314 20292 588808 633000) 8833) nil (25314 20303 77862 303000) 0 nil])
([nil nil ((2215 . 10902) (#("mic_bit[4];
Queue mic_que[4];
uint8_t mic_cur[4];
uint8_t mic_lst[4];
int mic_tick[4];
uint8_t is_timing = 0;
inline void time_begin()
{
    if (is_timing == 0)
    {
        __HAL_TIM_SetCounter(&htim1, 0);
        is_timing = 1;
    }
}
/* USER CODE END EV */

/******************************************************************************/
/*           Cortex-M4 Processor Interruption and Exception Handlers          */
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
    while (1)
    {
    }
  /* USER CODE END NonMaskableInt_IRQn 1 */
}

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_HardFault_IRQn 0 */
    /* USER CODE END W1_HardFault_IRQn 0 */
  }
}

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
    /* USER CODE END W1_MemoryManagement_IRQn 0 */
  }
}

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_BusFault_IRQn 0 */
    /* USER CODE END W1_BusFault_IRQn 0 */
  }
}

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
    /* USER CODE END W1_UsageFault_IRQn 0 */
  }
}

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
  /* USER CODE BEGIN SVCall_IRQn 0 */

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
  /* USER CODE BEGIN DebugMonitor_IRQn 0 */

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
  /* USER CODE BEGIN PendSV_IRQn 0 */

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}

/******************************************************************************/
/* STM32F4xx Peripheral Interrupt Handlers                                    */
/* Add here the Interrupt Handlers for the used peripherals.                  */
/* For the available peripheral interrupt handler names,                      */
/* please refer to the startup file (startup_stm32f4xx.s).                    */
/******************************************************************************/

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_rx);
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}

/**
  * @brief This function handles DMA1 stream5 global interrupt.
  */
void DMA1_Stream5_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_rx);
  /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */

  /* USER CODE END DMA1_Stream5_IRQn 1 */
}

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
  HAL_TIM_IRQHandler(&htim10);
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
  /* USER CODE BEGIN USART3_IRQn 0 */
    if (__HAL_UART_GET_FLAG(&huart3, UART_FLAG_IDLE) != RESET)
    {
        USER_UART_IDLECallback(&huart3);
    }
  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}

/* USER CODE BEGIN 1 */
void print_delta_distance(int p1, int p2, int p3, int p4, float d1, float d2)
{
    printf(\"MP:%d,%d    delta distance:%f\\n\", p1, p2, d1);
    printf(\"MP:%d,%d    delta distance:%f\\n\", p3, p4, d2);
}

void window_process()
{
    // window cut
    for (uint8_t i = 0; i < 4; i++) {
        Queue *q = &mic_que[i];
        uint8_t d = MAX(0, size(q) - WINDOW_SIZE);
        while (d--)
            pop(q);
    }

    // get filtered data (1 if 1 in window else 0)
    for (uint8_t i = 0; i < 4; i++) {
        Queue *q = &mic_que[i];
        uint8_t x = 1;
        for (uint8_t j = q->back; j != q->front; j = (j + 1) % QUEUE_SIZE)
            x &= q->data[j];
        mic_cur[i] = x;
    }
}

void update_timestamp()
{
    // update tick
    for (uint8_t i = 0; i < 4; i++)
        if (mic_lst[i] == 1 && mic_cur == 0) {
            mic_tick[i] = TIM10->CNT;
        }

    // log
    printf(\"log tick %d\\n\", log_tick);
    for (int i = 0; i < 4; i++)
        printf(\"mic_tick[%d] = %d\\n\", i, mic_tick[i]);
    printf(\"\\n\");
}

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
    if (htim->Instance == TIM10) {
        mic_bit[0] = HAL_GPIO_ReadPin(MIC0_GPIO_Port, MIC0_Pin);
        mic_bit[1] = HAL_GPIO_ReadPin(MIC1_GPIO_Port, MIC1_Pin);
        mic_bit[2] = HAL_GPIO_ReadPin(MIC2_GPIO_Port, MIC2_Pin);
        mic_bit[3] = HAL_GPIO_ReadPin(MIC3_GPIO_Port, MIC3_Pin);

        for (uint8_t i = 0; i < 4; i++)
            push(&mic_que[i], mic_bit[i]);

        memcpy(mic_lst, mic_cur, sizeof(mic_cur));

        window_process();

        update_timestamp();
    }
  //if (TIM1 == htim->Instance && is_timing)
  //{
  //    printf(\"\\n\");
  //    is_timing = 0;
  //    HAL_NVIC_EnableIRQ(EXTI0_IRQn);
  //    HAL_NVIC_EnableIRQ(EXTI1_IRQn);
  //    HAL_NVIC_EnableIRQ(EXTI2_IRQn);
  //    HAL_NVIC_EnableIRQ(EXTI3_IRQn);
  //    for (int i = 0; i < 4; i++)
  //    {
  //        if (mp_timestamp[i] == -1)
  //            return;
  //    }
  //    calculate_delta_distance();
  //    // print_delta_distance(0, 1, 2, 3, delta_distance[0][0], delta_distance[0][1]);
  //    // print_delta_distance(0, 2, 1, 3, delta_distance[1][0], delta_distance[1][1]);
  //    // print_delta_distance(0, 3, 1, 2, delta_distance[2][0], delta_distance[2][1]);
  //    for (int i = 0; i < 4; i++)
  //    {
  //        printf(\"mp:%d,timestamp:%u\\n\", i, mp_timestamp[i]);
  //        mp_timestamp[i] = -1;
  //    }
  //}
  //else if (TIM10 == htim->Instance && is_timing)
  //{
  //    for (int i = 0; i < 4; i++)
  //    {
  //        mp_timestamp[i] = -1;
  //    }
  //" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face) 14 15 (fontified t face font-lock-type-face) 15 16 (fontified t face font-lock-type-face) 16 17 (fontified t c-type c-decl-id-start face font-lock-type-face) 17 18 (fontified t) 18 19 (fontified t face font-lock-variable-name-face) 19 20 (fontified t face font-lock-variable-name-face) 20 21 (fontified t face font-lock-variable-name-face) 21 22 (fontified t face font-lock-variable-name-face) 22 23 (fontified t face font-lock-variable-name-face) 23 24 (fontified t face font-lock-variable-name-face) 24 25 (fontified t face font-lock-variable-name-face) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t face font-lock-type-face) 31 32 (fontified t face font-lock-type-face) 32 33 (fontified t face font-lock-type-face) 33 34 (fontified t face font-lock-type-face) 34 35 (fontified t face font-lock-type-face) 35 36 (fontified t face font-lock-type-face) 36 37 (fontified t c-type c-decl-id-start face font-lock-type-face) 37 38 (fontified t) 38 45 (fontified t face font-lock-variable-name-face) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (rear-nonsticky t fontified t) 50 51 (fontified t face font-lock-type-face) 51 52 (fontified t face font-lock-type-face) 52 53 (fontified t face font-lock-type-face) 53 54 (fontified t face font-lock-type-face) 54 55 (fontified t face font-lock-type-face) 55 56 (fontified t face font-lock-type-face) 56 57 (fontified t c-type c-decl-id-start face font-lock-type-face) 57 58 (fontified t) 58 59 (fontified t face font-lock-variable-name-face) 59 60 (fontified t face font-lock-variable-name-face) 60 61 (fontified t face font-lock-variable-name-face) 61 62 (fontified t face font-lock-variable-name-face) 62 63 (fontified t face font-lock-variable-name-face) 63 64 (fontified t face font-lock-variable-name-face) 64 65 (fontified t face font-lock-variable-name-face) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t face font-lock-type-face) 71 72 (fontified t face font-lock-type-face) 72 73 (fontified t c-type c-decl-id-start face font-lock-type-face) 73 74 (fontified t) 74 75 (fontified t face font-lock-variable-name-face) 75 76 (fontified t face font-lock-variable-name-face) 76 77 (fontified t face font-lock-variable-name-face) 77 78 (fontified t face font-lock-variable-name-face) 78 79 (fontified t face font-lock-variable-name-face) 79 80 (fontified t face font-lock-variable-name-face) 80 81 (fontified t face font-lock-variable-name-face) 81 82 (fontified t face font-lock-variable-name-face) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t face font-lock-type-face) 88 93 (fontified t face font-lock-type-face) 93 94 (fontified t c-type c-decl-id-start face font-lock-type-face) 94 95 (fontified t) 95 104 (fontified t face font-lock-variable-name-face) 104 110 (fontified t) 110 116 (fontified t face font-lock-keyword-face) 116 117 (fontified t) 117 120 (fontified t face font-lock-type-face) 120 121 (fontified t c-type c-decl-id-start face font-lock-type-face) 121 122 (fontified t) 122 132 (fontified t face font-lock-function-name-face) 132 141 (fontified t) 141 143 (fontified t face font-lock-keyword-face) 143 239 (fontified t) 239 240 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 240 242 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 242 258 (c-in-sws t fontified t face font-lock-comment-face) 258 261 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 261 263 (c-in-sws t fontified t) 263 342 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 342 343 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 343 344 (c-in-sws t fontified t) 344 357 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 357 412 (c-in-sws t fontified t face font-lock-comment-face) 412 424 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 424 425 (c-in-sws t fontified t) 425 504 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 504 505 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 505 506 (c-in-sws t fontified t) 506 509 (c-in-sws t fontified t face font-lock-doc-face) 509 514 (c-in-sws t fontified t face font-lock-doc-face) 514 520 (c-in-sws t fontified t face (font-lock-doc-markup-face font-lock-doc-face)) 520 567 (c-in-sws t fontified t face font-lock-doc-face) 567 571 (c-in-sws t fontified t face font-lock-doc-face) 571 572 (c-in-sws t fontified t) 572 573 (c-is-sws t fontified t face font-lock-type-face) 573 575 (fontified t face font-lock-type-face) 575 576 (fontified t c-type c-decl-id-start face font-lock-type-face) 576 577 (fontified t) 577 588 (fontified t face font-lock-function-name-face) 588 589 (fontified t c-type c-decl-arg-start) 589 593 (fontified t face font-lock-type-face) 593 599 (fontified t) 599 602 (fontified t face font-lock-comment-delimiter-face) 602 639 (fontified t face font-lock-comment-face) 639 642 (fontified t face font-lock-comment-delimiter-face) 642 646 (fontified t) 646 649 (fontified t face font-lock-comment-delimiter-face) 649 684 (fontified t face font-lock-comment-face) 684 687 (fontified t face font-lock-comment-delimiter-face) 687 690 (fontified t) 690 693 (fontified t face font-lock-comment-delimiter-face) 693 730 (fontified t face font-lock-comment-face) 730 733 (fontified t face font-lock-comment-delimiter-face) 733 738 (fontified t) 738 743 (fontified t face font-lock-keyword-face) 743 762 (fontified t) 762 765 (fontified t face font-lock-comment-delimiter-face) 765 800 (fontified t face font-lock-comment-face) 800 803 (fontified t face font-lock-comment-delimiter-face) 803 807 (fontified t) 807 808 (c-in-sws t c-is-sws t fontified t face font-lock-doc-face) 808 810 (c-in-sws t fontified t face font-lock-doc-face) 810 815 (c-in-sws t fontified t face font-lock-doc-face) 815 821 (c-in-sws t fontified t face (font-lock-doc-markup-face font-lock-doc-face)) 821 866 (c-in-sws t fontified t face font-lock-doc-face) 866 870 (c-in-sws t fontified t face font-lock-doc-face) 870 871 (c-in-sws t fontified t) 871 872 (c-is-sws t fontified t face font-lock-type-face) 872 874 (fontified t face font-lock-type-face) 874 875 (fontified t c-type c-decl-id-start face font-lock-type-face) 875 876 (fontified t) 876 881 (fontified t face font-lock-function-name-face) 881 885 (fontified t face font-lock-function-name-face) 885 893 (fontified t face font-lock-function-name-face) 893 894 (fontified t c-type c-decl-arg-start) 894 898 (fontified t face font-lock-type-face) 898 899 (fontified t) 899 902 (fontified t) 902 904 (c-in-sws t c-is-sws t fontified t) 904 905 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 905 907 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 907 908 (c-in-sws t fontified t face font-lock-comment-face) 908 939 (c-in-sws t fontified t face font-lock-comment-face) 939 942 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 942 943 (c-in-sws t fontified t) 943 944 (c-is-sws t fontified t) 944 946 (c-is-sws t fontified t) 946 947 (c-is-sws t fontified t face font-lock-comment-delimiter-face) 947 949 (fontified t face font-lock-comment-delimiter-face) 949 979 (fontified t face font-lock-comment-face) 979 982 (fontified t face font-lock-comment-delimiter-face) 982 985 (fontified t) 985 986 (c-is-sws t fontified t face font-lock-keyword-face) 986 990 (fontified t face font-lock-keyword-face) 990 1003 (fontified t) 1003 1006 (fontified t face font-lock-comment-delimiter-face) 1006 1041 (fontified t face font-lock-comment-face) 1041 1044 (fontified t face font-lock-comment-delimiter-face) 1044 1049 (fontified t) 1049 1052 (fontified t face font-lock-comment-delimiter-face) 1052 1085 (fontified t face font-lock-comment-face) 1085 1088 (fontified t face font-lock-comment-delimiter-face) 1088 1096 (fontified t) 1096 1097 (c-in-sws t c-is-sws t fontified t face font-lock-doc-face) 1097 1099 (c-in-sws t fontified t face font-lock-doc-face) 1099 1104 (c-in-sws t fontified t face font-lock-doc-face) 1104 1110 (c-in-sws t fontified t face (font-lock-doc-markup-face font-lock-doc-face)) 1110 1158 (c-in-sws t fontified t face font-lock-doc-face) 1158 1162 (c-in-sws t fontified t face font-lock-doc-face) 1162 1163 (c-in-sws t fontified t) 1163 1164 (c-is-sws t fontified t face font-lock-type-face) 1164 1166 (fontified t face font-lock-type-face) 1166 1167 (fontified t c-type c-decl-id-start face font-lock-type-face) 1167 1168 (fontified t) 1168 1185 (fontified t face font-lock-function-name-face) 1185 1186 (fontified t c-type c-decl-arg-start) 1186 1190 (fontified t face font-lock-type-face) 1190 1196 (fontified t) 1196 1199 (fontified t face font-lock-comment-delimiter-face) 1199 1238 (fontified t face font-lock-comment-face) 1238 1241 (fontified t face font-lock-comment-delimiter-face) 1241 1245 (fontified t) 1245 1248 (fontified t face font-lock-comment-delimiter-face) 1248 1285 (fontified t face font-lock-comment-face) 1285 1288 (fontified t face font-lock-comment-delimiter-face) 1288 1291 (fontified t) 1291 1296 (fontified t face font-lock-keyword-face) 1296 1309 (fontified t) 1309 1312 (fontified t face font-lock-comment-delimiter-face) 1312 1354 (fontified t face font-lock-comment-face) 1354 1357 (fontified t face font-lock-comment-delimiter-face) 1357 1362 (fontified t) 1362 1365 (fontified t face font-lock-comment-delimiter-face) 1365 1405 (fontified t face font-lock-comment-face) 1405 1408 (fontified t face font-lock-comment-delimiter-face) 1408 1416 (fontified t) 1416 1417 (c-in-sws t c-is-sws t fontified t face font-lock-doc-face) 1417 1419 (c-in-sws t fontified t face font-lock-doc-face) 1419 1424 (c-in-sws t fontified t face font-lock-doc-face) 1424 1430 (c-in-sws t fontified t face (font-lock-doc-markup-face font-lock-doc-face)) 1430 1491 (c-in-sws t fontified t face font-lock-doc-face) 1491 1495 (c-in-sws t fontified t face font-lock-doc-face) 1495 1496 (c-in-sws t fontified t) 1496 1497 (c-is-sws t fontified t face font-lock-type-face) 1497 1499 (fontified t face font-lock-type-face) 1499 1500 (fontified t c-type c-decl-id-start face font-lock-type-face) 1500 1501 (fontified t) 1501 1517 (fontified t face font-lock-function-name-face) 1517 1518 (fontified t c-type c-decl-arg-start) 1518 1522 (fontified t face font-lock-type-face) 1522 1526 (fontified t) 1526 1528 (c-in-sws t c-is-sws t fontified t) 1528 1529 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1529 1531 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1531 1547 (c-in-sws t fontified t face font-lock-comment-face) 1547 1561 (c-in-sws t fontified t face font-lock-comment-face) 1561 1562 (c-in-sws t fontified t face font-lock-comment-face) 1562 1565 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1565 1566 (c-in-sws t fontified t) 1566 1567 (c-in-sws t fontified t) 1567 1568 (c-in-sws t fontified t) 1568 1569 (c-in-sws t fontified t) 1569 1572 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1572 1587 (c-in-sws t fontified t face font-lock-comment-face) 1587 1601 (c-in-sws t face font-lock-comment-face fontified t) 1601 1604 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1604 1605 (c-in-sws t fontified t) 1605 1606 (c-is-sws t) 1606 1607 (c-is-sws t) 1607 1608 (c-is-sws t face font-lock-keyword-face) 1608 1612 (face font-lock-keyword-face) 1625 1628 (face font-lock-comment-delimiter-face) 1628 1662 (face font-lock-comment-face) 1662 1665 (face font-lock-comment-delimiter-face) 1670 1673 (face font-lock-comment-delimiter-face) 1673 1705 (face font-lock-comment-face) 1705 1708 (face font-lock-comment-delimiter-face) 1716 1717 (c-is-sws t c-in-sws t face font-lock-doc-face) 1717 1719 (c-in-sws t face font-lock-doc-face) 1719 1720 (c-in-sws t face font-lock-doc-face) 1720 1724 (c-in-sws t face font-lock-doc-face) 1724 1730 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face)) 1730 1793 (c-in-sws t face font-lock-doc-face) 1793 1796 (c-in-sws t face font-lock-doc-face) 1796 1797 (c-in-sws t face font-lock-doc-face) 1797 1798 (c-is-sws t) 1798 1799 (c-is-sws t face font-lock-type-face) 1799 1801 (face font-lock-type-face) 1801 1802 (c-type c-decl-id-start face font-lock-type-face) 1803 1821 (face font-lock-function-name-face) 1821 1822 (c-type c-decl-arg-start) 1822 1826 (face font-lock-type-face) 1830 1832 (c-in-sws t c-is-sws t) 1832 1833 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 1833 1835 (c-in-sws t face font-lock-comment-delimiter-face) 1835 1868 (c-in-sws t face font-lock-comment-face) 1868 1871 (c-in-sws t face font-lock-comment-delimiter-face) 1871 1875 (c-in-sws t) 1875 1878 (c-in-sws t face font-lock-comment-delimiter-face) 1878 1909 (c-in-sws t face font-lock-comment-face) 1909 1912 (c-in-sws t face font-lock-comment-delimiter-face) 1912 1913 (c-in-sws t) 1913 1915 (c-is-sws t c-in-sws t) 1915 1916 (c-is-sws t face font-lock-keyword-face) 1916 1920 (face font-lock-keyword-face) 1933 1934 (c-is-sws t face font-lock-comment-delimiter-face) 1934 1936 (face font-lock-comment-delimiter-face) 1936 1972 (face font-lock-comment-face) 1972 1975 (face font-lock-comment-delimiter-face) 1980 1983 (face font-lock-comment-delimiter-face) 1983 2017 (face font-lock-comment-face) 2017 2020 (face font-lock-comment-delimiter-face) 2023 2024 (c-is-sws t) 2028 2029 (c-is-sws t c-in-sws t face font-lock-doc-face) 2029 2031 (c-in-sws t face font-lock-doc-face) 2031 2036 (c-in-sws t face font-lock-doc-face) 2036 2042 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face)) 2042 2106 (c-in-sws t face font-lock-doc-face) 2106 2110 (c-in-sws t face font-lock-doc-face) 2110 2111 (c-in-sws t) 2111 2112 (c-is-sws t face font-lock-type-face) 2112 2114 (face font-lock-type-face) 2114 2115 (c-type c-decl-id-start face font-lock-type-face) 2116 2127 (face font-lock-function-name-face) 2127 2128 (c-type c-decl-arg-start) 2128 2132 (face font-lock-type-face) 2138 2139 (c-is-sws t face font-lock-comment-delimiter-face) 2139 2141 (face font-lock-comment-delimiter-face) 2141 2170 (face font-lock-comment-face) 2170 2173 (face font-lock-comment-delimiter-face) 2177 2180 (face font-lock-comment-delimiter-face) 2180 2207 (face font-lock-comment-face) 2207 2210 (face font-lock-comment-delimiter-face) 2213 2216 (face font-lock-comment-delimiter-face) 2216 2245 (face font-lock-comment-face) 2245 2248 (face font-lock-comment-delimiter-face) 2252 2255 (face font-lock-comment-delimiter-face) 2255 2282 (face font-lock-comment-face) 2282 2285 (face font-lock-comment-delimiter-face) 2286 2287 (c-is-sws t) 2289 2290 (c-is-sws t c-in-sws t face font-lock-doc-face) 2290 2292 (c-in-sws t face font-lock-doc-face) 2292 2293 (c-in-sws t face font-lock-doc-face) 2293 2297 (c-in-sws t face font-lock-doc-face) 2297 2303 (c-in-sws t face font-lock-doc-face) 2303 2341 (c-in-sws t face font-lock-doc-face) 2341 2344 (c-in-sws t face font-lock-doc-face) 2344 2345 (face font-lock-doc-face c-in-sws t) 2345 2346 (c-is-sws t) 2346 2347 (c-is-sws t face font-lock-type-face) 2347 2349 (face font-lock-type-face) 2349 2350 (c-type c-decl-id-start face font-lock-type-face) 2351 2367 (face font-lock-function-name-face) 2367 2368 (c-type c-decl-arg-start) 2368 2372 (face font-lock-type-face) 2376 2378 (c-in-sws t c-is-sws t) 2378 2379 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 2379 2381 (c-in-sws t face font-lock-comment-delimiter-face) 2381 2416 (c-in-sws t face font-lock-comment-face) 2416 2419 (c-in-sws t face font-lock-comment-delimiter-face) 2419 2423 (c-in-sws t) 2423 2426 (c-in-sws t face font-lock-comment-delimiter-face) 2426 2459 (c-in-sws t face font-lock-comment-face) 2459 2462 (c-in-sws t face font-lock-comment-delimiter-face) 2462 2463 (c-in-sws t) 2463 2464 (c-is-sws t) 2464 2465 (c-in-sws t) 2465 2466 (c-in-sws t face font-lock-comment-delimiter-face) 2466 2468 (c-in-sws t face font-lock-comment-delimiter-face) 2468 2503 (c-in-sws t face font-lock-comment-face) 2503 2506 (c-in-sws t face font-lock-comment-delimiter-face) 2506 2507 (c-in-sws t) 2507 2508 (c-is-sws t) 2508 2510 (c-is-sws t) 2510 2511 (c-is-sws t face font-lock-comment-delimiter-face) 2511 2513 (face font-lock-comment-delimiter-face) 2513 2546 (face font-lock-comment-face) 2546 2549 (face font-lock-comment-delimiter-face) 2550 2551 (c-is-sws t) 2553 2554 (c-is-sws t c-in-sws t face font-lock-doc-face) 2554 2556 (c-in-sws t face font-lock-doc-face) 2556 2561 (c-in-sws t face font-lock-doc-face) 2561 2567 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face)) 2567 2627 (c-in-sws t face font-lock-doc-face) 2627 2631 (c-in-sws t face font-lock-doc-face) 2631 2632 (c-in-sws t) 2632 2633 (c-is-sws t face font-lock-type-face) 2633 2635 (face font-lock-type-face) 2635 2636 (c-type c-decl-id-start face font-lock-type-face) 2637 2651 (face font-lock-function-name-face) 2651 2652 (c-type c-decl-arg-start) 2652 2656 (face font-lock-type-face) 2660 2662 (c-in-sws t c-is-sws t) 2662 2663 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 2663 2665 (c-in-sws t face font-lock-comment-delimiter-face) 2665 2694 (c-in-sws t face font-lock-comment-face) 2694 2697 (c-in-sws t face font-lock-comment-delimiter-face) 2697 2698 (c-in-sws t) 2698 2699 (c-in-sws t) 2699 2700 (c-is-sws t) 2700 2701 (c-in-sws t) 2701 2702 (c-in-sws t face font-lock-comment-delimiter-face) 2702 2704 (c-in-sws t face font-lock-comment-delimiter-face) 2704 2731 (c-in-sws t face font-lock-comment-face) 2731 2734 (c-in-sws t face font-lock-comment-delimiter-face) 2734 2735 (c-in-sws t) 2735 2736 (c-is-sws t) 2736 2737 (c-in-sws t c-is-sws t) 2737 2738 (face font-lock-comment-delimiter-face c-is-sws t) 2738 2740 (c-in-sws t face font-lock-comment-delimiter-face) 2740 2769 (c-in-sws t face font-lock-comment-face) 2769 2772 (c-in-sws t face font-lock-comment-delimiter-face) 2772 2776 (c-in-sws t) 2776 2779 (c-in-sws t face font-lock-comment-delimiter-face) 2779 2806 (c-in-sws t face font-lock-comment-face) 2806 2809 (c-in-sws t face font-lock-comment-delimiter-face) 2809 2810 (c-in-sws t) 2810 2811 (c-is-sws t) 2813 2814 (c-is-sws t c-in-sws t face font-lock-doc-face) 2814 2816 (c-in-sws t face font-lock-doc-face) 2816 2821 (c-in-sws t face font-lock-doc-face) 2821 2827 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face)) 2827 2869 (c-in-sws t face font-lock-doc-face) 2869 2873 (c-in-sws t face font-lock-doc-face) 2873 2874 (c-in-sws t) 2874 2875 (c-is-sws t face font-lock-type-face) 2875 2877 (face font-lock-type-face) 2877 2878 (c-type c-decl-id-start face font-lock-type-face) 2879 2894 (face font-lock-function-name-face) 2894 2895 (c-type c-decl-arg-start) 2895 2899 (face font-lock-type-face) 2903 2905 (c-in-sws t c-is-sws t) 2905 2906 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 2906 2908 (c-in-sws t face font-lock-comment-delimiter-face) 2908 2938 (c-in-sws t face font-lock-comment-face) 2938 2941 (c-in-sws t face font-lock-comment-delimiter-face) 2941 2945 (c-in-sws t) 2945 2948 (c-in-sws t face font-lock-comment-delimiter-face) 2948 2976 (c-in-sws t face font-lock-comment-face) 2976 2979 (c-in-sws t face font-lock-comment-delimiter-face) 2979 2980 (c-in-sws t) 2980 2982 (c-is-sws t c-in-sws t) 2982 2983 (c-is-sws t) 2997 2999 (c-in-sws t c-is-sws t) 2999 3000 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 3000 3002 (c-in-sws t face font-lock-comment-delimiter-face) 3002 3032 (c-in-sws t face font-lock-comment-face) 3032 3035 (c-in-sws t face font-lock-comment-delimiter-face) 3035 3039 (c-in-sws t) 3039 3042 (c-in-sws t face font-lock-comment-delimiter-face) 3042 3070 (c-in-sws t face font-lock-comment-face) 3070 3073 (c-in-sws t face font-lock-comment-delimiter-face) 3073 3074 (c-in-sws t) 3074 3075 (c-is-sws t) 3077 3078 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 3078 3156 (c-in-sws t face font-lock-comment-delimiter-face) 3156 3157 (c-in-sws t face font-lock-comment-delimiter-face) 3157 3158 (c-in-sws t) 3158 3161 (c-in-sws t face font-lock-comment-delimiter-face) 3161 3200 (c-in-sws t face font-lock-comment-face) 3200 3238 (c-in-sws t face font-lock-comment-delimiter-face) 3238 3239 (c-in-sws t) 3239 3242 (c-in-sws t face font-lock-comment-delimiter-face) 3242 3299 (c-in-sws t face font-lock-comment-face) 3299 3319 (c-in-sws t face font-lock-comment-delimiter-face) 3319 3320 (c-in-sws t) 3320 3323 (c-in-sws t face font-lock-comment-delimiter-face) 3323 3376 (c-in-sws t face font-lock-comment-face) 3376 3400 (c-in-sws t face font-lock-comment-delimiter-face) 3400 3401 (c-in-sws t) 3401 3404 (c-in-sws t face font-lock-comment-delimiter-face) 3404 3459 (c-in-sws t face font-lock-comment-face) 3459 3481 (c-in-sws t face font-lock-comment-delimiter-face) 3481 3482 (c-in-sws t) 3482 3561 (c-in-sws t face font-lock-comment-delimiter-face) 3561 3562 (c-in-sws t face font-lock-comment-delimiter-face) 3562 3564 (c-in-sws t) 3564 3567 (c-in-sws t face font-lock-doc-face) 3567 3568 (c-in-sws t face font-lock-doc-face) 3568 3572 (c-in-sws t face font-lock-doc-face) 3572 3578 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face)) 3578 3601 (c-in-sws t face font-lock-doc-face) 3601 3632 (c-in-sws t face font-lock-doc-face) 3632 3636 (c-in-sws t face font-lock-doc-face) 3636 3637 (c-in-sws t) 3637 3638 (c-is-sws t face font-lock-type-face) 3638 3640 (face font-lock-type-face) 3640 3641 (c-type c-decl-id-start face font-lock-type-face) 3642 3665 (face font-lock-function-name-face) 3665 3666 (c-type c-decl-arg-start) 3666 3670 (face font-lock-type-face) 3674 3676 (c-in-sws t c-is-sws t) 3676 3677 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 3677 3679 (c-in-sws t face font-lock-comment-delimiter-face) 3679 3714 (c-in-sws t face font-lock-comment-face) 3714 3717 (c-in-sws t face font-lock-comment-delimiter-face) 3717 3718 (c-in-sws t) 3718 3719 (c-in-sws t) 3719 3720 (c-in-sws t) 3720 3721 (c-in-sws t) 3721 3722 (c-in-sws t face font-lock-comment-delimiter-face) 3722 3724 (c-in-sws t face font-lock-comment-delimiter-face) 3724 3757 (c-in-sws t face font-lock-comment-face) 3757 3760 (c-in-sws t face font-lock-comment-delimiter-face) 3760 3761 (c-in-sws t) 3761 3762 (c-is-sws t) 3762 3763 (c-in-sws t c-is-sws t) 3763 3764 (c-is-sws t) 3800 3802 (c-in-sws t c-is-sws t) 3802 3803 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 3803 3805 (c-in-sws t face font-lock-comment-delimiter-face) 3805 3840 (c-in-sws t face font-lock-comment-face) 3840 3843 (c-in-sws t face font-lock-comment-delimiter-face) 3843 3844 (c-in-sws t) 3844 3845 (c-in-sws t) 3845 3846 (c-is-sws t) 3846 3847 (c-in-sws t c-is-sws t) 3847 3848 (face font-lock-comment-delimiter-face c-is-sws t) 3848 3850 (c-in-sws t face font-lock-comment-delimiter-face) 3850 3883 (c-in-sws t face font-lock-comment-face) 3883 3886 (c-in-sws t face font-lock-comment-delimiter-face) 3886 3887 (c-in-sws t) 3887 3888 (c-is-sws t) 3890 3891 (c-in-sws t c-is-sws t face font-lock-doc-face) 3891 3893 (c-in-sws t face font-lock-doc-face) 3893 3898 (c-in-sws t face font-lock-doc-face) 3898 3904 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face)) 3904 3958 (c-in-sws t face font-lock-doc-face) 3958 3962 (c-in-sws t face font-lock-doc-face) 3962 3963 (c-in-sws t) 3963 3964 (c-is-sws t face font-lock-type-face) 3964 3966 (face font-lock-type-face) 3966 3967 (c-type c-decl-id-start face font-lock-type-face) 3968 3991 (face font-lock-function-name-face) 3991 3992 (c-type c-decl-arg-start) 3992 3996 (face font-lock-type-face) 4000 4002 (c-in-sws t c-is-sws t) 4002 4003 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 4003 4005 (c-in-sws t face font-lock-comment-delimiter-face) 4005 4040 (c-in-sws t face font-lock-comment-face) 4040 4043 (c-in-sws t face font-lock-comment-delimiter-face) 4043 4044 (c-in-sws t) 4044 4045 (c-in-sws t) 4045 4047 (c-in-sws t) 4047 4048 (face font-lock-comment-delimiter-face c-in-sws t) 4048 4050 (c-in-sws t face font-lock-comment-delimiter-face) 4050 4083 (c-in-sws t face font-lock-comment-face) 4083 4086 (c-in-sws t face font-lock-comment-delimiter-face) 4086 4087 (c-in-sws t) 4087 4089 (c-in-sws t c-is-sws t) 4089 4090 (c-is-sws t) 4128 4131 (face font-lock-comment-delimiter-face) 4131 4166 (face font-lock-comment-face) 4166 4169 (face font-lock-comment-delimiter-face) 4173 4176 (face font-lock-comment-delimiter-face) 4176 4209 (face font-lock-comment-face) 4209 4212 (face font-lock-comment-delimiter-face) 4216 4217 (c-is-sws t c-in-sws t face font-lock-doc-face) 4217 4219 (c-in-sws t face font-lock-doc-face) 4219 4220 (c-in-sws t face font-lock-doc-face) 4220 4224 (c-in-sws t face font-lock-doc-face) 4224 4230 (c-in-sws t face font-lock-doc-face) 4230 4261 (c-in-sws t face font-lock-doc-face) 4261 4303 (c-in-sws t face font-lock-doc-face) 4303 4306 (c-in-sws t face font-lock-doc-face) 4306 4307 (face font-lock-doc-face c-in-sws t) 4307 4308 (c-is-sws t) 4308 4309 (c-is-sws t face font-lock-type-face) 4309 4311 (face font-lock-type-face) 4311 4312 (c-type c-decl-id-start face font-lock-type-face) 4313 4337 (face font-lock-function-name-face) 4337 4338 (c-type c-decl-arg-start) 4338 4342 (face font-lock-type-face) 4346 4348 (c-in-sws t c-is-sws t) 4348 4349 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 4349 4351 (c-in-sws t face font-lock-comment-delimiter-face) 4351 4387 (c-in-sws t face font-lock-comment-face) 4387 4390 (c-in-sws t face font-lock-comment-delimiter-face) 4390 4394 (c-in-sws t) 4394 4397 (c-in-sws t face font-lock-comment-delimiter-face) 4397 4431 (c-in-sws t face font-lock-comment-face) 4431 4434 (c-in-sws t face font-lock-comment-delimiter-face) 4434 4435 (c-in-sws t) 4435 4437 (c-is-sws t c-in-sws t) 4437 4438 (c-is-sws t) 4498 4499 (c-is-sws t face font-lock-comment-delimiter-face) 4499 4501 (face font-lock-comment-delimiter-face) 4501 4537 (face font-lock-comment-face) 4537 4540 (face font-lock-comment-delimiter-face) 4544 4547 (face font-lock-comment-delimiter-face) 4547 4581 (face font-lock-comment-face) 4581 4584 (face font-lock-comment-delimiter-face) 4585 4586 (c-is-sws t) 4588 4589 (c-is-sws t c-in-sws t face font-lock-doc-face) 4589 4591 (c-in-sws t face font-lock-doc-face) 4591 4596 (c-in-sws t face font-lock-doc-face) 4596 4602 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face)) 4602 4650 (c-in-sws t face font-lock-doc-face) 4650 4653 (c-in-sws t face font-lock-doc-face) 4653 4654 (c-in-sws t face font-lock-doc-face) 4654 4655 (c-is-sws t) 4655 4656 (c-is-sws t face font-lock-type-face) 4656 4658 (face font-lock-type-face) 4658 4659 (c-type c-decl-id-start face font-lock-type-face) 4660 4677 (face font-lock-function-name-face) 4677 4678 (c-type c-decl-arg-start) 4678 4682 (face font-lock-type-face) 4686 4688 (c-in-sws t c-is-sws t) 4688 4689 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 4689 4691 (c-in-sws t face font-lock-comment-delimiter-face) 4691 4720 (c-in-sws t face font-lock-comment-face) 4720 4723 (c-in-sws t face font-lock-comment-delimiter-face) 4723 4727 (c-in-sws t) 4727 4730 (c-in-sws t face font-lock-comment-delimiter-face) 4730 4757 (c-in-sws t face font-lock-comment-face) 4757 4760 (c-in-sws t face font-lock-comment-delimiter-face) 4760 4761 (c-in-sws t) 4761 4763 (c-is-sws t c-in-sws t) 4763 4764 (c-is-sws t) 4793 4795 (c-in-sws t c-is-sws t) 4795 4796 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 4796 4798 (c-in-sws t face font-lock-comment-delimiter-face) 4798 4827 (c-in-sws t face font-lock-comment-face) 4827 4830 (c-in-sws t face font-lock-comment-delimiter-face) 4830 4831 (c-in-sws t) 4831 4832 (c-is-sws t) 4832 4834 (c-is-sws t) 4834 4835 (c-is-sws t face font-lock-comment-delimiter-face) 4835 4837 (face font-lock-comment-delimiter-face) 4837 4864 (face font-lock-comment-face) 4864 4867 (face font-lock-comment-delimiter-face) 4868 4869 (c-is-sws t) 4871 4872 (c-is-sws t c-in-sws t face font-lock-doc-face) 4872 4874 (c-in-sws t face font-lock-doc-face) 4874 4879 (c-in-sws t face font-lock-doc-face) 4879 4885 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face)) 4885 4933 (c-in-sws t face font-lock-doc-face) 4933 4936 (c-in-sws t face font-lock-doc-face) 4936 4937 (c-in-sws t face font-lock-doc-face) 4937 4938 (c-is-sws t) 4938 4939 (c-is-sws t face font-lock-type-face) 4939 4941 (face font-lock-type-face) 4941 4942 (c-type c-decl-id-start face font-lock-type-face) 4943 4960 (face font-lock-function-name-face) 4960 4961 (c-type c-decl-arg-start) 4961 4965 (face font-lock-type-face) 4969 4971 (c-in-sws t c-is-sws t) 4971 4972 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 4972 4974 (c-in-sws t face font-lock-comment-delimiter-face) 4974 5003 (c-in-sws t face font-lock-comment-face) 5003 5006 (c-in-sws t face font-lock-comment-delimiter-face) 5006 5010 (c-in-sws t) 5010 5013 (c-in-sws t face font-lock-comment-delimiter-face) 5013 5040 (c-in-sws t face font-lock-comment-face) 5040 5043 (c-in-sws t face font-lock-comment-delimiter-face) 5043 5044 (c-in-sws t) 5044 5046 (c-is-sws t c-in-sws t) 5046 5047 (c-is-sws t) 5076 5078 (c-in-sws t c-is-sws t) 5078 5079 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 5079 5081 (c-in-sws t face font-lock-comment-delimiter-face) 5081 5110 (c-in-sws t face font-lock-comment-face) 5110 5113 (c-in-sws t face font-lock-comment-delimiter-face) 5113 5117 (c-in-sws t) 5117 5120 (c-in-sws t face font-lock-comment-delimiter-face) 5120 5147 (c-in-sws t face font-lock-comment-face) 5147 5150 (c-in-sws t face font-lock-comment-delimiter-face) 5150 5151 (c-in-sws t) 5151 5152 (c-is-sws t) 5154 5155 (c-is-sws t c-in-sws t face font-lock-doc-face) 5155 5157 (c-in-sws t face font-lock-doc-face) 5157 5162 (c-in-sws t face font-lock-doc-face) 5162 5168 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face)) 5168 5216 (c-in-sws t face font-lock-doc-face) 5216 5220 (c-in-sws t face font-lock-doc-face) 5220 5221 (c-in-sws t) 5221 5222 (c-is-sws t face font-lock-type-face) 5222 5224 (face font-lock-type-face) 5224 5225 (c-type c-decl-id-start face font-lock-type-face) 5226 5243 (face font-lock-function-name-face) 5243 5244 (c-type c-decl-arg-start) 5244 5248 (face font-lock-type-face) 5252 5254 (c-in-sws t c-is-sws t) 5254 5255 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 5255 5257 (c-in-sws t face font-lock-comment-delimiter-face) 5257 5286 (c-in-sws t face font-lock-comment-face) 5286 5289 (c-in-sws t face font-lock-comment-delimiter-face) 5289 5290 (c-in-sws t) 5290 5294 (c-is-sws t c-in-sws t) 5294 5295 (c-is-sws t face font-lock-keyword-face) 5295 5296 (face font-lock-keyword-face) 5406 5408 (c-in-sws t c-is-sws t) 5408 5409 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 5409 5411 (c-in-sws t face font-lock-comment-delimiter-face) 5411 5438 (c-in-sws t face font-lock-comment-face) 5438 5441 (c-in-sws t face font-lock-comment-delimiter-face) 5441 5442 (c-in-sws t) 5442 5444 (c-is-sws t c-in-sws t) 5444 5445 (c-is-sws t) 5476 5477 (c-is-sws t face font-lock-comment-delimiter-face) 5477 5479 (face font-lock-comment-delimiter-face) 5479 5508 (face font-lock-comment-face) 5508 5511 (face font-lock-comment-delimiter-face) 5515 5518 (face font-lock-comment-delimiter-face) 5518 5545 (face font-lock-comment-face) 5545 5548 (face font-lock-comment-delimiter-face) 5549 5550 (c-is-sws t) 5552 5553 (c-is-sws t c-in-sws t face font-lock-doc-face) 5553 5555 (c-in-sws t face font-lock-doc-face) 5555 5560 (c-in-sws t face font-lock-doc-face) 5560 5566 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face)) 5566 5620 (c-in-sws t face font-lock-doc-face) 5620 5623 (c-in-sws t face font-lock-doc-face) 5623 5624 (c-in-sws t face font-lock-doc-face) 5624 5625 (c-is-sws t) 5625 5626 (c-is-sws t face font-lock-type-face) 5626 5628 (face font-lock-type-face) 5628 5629 (c-type c-decl-id-start face font-lock-type-face) 5630 5653 (face font-lock-function-name-face) 5653 5654 (c-type c-decl-arg-start) 5654 5658 (face font-lock-type-face) 5662 5664 (c-in-sws t c-is-sws t) 5664 5665 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 5665 5667 (c-in-sws t face font-lock-comment-delimiter-face) 5667 5702 (c-in-sws t face font-lock-comment-face) 5702 5705 (c-in-sws t face font-lock-comment-delimiter-face) 5705 5706 (c-in-sws t) 5706 5707 (c-in-sws t) 5707 5708 (c-in-sws t) 5708 5709 (c-in-sws t) 5709 5710 (face font-lock-comment-delimiter-face c-in-sws t) 5710 5712 (c-in-sws t face font-lock-comment-delimiter-face) 5712 5745 (c-in-sws t face font-lock-comment-face) 5745 5748 (c-in-sws t face font-lock-comment-delimiter-face) 5748 5749 (c-in-sws t) 5749 5750 (c-is-sws t c-in-sws t) 5750 5751 (c-in-sws t c-is-sws t) 5751 5752 (c-is-sws t) 5788 5790 (c-in-sws t c-is-sws t) 5790 5791 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 5791 5793 (c-in-sws t face font-lock-comment-delimiter-face) 5793 5828 (c-in-sws t face font-lock-comment-face) 5828 5831 (c-in-sws t face font-lock-comment-delimiter-face) 5831 5832 (c-in-sws t) 5832 5833 (c-in-sws t) 5833 5834 (c-is-sws t) 5834 5835 (c-in-sws t) 5835 5836 (c-in-sws t face font-lock-comment-delimiter-face) 5836 5838 (c-in-sws t face font-lock-comment-delimiter-face) 5838 5871 (c-in-sws t face font-lock-comment-face) 5871 5874 (c-in-sws t face font-lock-comment-delimiter-face) 5874 5875 (c-in-sws t) 5875 5876 (c-is-sws t) 5878 5879 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 5879 5881 (c-in-sws t face font-lock-comment-delimiter-face) 5881 5898 (c-in-sws t face font-lock-comment-face) 5898 5901 (c-in-sws t face font-lock-comment-delimiter-face) 5901 5902 (c-in-sws t) 5902 5903 (c-is-sws t face font-lock-type-face) 5903 5905 (face font-lock-type-face) 5905 5906 (c-type c-decl-id-start face font-lock-type-face) 5907 5927 (face font-lock-function-name-face) 5927 5928 (c-type c-decl-arg-start) 5928 5931 (face font-lock-type-face) 5932 5934 (face font-lock-variable-name-face) 5934 5935 (c-type c-decl-arg-start) 5936 5939 (face font-lock-type-face) 5940 5942 (face font-lock-variable-name-face) 5942 5943 (c-type c-decl-arg-start) 5944 5947 (face font-lock-type-face) 5948 5950 (face font-lock-variable-name-face) 5950 5951 (c-type c-decl-arg-start) 5952 5955 (face font-lock-type-face) 5956 5958 (face font-lock-variable-name-face) 5958 5959 (c-type c-decl-arg-start) 5960 5965 (face font-lock-type-face) 5966 5968 (face font-lock-variable-name-face) 5968 5969 (c-type c-decl-arg-start) 5970 5975 (face font-lock-type-face) 5976 5978 (face font-lock-variable-name-face) 5993 6026 (face font-lock-string-face) 6052 6085 (face font-lock-string-face) 6103 6104 (face font-lock-type-face fontified t) 6104 6105 (face font-lock-type-face fontified t) 6105 6106 (face font-lock-type-face fontified t) 6106 6107 (c-type c-decl-id-start face font-lock-type-face fontified t) 6107 6108 (fontified t) 6108 6110 (face font-lock-function-name-face fontified t) 6110 6111 (face font-lock-function-name-face fontified t) 6111 6112 (face font-lock-function-name-face fontified t) 6112 6113 (face font-lock-function-name-face fontified t) 6113 6114 (face font-lock-function-name-face fontified t) 6114 6115 (face font-lock-function-name-face fontified t) 6115 6116 (face font-lock-function-name-face fontified t) 6116 6117 (face font-lock-function-name-face fontified t) 6117 6118 (face font-lock-function-name-face fontified t) 6118 6119 (face font-lock-function-name-face fontified t) 6119 6120 (face font-lock-function-name-face fontified t) 6120 6121 (face font-lock-function-name-face fontified t) 6121 6122 (face font-lock-function-name-face fontified t) 6122 6123 (fontified t) 6123 6124 (fontified t) 6124 6125 (fontified t) 6125 6126 (fontified t) 6126 6127 (fontified t) 6127 6131 (c-in-sws t c-is-sws t fontified t) 6131 6132 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 6132 6133 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6133 6134 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6134 6135 (c-in-sws t fontified t face font-lock-comment-face) 6135 6136 (c-in-sws t fontified t face font-lock-comment-face) 6136 6137 (c-in-sws t fontified t face font-lock-comment-face) 6137 6138 (c-in-sws t fontified t face font-lock-comment-face) 6138 6139 (c-in-sws t fontified t face font-lock-comment-face) 6139 6140 (c-in-sws t fontified t face font-lock-comment-face) 6140 6141 (c-in-sws t fontified t face font-lock-comment-face) 6141 6142 (c-in-sws t fontified t face font-lock-comment-face) 6142 6143 (c-in-sws t fontified t face font-lock-comment-face) 6143 6144 (c-in-sws t fontified t face font-lock-comment-face) 6144 6145 (c-in-sws t fontified t face font-lock-comment-face) 6145 6146 (c-is-sws t fontified t) 6146 6149 (c-is-sws t fontified t) 6149 6150 (c-is-sws t fontified t face font-lock-keyword-face) 6150 6151 (fontified t face font-lock-keyword-face) 6151 6152 (fontified t face font-lock-keyword-face) 6152 6153 (fontified t) 6153 6154 (fontified t) 6154 6155 (fontified t face font-lock-type-face) 6155 6156 (fontified t face font-lock-type-face) 6156 6157 (fontified t face font-lock-type-face) 6157 6158 (fontified t face font-lock-type-face) 6158 6159 (fontified t face font-lock-type-face) 6159 6160 (fontified t face font-lock-type-face) 6160 6161 (fontified t c-type c-decl-id-start face font-lock-type-face) 6161 6162 (fontified t) 6162 6163 (fontified t face font-lock-variable-name-face) 6163 6164 (fontified t) 6164 6165 (fontified t) 6165 6166 (fontified t) 6166 6167 (fontified t) 6167 6168 (fontified t) 6168 6169 (fontified t) 6169 6170 (fontified t) 6170 6171 (fontified t) 6171 6172 (fontified t) 6172 6173 (fontified t) 6173 6174 (fontified t) 6174 6175 (fontified t) 6175 6176 (fontified t) 6176 6177 (fontified t) 6177 6178 (fontified t) 6178 6179 (fontified t) 6179 6180 (fontified t) 6180 6181 (fontified t) 6181 6182 (fontified t) 6182 6183 (fontified t) 6183 6191 (fontified t) 6191 6192 (fontified t face font-lock-type-face) 6192 6193 (fontified t face font-lock-type-face) 6193 6194 (fontified t face font-lock-type-face) 6194 6195 (fontified t face font-lock-type-face) 6195 6196 (fontified t c-type c-decl-id-start face font-lock-type-face) 6196 6197 (fontified t) 6197 6198 (fontified t) 6198 6199 (fontified t face font-lock-variable-name-face) 6199 6200 (fontified t) 6200 6201 (fontified t) 6201 6202 (fontified t) 6202 6203 (fontified t) 6203 6207 (fontified t) 6207 6208 (fontified t) 6208 6209 (fontified t) 6209 6210 (fontified t) 6210 6211 (fontified t) 6211 6212 (fontified t) 6212 6213 (fontified t) 6213 6214 (fontified t) 6214 6215 (fontified t) 6215 6216 (fontified t) 6216 6223 (fontified t) 6223 6224 (fontified t face font-lock-type-face) 6224 6225 (fontified t face font-lock-type-face) 6225 6226 (fontified t face font-lock-type-face) 6226 6227 (fontified t face font-lock-type-face) 6227 6228 (fontified t face font-lock-type-face) 6228 6229 (fontified t face font-lock-type-face) 6229 6230 (fontified t c-type c-decl-id-start face font-lock-type-face) 6230 6231 (fontified t) 6231 6232 (fontified t face font-lock-variable-name-face) 6232 6233 (fontified t) 6233 6234 (fontified t) 6234 6235 (fontified t) 6235 6236 (fontified t) 6236 6237 (fontified t) 6237 6238 (fontified t) 6238 6239 (fontified t) 6239 6240 (fontified t) 6240 6241 (fontified t) 6241 6242 (fontified t) 6242 6243 (fontified t) 6243 6244 (fontified t) 6244 6245 (fontified t) 6245 6246 (fontified t) 6246 6247 (fontified t) 6247 6248 (fontified t) 6248 6249 (fontified t) 6249 6250 (fontified t) 6250 6251 (fontified t) 6251 6252 (fontified t) 6252 6253 (fontified t) 6253 6254 (fontified t) 6254 6255 (fontified t) 6255 6256 (fontified t) 6256 6257 (fontified t) 6257 6258 (fontified t) 6258 6259 (fontified t) 6259 6260 (fontified t) 6260 6261 (fontified t) 6261 6262 (fontified t) 6262 6263 (fontified t) 6263 6264 (fontified t) 6264 6265 (fontified t) 6265 6266 (fontified t) 6266 6274 (fontified t) 6274 6279 (fontified t face font-lock-keyword-face) 6279 6280 (fontified t) 6280 6281 (fontified t) 6281 6282 (fontified t) 6282 6283 (fontified t) 6283 6284 (fontified t) 6284 6285 (fontified t) 6285 6286 (fontified t) 6286 6298 (fontified t) 6298 6299 (fontified t) 6299 6300 (fontified t) 6300 6301 (fontified t) 6301 6302 (fontified t) 6302 6303 (fontified t) 6303 6304 (fontified t) 6304 6305 (fontified t) 6305 6306 (fontified t) 6306 6307 (fontified t) 6307 6310 (fontified t) 6310 6311 (fontified t) 6311 6312 (fontified t) 6312 6313 (fontified t) 6313 6317 (c-in-sws t c-is-sws t fontified t) 6317 6318 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 6318 6319 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6319 6320 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6320 6321 (c-in-sws t fontified t face font-lock-comment-face) 6321 6322 (c-in-sws t fontified t face font-lock-comment-face) 6322 6323 (c-in-sws t fontified t face font-lock-comment-face) 6323 6324 (c-in-sws t fontified t face font-lock-comment-face) 6324 6325 (c-in-sws t fontified t face font-lock-comment-face) 6325 6326 (c-in-sws t fontified t face font-lock-comment-face) 6326 6327 (c-in-sws t fontified t face font-lock-comment-face) 6327 6328 (c-in-sws t fontified t face font-lock-comment-face) 6328 6329 (c-in-sws t fontified t face font-lock-comment-face) 6329 6330 (c-in-sws t fontified t face font-lock-comment-face) 6330 6331 (c-in-sws t fontified t face font-lock-comment-face) 6331 6332 (c-in-sws t fontified t face font-lock-comment-face) 6332 6333 (c-in-sws t fontified t face font-lock-comment-face) 6333 6334 (c-in-sws t fontified t face font-lock-comment-face) 6334 6335 (c-in-sws t fontified t face font-lock-comment-face) 6335 6336 (c-in-sws t fontified t face font-lock-comment-face) 6336 6337 (c-in-sws t fontified t face font-lock-comment-face) 6337 6338 (c-in-sws t fontified t face font-lock-comment-face) 6338 6339 (c-in-sws t fontified t face font-lock-comment-face) 6339 6340 (c-in-sws t fontified t face font-lock-comment-face) 6340 6341 (c-in-sws t fontified t face font-lock-comment-face) 6341 6342 (c-in-sws t fontified t face font-lock-comment-face) 6342 6343 (c-in-sws t fontified t face font-lock-comment-face) 6343 6344 (c-in-sws t fontified t face font-lock-comment-face) 6344 6345 (c-in-sws t fontified t face font-lock-comment-face) 6345 6346 (c-in-sws t fontified t face font-lock-comment-face) 6346 6347 (c-in-sws t fontified t face font-lock-comment-face) 6347 6348 (c-in-sws t fontified t face font-lock-comment-face) 6348 6349 (c-in-sws t fontified t face font-lock-comment-face) 6349 6350 (c-in-sws t fontified t face font-lock-comment-face) 6350 6351 (c-in-sws t fontified t face font-lock-comment-face) 6351 6352 (c-in-sws t fontified t face font-lock-comment-face) 6352 6353 (c-in-sws t fontified t face font-lock-comment-face) 6353 6354 (c-in-sws t fontified t face font-lock-comment-face) 6354 6355 (c-in-sws t fontified t face font-lock-comment-face) 6355 6356 (c-in-sws t fontified t face font-lock-comment-face) 6356 6361 (c-in-sws t fontified t face font-lock-comment-face) 6361 6362 (c-in-sws t fontified t face font-lock-comment-face) 6362 6363 (c-in-sws t fontified t face font-lock-comment-face) 6363 6364 (c-in-sws t fontified t face font-lock-comment-face) 6364 6365 (c-is-sws t fontified t) 6365 6368 (c-is-sws t fontified t) 6368 6369 (c-is-sws t fontified t face font-lock-keyword-face) 6369 6370 (fontified t face font-lock-keyword-face) 6370 6371 (fontified t face font-lock-keyword-face) 6371 6372 (fontified t) 6372 6373 (fontified t) 6373 6374 (fontified t face font-lock-type-face) 6374 6375 (fontified t face font-lock-type-face) 6375 6376 (fontified t face font-lock-type-face) 6376 6377 (fontified t face font-lock-type-face) 6377 6378 (fontified t face font-lock-type-face) 6378 6379 (fontified t face font-lock-type-face) 6379 6380 (fontified t c-type c-decl-id-start face font-lock-type-face) 6380 6381 (fontified t) 6381 6382 (fontified t face font-lock-variable-name-face) 6382 6383 (fontified t) 6383 6384 (fontified t) 6384 6385 (fontified t) 6385 6386 (fontified t) 6386 6387 (fontified t) 6387 6388 (fontified t) 6388 6389 (fontified t) 6389 6390 (fontified t) 6390 6391 (fontified t) 6391 6392 (fontified t) 6392 6393 (fontified t) 6393 6394 (fontified t) 6394 6395 (fontified t) 6395 6396 (fontified t) 6396 6397 (fontified t) 6397 6398 (fontified t) 6398 6399 (fontified t) 6399 6400 (fontified t) 6400 6401 (fontified t) 6401 6402 (fontified t) 6402 6409 (fontified t) 6409 6410 (rear-nonsticky t fontified t) 6410 6411 (fontified t face font-lock-type-face) 6411 6412 (fontified t face font-lock-type-face) 6412 6413 (fontified t face font-lock-type-face) 6413 6414 (fontified t face font-lock-type-face) 6414 6415 (fontified t c-type c-decl-id-start face font-lock-type-face) 6415 6416 (fontified t) 6416 6417 (fontified t) 6417 6418 (fontified t face font-lock-variable-name-face) 6418 6419 (fontified t) 6419 6420 (fontified t) 6420 6421 (fontified t) 6421 6422 (fontified t) 6422 6426 (fontified t) 6426 6427 (fontified t) 6427 6428 (fontified t) 6428 6429 (fontified t) 6429 6430 (fontified t) 6430 6431 (fontified t) 6431 6432 (fontified t) 6432 6433 (fontified t) 6433 6434 (fontified t) 6434 6442 (fontified t) 6442 6443 (fontified t face font-lock-type-face) 6443 6444 (fontified t face font-lock-type-face) 6444 6445 (fontified t face font-lock-type-face) 6445 6446 (fontified t face font-lock-type-face) 6446 6447 (fontified t face font-lock-type-face) 6447 6448 (fontified t face font-lock-type-face) 6448 6449 (fontified t c-type c-decl-id-start face font-lock-type-face) 6449 6450 (fontified t) 6450 6451 (fontified t face font-lock-variable-name-face) 6451 6452 (fontified t) 6452 6453 (fontified t) 6453 6454 (fontified t) 6454 6455 (fontified t) 6455 6456 (fontified t) 6456 6457 (fontified t) 6457 6458 (fontified t) 6458 6465 (fontified t) 6465 6466 (fontified t face font-lock-keyword-face) 6466 6467 (fontified t face font-lock-keyword-face) 6467 6468 (fontified t face font-lock-keyword-face) 6468 6469 (fontified t) 6469 6470 (fontified t) 6470 6471 (fontified t face font-lock-type-face) 6471 6472 (fontified t face font-lock-type-face) 6472 6473 (fontified t face font-lock-type-face) 6473 6474 (fontified t face font-lock-type-face) 6474 6475 (fontified t face font-lock-type-face) 6475 6476 (fontified t face font-lock-type-face) 6476 6477 (fontified t c-type c-decl-id-start face font-lock-type-face) 6477 6478 (fontified t) 6478 6479 (fontified t face font-lock-variable-name-face) 6479 6480 (fontified t) 6480 6481 (fontified t) 6481 6482 (fontified t) 6482 6483 (fontified t) 6483 6484 (fontified t) 6484 6485 (fontified t) 6485 6486 (fontified t) 6486 6487 (fontified t) 6487 6488 (fontified t) 6488 6489 (fontified t) 6489 6490 (fontified t) 6490 6491 (fontified t) 6491 6492 (fontified t) 6492 6493 (fontified t) 6493 6494 (fontified t) 6494 6495 (fontified t) 6495 6496 (fontified t) 6496 6497 (fontified t) 6497 6498 (fontified t) 6498 6499 (fontified t) 6499 6500 (fontified t) 6500 6501 (fontified t) 6501 6502 (fontified t) 6502 6503 (fontified t) 6503 6504 (fontified t) 6504 6505 (fontified t) 6505 6506 (fontified t) 6506 6507 (fontified t) 6507 6508 (fontified t) 6508 6509 (fontified t) 6509 6510 (fontified t) 6510 6511 (fontified t) 6511 6512 (fontified t) 6512 6513 (fontified t) 6513 6514 (fontified t) 6514 6515 (fontified t) 6515 6516 (fontified t) 6516 6517 (fontified t) 6517 6518 (fontified t) 6518 6519 (fontified t) 6519 6520 (fontified t) 6520 6521 (fontified t) 6521 6522 (fontified t) 6522 6523 (fontified t) 6523 6524 (fontified t) 6524 6525 (fontified t) 6525 6526 (fontified t) 6526 6527 (fontified t) 6527 6528 (fontified t) 6528 6529 (fontified t) 6529 6530 (fontified t) 6530 6531 (fontified t) 6531 6532 (fontified t) 6532 6544 (fontified t) 6544 6545 (fontified t) 6545 6546 (fontified t) 6546 6547 (fontified t) 6547 6548 (fontified t) 6548 6549 (fontified t) 6549 6550 (fontified t) 6550 6551 (fontified t) 6551 6552 (fontified t) 6552 6553 (fontified t) 6553 6554 (fontified t) 6554 6555 (fontified t) 6555 6556 (fontified t) 6556 6557 (fontified t) 6557 6558 (fontified t) 6558 6559 (fontified t) 6559 6560 (fontified t) 6560 6561 (fontified t) 6561 6569 (fontified t) 6569 6576 (fontified t) 6576 6577 (fontified t) 6577 6578 (fontified t) 6578 6579 (fontified t) 6579 6580 (fontified t) 6580 6581 (fontified t) 6581 6582 (fontified t) 6582 6583 (fontified t) 6583 6584 (fontified t) 6584 6585 (fontified t) 6585 6589 (fontified t) 6589 6590 (fontified t) 6590 6591 (fontified t) 6591 6592 (c-is-sws t fontified t) 6592 6593 (fontified t) 6593 6594 (fontified t) 6594 6595 (fontified t face font-lock-type-face) 6595 6596 (fontified t face font-lock-type-face) 6596 6597 (fontified t face font-lock-type-face) 6597 6598 (fontified t c-type c-decl-id-start face font-lock-type-face) 6598 6599 (fontified t) 6599 6600 (fontified t face font-lock-function-name-face) 6600 6601 (fontified t face font-lock-function-name-face) 6601 6602 (fontified t face font-lock-function-name-face) 6602 6603 (fontified t face font-lock-function-name-face) 6603 6604 (fontified t face font-lock-function-name-face) 6604 6605 (fontified t face font-lock-function-name-face) 6605 6606 (fontified t face font-lock-function-name-face) 6606 6607 (fontified t face font-lock-function-name-face) 6607 6608 (fontified t face font-lock-function-name-face) 6608 6609 (fontified t face font-lock-function-name-face) 6609 6610 (fontified t face font-lock-function-name-face) 6610 6611 (fontified t face font-lock-function-name-face) 6611 6612 (fontified t face font-lock-function-name-face) 6612 6613 (fontified t face font-lock-function-name-face) 6613 6614 (fontified t face font-lock-function-name-face) 6614 6615 (fontified t face font-lock-function-name-face) 6615 6616 (fontified t) 6616 6617 (fontified t) 6617 6618 (fontified t) 6618 6619 (fontified t) 6619 6620 (fontified t) 6620 6624 (fontified t c-in-sws t c-is-sws t) 6624 6625 (fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 6625 6626 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 6626 6627 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 6627 6628 (fontified t c-in-sws t face font-lock-comment-face) 6628 6629 (fontified t c-in-sws t face font-lock-comment-face) 6629 6630 (fontified t c-in-sws t face font-lock-comment-face) 6630 6631 (fontified t c-in-sws t face font-lock-comment-face) 6631 6632 (fontified t c-in-sws t face font-lock-comment-face) 6632 6633 (fontified t c-in-sws t face font-lock-comment-face) 6633 6634 (fontified t c-in-sws t face font-lock-comment-face) 6634 6635 (fontified t c-in-sws t face font-lock-comment-face) 6635 6636 (fontified t c-in-sws t face font-lock-comment-face) 6636 6637 (fontified t c-in-sws t face font-lock-comment-face) 6637 6638 (fontified t face font-lock-comment-face c-in-sws t) 6638 6639 (fontified t face font-lock-comment-face c-in-sws t) 6639 6640 (c-is-sws t fontified t) 6640 6643 (c-is-sws t fontified t) 6643 6644 (c-is-sws t fontified t face font-lock-keyword-face) 6644 6645 (fontified t face font-lock-keyword-face) 6645 6646 (fontified t face font-lock-keyword-face) 6646 6647 (fontified t) 6647 6648 (fontified t) 6648 6649 (fontified t face font-lock-type-face) 6649 6650 (fontified t face font-lock-type-face) 6650 6651 (fontified t face font-lock-type-face) 6651 6652 (fontified t face font-lock-type-face) 6652 6653 (fontified t face font-lock-type-face) 6653 6654 (fontified t face font-lock-type-face) 6654 6655 (fontified t c-type c-decl-id-start face font-lock-type-face) 6655 6656 (fontified t) 6656 6657 (fontified t face font-lock-variable-name-face) 6657 6658 (fontified t) 6658 6659 (fontified t) 6659 6660 (fontified t) 6660 6661 (fontified t) 6661 6662 (fontified t) 6662 6663 (fontified t) 6663 6664 (fontified t) 6664 6665 (fontified t) 6665 6666 (fontified t) 6666 6667 (fontified t) 6667 6668 (fontified t) 6668 6669 (fontified t) 6669 6670 (fontified t) 6670 6671 (fontified t) 6671 6672 (fontified t) 6672 6673 (fontified t) 6673 6674 (fontified t) 6674 6675 (fontified t) 6675 6683 (fontified t) 6683 6684 (fontified t face font-lock-keyword-face) 6684 6685 (fontified t face font-lock-keyword-face) 6685 6686 (fontified t) 6686 6687 (fontified t) 6687 6688 (fontified t) 6688 6689 (fontified t) 6689 6690 (fontified t) 6690 6691 (fontified t) 6691 6692 (fontified t) 6692 6693 (fontified t) 6693 6694 (fontified t) 6694 6695 (fontified t) 6695 6696 (fontified t) 6696 6697 (fontified t) 6697 6698 (fontified t) 6698 6699 (fontified t) 6699 6700 (fontified t) 6700 6701 (fontified t) 6701 6702 (fontified t) 6702 6703 (fontified t) 6703 6704 (fontified t) 6704 6705 (fontified t) 6705 6706 (fontified t) 6706 6713 (fontified t) 6713 6714 (fontified t) 6714 6715 (fontified t) 6715 6716 (fontified t) 6716 6717 (fontified t) 6717 6718 (fontified t) 6718 6719 (fontified t) 6719 6720 (fontified t) 6720 6721 (fontified t) 6721 6722 (fontified t) 6722 6734 (fontified t) 6734 6738 (fontified t) 6738 6739 (fontified t) 6739 6740 (fontified t) 6740 6741 (fontified t) 6741 6742 (fontified t) 6742 6743 (fontified t) 6743 6744 (fontified t) 6744 6745 (fontified t) 6745 6746 (fontified t) 6746 6747 (fontified t) 6747 6748 (fontified t) 6748 6749 (fontified t) 6749 6750 (fontified t) 6750 6751 (fontified t) 6751 6752 (fontified t) 6752 6753 (fontified t) 6753 6754 (fontified t) 6754 6755 (fontified t) 6755 6756 (fontified t) 6756 6757 (fontified t) 6757 6758 (fontified t) 6758 6759 (fontified t) 6759 6760 (fontified t) 6760 6761 (fontified t) 6761 6768 (fontified t) 6768 6769 (fontified t) 6769 6770 (fontified t) 6770 6771 (fontified t) 6771 6775 (c-in-sws t c-is-sws t fontified t) 6775 6776 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 6776 6777 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6777 6778 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6778 6779 (c-in-sws t fontified t face font-lock-comment-face) 6779 6780 (c-in-sws t fontified t face font-lock-comment-face) 6780 6781 (c-in-sws t fontified t face font-lock-comment-face) 6781 6782 (c-in-sws t fontified t face font-lock-comment-face) 6782 6783 (c-is-sws t fontified t) 6783 6786 (c-is-sws t fontified t) 6786 6787 (c-is-sws t fontified t) 6787 6788 (fontified t) 6788 6789 (fontified t) 6789 6790 (fontified t) 6790 6791 (fontified t) 6791 6792 (fontified t) 6792 6793 (fontified t) 6793 6794 (fontified t face font-lock-string-face) 6794 6795 (fontified t face font-lock-string-face) 6795 6796 (fontified t face font-lock-string-face) 6796 6797 (fontified t face font-lock-string-face) 6797 6798 (fontified t face font-lock-string-face) 6798 6799 (fontified t face font-lock-string-face) 6799 6800 (fontified t face font-lock-string-face) 6800 6801 (fontified t face font-lock-string-face) 6801 6802 (fontified t face font-lock-string-face) 6802 6803 (fontified t face font-lock-string-face) 6803 6804 (fontified t face font-lock-string-face) 6804 6805 (fontified t face font-lock-string-face) 6805 6806 (fontified t face font-lock-string-face) 6806 6807 (fontified t face font-lock-string-face) 6807 6808 (fontified t face font-lock-string-face) 6808 6809 (fontified t) 6809 6810 (fontified t) 6810 6811 (fontified t) 6811 6812 (fontified t) 6812 6813 (fontified t) 6813 6814 (fontified t) 6814 6815 (fontified t) 6815 6816 (fontified t) 6816 6817 (fontified t) 6817 6818 (fontified t) 6818 6819 (fontified t) 6819 6820 (fontified t) 6820 6821 (fontified t) 6821 6825 (fontified t) 6825 6826 (c-is-sws t fontified t face font-lock-keyword-face) 6826 6827 (fontified t face font-lock-keyword-face) 6827 6828 (fontified t face font-lock-keyword-face) 6828 6829 (fontified t) 6829 6830 (fontified t) 6830 6831 (fontified t face font-lock-type-face) 6831 6832 (fontified t face font-lock-type-face) 6832 6833 (fontified t c-type c-decl-id-start face font-lock-type-face) 6833 6834 (fontified t) 6834 6835 (fontified t face font-lock-variable-name-face) 6835 6836 (fontified t) 6836 6837 (fontified t) 6837 6838 (fontified t) 6838 6839 (fontified t) 6839 6840 (fontified t) 6840 6841 (fontified t) 6841 6842 (fontified t) 6842 6843 (fontified t) 6843 6844 (fontified t) 6844 6845 (fontified t) 6845 6846 (fontified t) 6846 6847 (fontified t) 6847 6848 (fontified t) 6848 6849 (fontified t) 6849 6850 (fontified t) 6850 6851 (fontified t) 6851 6852 (fontified t) 6852 6853 (fontified t) 6853 6861 (fontified t) 6861 6862 (fontified t) 6862 6863 (fontified t) 6863 6864 (fontified t) 6864 6865 (fontified t) 6865 6866 (fontified t) 6866 6867 (fontified t) 6867 6868 (fontified t) 6868 6869 (fontified t face font-lock-string-face) 6869 6870 (fontified t face font-lock-string-face) 6870 6871 (fontified t face font-lock-string-face) 6871 6872 (fontified t face font-lock-string-face) 6872 6873 (fontified t face font-lock-string-face) 6873 6874 (fontified t face font-lock-string-face) 6874 6875 (fontified t face font-lock-string-face) 6875 6876 (fontified t face font-lock-string-face) 6876 6877 (fontified t face font-lock-string-face) 6877 6878 (fontified t face font-lock-string-face) 6878 6879 (fontified t face font-lock-string-face) 6879 6880 (fontified t face font-lock-string-face) 6880 6881 (fontified t face font-lock-string-face) 6881 6882 (fontified t face font-lock-string-face) 6882 6883 (fontified t face font-lock-string-face) 6883 6884 (fontified t face font-lock-string-face) 6884 6885 (fontified t face font-lock-string-face) 6885 6886 (fontified t face font-lock-string-face) 6886 6887 (fontified t face font-lock-string-face) 6887 6888 (fontified t face font-lock-string-face) 6888 6889 (fontified t face font-lock-string-face) 6889 6890 (fontified t) 6890 6891 (fontified t) 6891 6892 (fontified t) 6892 6893 (fontified t) 6893 6894 (fontified t) 6894 6902 (fontified t) 6902 6903 (fontified t) 6903 6904 (fontified t) 6904 6905 (fontified t) 6905 6906 (fontified t) 6906 6907 (fontified t) 6907 6908 (fontified t) 6908 6912 (fontified t) 6912 6913 (fontified t) 6913 6914 (fontified t) 6914 6915 (fontified t) 6915 6916 (fontified t) 6916 6917 (fontified t) 6917 6918 (fontified t) 6918 6919 (fontified t) 6919 6920 (fontified t face font-lock-string-face) 6920 6921 (fontified t face font-lock-string-face) 6921 6922 (fontified t face font-lock-string-face) 6922 6923 (fontified t face font-lock-string-face) 6923 6924 (fontified t) 6924 6925 (fontified t) 6925 6926 (fontified t) 6926 6927 (fontified t) 6927 6928 (fontified t) 6928 6929 (fontified t) 6929 6932 (fontified t face font-lock-type-face) 6932 6933 (fontified t c-type c-decl-id-start face font-lock-type-face) 6933 6934 (fontified t) 6934 6963 (fontified t face font-lock-function-name-face) 6963 6964 (fontified t c-type c-decl-arg-start) 6964 6981 (fontified t face font-lock-type-face) 6981 6983 (fontified t) 6983 6987 (fontified t face font-lock-variable-name-face) 6987 6988 (fontified t) 6988 6990 (fontified t) 6990 6991 (fontified t) 6991 6992 (fontified t) 6992 6993 (fontified t) 6993 6994 (fontified t) 6994 6995 (fontified t) 6995 6996 (fontified t face font-lock-keyword-face) 6996 6997 (fontified t face font-lock-keyword-face) 6997 6998 (fontified t) 6998 6999 (fontified t) 6999 7000 (fontified t) 7000 7001 (fontified t) 7001 7002 (fontified t) 7002 7003 (fontified t) 7003 7004 (fontified t) 7004 7005 (fontified t) 7005 7006 (fontified t) 7006 7007 (fontified t) 7007 7008 (fontified t) 7008 7009 (fontified t) 7009 7010 (fontified t) 7010 7011 (fontified t) 7011 7012 (fontified t) 7012 7013 (fontified t) 7013 7014 (fontified t) 7014 7015 (fontified t) 7015 7016 (fontified t) 7016 7017 (fontified t) 7017 7018 (fontified t) 7018 7019 (fontified t) 7019 7020 (fontified t) 7020 7021 (fontified t) 7021 7022 (fontified t) 7022 7023 (fontified t) 7023 7024 (fontified t) 7024 7025 (fontified t) 7025 7026 (fontified t) 7026 7034 (fontified t) 7034 7040 (fontified t) 7040 7041 (fontified t) 7041 7042 (fontified t) 7042 7043 (fontified t) 7043 7044 (fontified t) 7044 7045 (fontified t) 7045 7046 (fontified t) 7046 7047 (fontified t) 7047 7048 (fontified t) 7048 7049 (fontified t) 7049 7050 (fontified t) 7050 7051 (fontified t) 7051 7052 (fontified t) 7052 7053 (fontified t) 7053 7054 (fontified t) 7054 7055 (fontified t) 7055 7056 (fontified t) 7056 7057 (fontified t) 7057 7058 (fontified t) 7058 7059 (fontified t) 7059 7060 (fontified t) 7060 7061 (fontified t) 7061 7062 (fontified t) 7062 7063 (fontified t) 7063 7064 (fontified t) 7064 7065 (fontified t) 7065 7066 (fontified t) 7066 7067 (fontified t) 7067 7068 (fontified t) 7068 7069 (fontified t) 7069 7070 (fontified t) 7070 7071 (fontified t) 7071 7072 (fontified t) 7072 7073 (fontified t) 7073 7074 (fontified t) 7074 7075 (fontified t) 7075 7076 (fontified t) 7076 7077 (fontified t) 7077 7078 (fontified t) 7078 7079 (fontified t) 7079 7080 (fontified t) 7080 7081 (fontified t) 7081 7082 (fontified t) 7082 7083 (fontified t) 7083 7084 (fontified t) 7084 7085 (fontified t) 7085 7086 (fontified t) 7086 7087 (fontified t) 7087 7088 (fontified t) 7088 7089 (fontified t) 7089 7090 (fontified t) 7090 7091 (fontified t) 7091 7098 (fontified t) 7098 7099 (rear-nonsticky t fontified t) 7099 7105 (fontified t) 7105 7106 (fontified t) 7106 7107 (fontified t) 7107 7108 (fontified t) 7108 7109 (fontified t) 7109 7110 (fontified t) 7110 7111 (fontified t) 7111 7112 (fontified t) 7112 7113 (fontified t) 7113 7114 (fontified t) 7114 7115 (fontified t) 7115 7116 (fontified t) 7116 7117 (fontified t) 7117 7118 (fontified t) 7118 7119 (fontified t) 7119 7120 (fontified t) 7120 7121 (fontified t) 7121 7122 (fontified t) 7122 7123 (fontified t) 7123 7124 (fontified t) 7124 7125 (fontified t) 7125 7126 (fontified t) 7126 7127 (fontified t) 7127 7128 (fontified t) 7128 7129 (fontified t) 7129 7130 (fontified t) 7130 7131 (fontified t) 7131 7132 (fontified t) 7132 7133 (fontified t) 7133 7134 (fontified t) 7134 7135 (fontified t) 7135 7136 (fontified t) 7136 7137 (fontified t) 7137 7138 (fontified t) 7138 7139 (fontified t) 7139 7140 (fontified t) 7140 7141 (fontified t) 7141 7142 (fontified t) 7142 7143 (fontified t) 7143 7144 (fontified t) 7144 7145 (fontified t) 7145 7146 (fontified t) 7146 7147 (fontified t) 7147 7148 (fontified t) 7148 7149 (fontified t) 7149 7150 (fontified t) 7150 7151 (fontified t) 7151 7152 (fontified t) 7152 7153 (fontified t) 7153 7154 (fontified t) 7154 7155 (fontified t) 7155 7156 (fontified t) 7156 7163 (fontified t) 7163 7164 (rear-nonsticky t fontified t) 7164 7170 (fontified t) 7170 7171 (fontified t) 7171 7172 (fontified t) 7172 7173 (fontified t) 7173 7174 (fontified t) 7174 7175 (fontified t) 7175 7176 (fontified t) 7176 7177 (fontified t) 7177 7178 (fontified t) 7178 7179 (fontified t) 7179 7180 (fontified t) 7180 7181 (fontified t) 7181 7182 (fontified t) 7182 7183 (fontified t) 7183 7184 (fontified t) 7184 7185 (fontified t) 7185 7186 (fontified t) 7186 7187 (fontified t) 7187 7188 (fontified t) 7188 7189 (fontified t) 7189 7190 (fontified t) 7190 7191 (fontified t) 7191 7192 (fontified t) 7192 7193 (fontified t) 7193 7194 (fontified t) 7194 7195 (fontified t) 7195 7196 (fontified t) 7196 7197 (fontified t) 7197 7198 (fontified t) 7198 7199 (fontified t) 7199 7200 (fontified t) 7200 7201 (fontified t) 7201 7202 (fontified t) 7202 7203 (fontified t) 7203 7204 (fontified t) 7204 7205 (fontified t) 7205 7206 (fontified t) 7206 7207 (fontified t) 7207 7208 (fontified t) 7208 7209 (fontified t) 7209 7210 (fontified t) 7210 7211 (fontified t) 7211 7212 (fontified t) 7212 7213 (fontified t) 7213 7214 (fontified t) 7214 7215 (fontified t) 7215 7216 (fontified t) 7216 7217 (fontified t) 7217 7218 (fontified t) 7218 7219 (fontified t) 7219 7220 (fontified t) 7220 7221 (fontified t) 7221 7228 (fontified t) 7228 7229 (rear-nonsticky t fontified t) 7229 7235 (fontified t) 7235 7236 (fontified t) 7236 7237 (fontified t) 7237 7238 (fontified t) 7238 7239 (fontified t) 7239 7240 (fontified t) 7240 7241 (fontified t) 7241 7242 (fontified t) 7242 7243 (fontified t) 7243 7244 (fontified t) 7244 7245 (fontified t) 7245 7246 (fontified t) 7246 7247 (fontified t) 7247 7248 (fontified t) 7248 7249 (fontified t) 7249 7250 (fontified t) 7250 7251 (fontified t) 7251 7252 (fontified t) 7252 7253 (fontified t) 7253 7254 (fontified t) 7254 7255 (fontified t) 7255 7256 (fontified t) 7256 7257 (fontified t) 7257 7258 (fontified t) 7258 7259 (fontified t) 7259 7260 (fontified t) 7260 7261 (fontified t) 7261 7262 (fontified t) 7262 7263 (fontified t) 7263 7264 (fontified t) 7264 7265 (fontified t) 7265 7266 (fontified t) 7266 7267 (fontified t) 7267 7268 (fontified t) 7268 7269 (fontified t) 7269 7270 (fontified t) 7270 7271 (fontified t) 7271 7272 (fontified t) 7272 7273 (fontified t) 7273 7274 (fontified t) 7274 7275 (fontified t) 7275 7276 (fontified t) 7276 7277 (fontified t) 7277 7278 (fontified t) 7278 7279 (fontified t) 7279 7280 (fontified t) 7280 7281 (fontified t) 7281 7282 (fontified t) 7282 7283 (fontified t) 7283 7284 (fontified t) 7284 7285 (fontified t) 7285 7286 (fontified t) 7286 7287 (fontified t) 7287 7295 (fontified t) 7295 7296 (fontified t face font-lock-keyword-face) 7296 7297 (fontified t face font-lock-keyword-face) 7297 7298 (fontified t face font-lock-keyword-face) 7298 7299 (fontified t) 7299 7300 (fontified t) 7300 7301 (fontified t face font-lock-type-face) 7301 7302 (fontified t face font-lock-type-face) 7302 7303 (fontified t face font-lock-type-face) 7303 7304 (fontified t face font-lock-type-face) 7304 7305 (fontified t face font-lock-type-face) 7305 7306 (fontified t face font-lock-type-face) 7306 7307 (fontified t c-type c-decl-id-start face font-lock-type-face) 7307 7308 (fontified t) 7308 7309 (fontified t face font-lock-variable-name-face) 7309 7310 (fontified t) 7310 7311 (fontified t) 7311 7312 (fontified t) 7312 7313 (fontified t) 7313 7314 (fontified t) 7314 7315 (fontified t) 7315 7316 (fontified t) 7316 7317 (fontified t) 7317 7318 (fontified t) 7318 7319 (fontified t) 7319 7320 (fontified t) 7320 7321 (fontified t) 7321 7322 (fontified t) 7322 7323 (fontified t) 7323 7324 (fontified t) 7324 7325 (fontified t) 7325 7326 (fontified t) 7326 7327 (fontified t) 7327 7328 (fontified t) 7328 7335 (fontified t) 7335 7336 (fontified t) 7336 7337 (fontified t) 7337 7338 (fontified t) 7338 7339 (fontified t) 7339 7340 (fontified t) 7340 7341 (fontified t) 7341 7342 (fontified t) 7342 7343 (fontified t) 7343 7344 (fontified t) 7344 7345 (fontified t) 7345 7352 (fontified t) 7352 7353 (fontified t) 7353 7354 (fontified t) 7354 7355 (fontified t) 7355 7356 (fontified t) 7356 7357 (fontified t) 7357 7358 (fontified t) 7358 7359 (fontified t) 7359 7360 (fontified t) 7360 7361 (fontified t) 7361 7362 (fontified t) 7362 7363 (fontified t) 7363 7364 (fontified t) 7364 7365 (fontified t) 7365 7366 (fontified t) 7366 7367 (fontified t) 7367 7368 (fontified t) 7368 7369 (fontified t) 7369 7370 (fontified t) 7370 7371 (fontified t) 7371 7379 (fontified t) 7379 7380 (fontified t) 7380 7381 (fontified t) 7381 7382 (fontified t) 7382 7383 (fontified t) 7383 7384 (fontified t) 7384 7385 (fontified t) 7385 7386 (fontified t) 7386 7387 (fontified t) 7387 7388 (fontified t) 7388 7389 (fontified t) 7389 7390 (fontified t) 7390 7391 (fontified t) 7391 7392 (fontified t) 7392 7393 (fontified t) 7393 7394 (fontified t) 7394 7395 (fontified t) 7395 7402 (fontified t) 7402 7403 (fontified t) 7403 7404 (fontified t) 7404 7405 (fontified t face font-lock-keyword-face) 7405 7406 (fontified t face font-lock-keyword-face) 7406 7407 (fontified t face font-lock-keyword-face) 7407 7408 (fontified t face font-lock-keyword-face) 7408 7409 (fontified t face font-lock-keyword-face) 7409 7410 (fontified t face font-lock-keyword-face) 7410 7411 (fontified t) 7411 7418 (fontified t) 7418 7419 (fontified t) 7419 7420 (fontified t) 7420 7421 (fontified t) 7421 7422 (fontified t) 7422 7423 (fontified t) 7423 7431 (fontified t) 7431 7432 (fontified t) 7432 7433 (fontified t) 7433 7434 (fontified t) 7434 7435 (fontified t) 7435 7436 (fontified t) 7436 7437 (fontified t) 7437 7438 (fontified t) 7438 7439 (fontified t) 7439 7440 (fontified t) 7440 7441 (fontified t) 7441 7442 (fontified t) 7442 7443 (fontified t) 7443 7444 (fontified t) 7444 7445 (fontified t) 7445 7446 (fontified t) 7446 7447 (fontified t) 7447 7448 (fontified t) 7448 7449 (fontified t) 7449 7450 (fontified t) 7450 7458 (fontified t) 7458 7459 (fontified t) 7459 7460 (fontified t) 7460 7461 (fontified t) 7461 7462 (fontified t) 7462 7463 (fontified t) 7463 7464 (fontified t) 7464 7465 (fontified t) 7465 7466 (fontified t) 7466 7467 (fontified t) 7467 7468 (fontified t) 7468 7469 (fontified t) 7469 7470 (fontified t) 7470 7472 (fontified t) 7472 7473 (fontified t) 7473 7474 (fontified t) 7474 7475 (fontified t) 7475 7476 (fontified t) 7476 7477 (fontified t) 7477 7478 (fontified t) 7478 7479 (fontified t) 7479 7480 (fontified t) 7480 7481 (fontified t) 7481 7482 (fontified t) 7482 7483 (fontified t) 7483 7484 (fontified t) 7484 7485 (c-in-sws t c-is-sws t fontified t) 7485 7486 (c-in-sws t c-is-sws t fontified t) 7486 7487 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 7487 7488 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7488 7528 (c-in-sws t fontified t face font-lock-comment-face) 7528 7529 (c-in-sws t fontified t face font-lock-comment-face) 7529 7530 (c-in-sws t fontified t) 7530 7531 (c-in-sws t fontified t) 7531 7532 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7532 7533 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7533 7534 (c-in-sws t fontified t face font-lock-comment-face) 7534 7535 (c-in-sws t fontified t face font-lock-comment-face) 7535 7536 (c-in-sws t fontified t) 7536 7537 (c-in-sws t fontified t) 7537 7538 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7538 7543 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7543 7556 (c-in-sws t fontified t face font-lock-comment-face) 7556 7557 (c-in-sws t fontified t face font-lock-comment-face) 7557 7558 (c-in-sws t fontified t) 7558 7559 (c-in-sws t fontified t) 7559 7560 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7560 7565 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7565 7580 (c-in-sws t fontified t face font-lock-comment-face) 7580 7582 (c-in-sws t fontified t) 7582 7588 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7588 7619 (c-in-sws t fontified t face font-lock-comment-face) 7619 7620 (c-in-sws t fontified t face font-lock-comment-face) 7620 7621 (c-in-sws t fontified t) 7621 7622 (c-in-sws t fontified t) 7622 7623 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7623 7628 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7628 7660 (c-in-sws t fontified t face font-lock-comment-face) 7660 7662 (c-in-sws t fontified t) 7662 7668 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7668 7700 (c-in-sws t fontified t face font-lock-comment-face) 7700 7702 (c-in-sws t fontified t) 7702 7708 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7708 7740 (c-in-sws t fontified t face font-lock-comment-face) 7740 7742 (c-in-sws t fontified t) 7742 7748 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7748 7776 (c-in-sws t fontified t face font-lock-comment-face) 7776 7778 (c-in-sws t fontified t) 7778 7784 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7784 7786 (c-in-sws t fontified t face font-lock-comment-face) 7786 7788 (c-in-sws t fontified t) 7788 7798 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7798 7824 (c-in-sws t fontified t face font-lock-comment-face) 7824 7825 (c-in-sws t fontified t face font-lock-comment-face) 7825 7826 (c-in-sws t fontified t) 7826 7827 (c-in-sws t fontified t) 7827 7828 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7828 7841 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7841 7848 (c-in-sws t fontified t face font-lock-comment-face) 7848 7849 (c-in-sws t fontified t face font-lock-comment-face) 7849 7850 (c-in-sws t fontified t) 7850 7851 (c-in-sws t fontified t) 7851 7852 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7852 7857 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7857 7858 (c-in-sws t fontified t face font-lock-comment-face) 7858 7859 (c-in-sws t fontified t face font-lock-comment-face) 7859 7860 (c-in-sws t fontified t) 7860 7861 (c-in-sws t fontified t) 7861 7862 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7862 7867 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7867 7895 (c-in-sws t fontified t face font-lock-comment-face) 7895 7897 (c-in-sws t fontified t) 7897 7903 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7903 7983 (c-in-sws t fontified t face font-lock-comment-face) 7983 7984 (c-in-sws t fontified t face font-lock-comment-face) 7984 7985 (c-in-sws t fontified t) 7985 7986 (c-in-sws t fontified t) 7986 7987 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7987 7992 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7992 8067 (c-in-sws t fontified t face font-lock-comment-face) 8067 8073 (c-in-sws t fontified t face font-lock-comment-face) 8073 8075 (c-in-sws t fontified t) 8075 8081 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 8081 8139 (c-in-sws t fontified t face font-lock-comment-face) 8139 8162 (c-in-sws t face font-lock-comment-face fontified t) 8162 8164 (c-in-sws t) 8164 8170 (c-in-sws t face font-lock-comment-delimiter-face) 8170 8198 (c-in-sws t face font-lock-comment-face) 8198 8200 (c-in-sws t) 8200 8206 (c-in-sws t face font-lock-comment-delimiter-face) 8206 8208 (c-in-sws t face font-lock-comment-face) 8208 8210 (c-in-sws t) 8210 8220 (c-in-sws t face font-lock-comment-delimiter-face) 8220 8263 (c-in-sws t face font-lock-comment-face) 8263 8271 (c-in-sws t face font-lock-comment-face) 8271 8272 (c-in-sws t face font-lock-comment-face) 8272 8273 (c-in-sws t) 8273 8274 (c-in-sws t) 8274 8275 (c-in-sws t face font-lock-comment-delimiter-face) 8275 8282 (c-in-sws t face font-lock-comment-delimiter-face) 8282 8284 (c-in-sws t face font-lock-comment-delimiter-face) 8284 8292 (c-in-sws t face font-lock-comment-face) 8292 8298 (c-in-sws t face font-lock-comment-face) 8298 8305 (c-in-sws t face font-lock-comment-face) 8305 8306 (c-in-sws t face font-lock-comment-face) 8306 8307 (c-in-sws t) 8307 8308 (c-in-sws t) 8308 8309 (c-in-sws t face font-lock-comment-delimiter-face) 8309 8311 (c-in-sws t face font-lock-comment-delimiter-face) 8311 8314 (c-in-sws t face font-lock-comment-delimiter-face) 8314 8315 (c-in-sws t face font-lock-comment-face) 8315 8316 (c-in-sws t face font-lock-comment-face) 8316 8317 (c-in-sws t) 8317 8318 (c-in-sws t) 8318 8319 (c-in-sws t face font-lock-comment-delimiter-face) 8319 8320 (c-in-sws t face font-lock-comment-delimiter-face) 8320 8322 (c-in-sws t face font-lock-comment-face) 8322 8324 (c-in-sws t) 8324 8326 (c-in-sws t face font-lock-comment-delimiter-face) 8326 8327 (c-in-sws t face font-lock-comment-face) 8327 8344 (c-in-sws t face font-lock-comment-face) 8344 8371 (c-in-sws t face font-lock-comment-face) 8371 8372 (c-in-sws t face font-lock-comment-face) 8372 8373 (c-in-sws t face font-lock-comment-face) 8373 8374 (c-in-sws t) 8374 8375 (c-in-sws t) 8375 8376 (c-in-sws t face font-lock-comment-delimiter-face) 8376 8377 (c-in-sws t face font-lock-comment-delimiter-face) 8377 8378 (c-in-sws t face font-lock-comment-face) 8378 8379 (c-in-sws t face font-lock-comment-face) 8379 8380 (c-in-sws t) 8380 8381 (c-in-sws t) 8381 8382 (c-in-sws t face font-lock-comment-delimiter-face) 8382 8386 (c-in-sws t face font-lock-comment-delimiter-face) 8386 8387 (c-in-sws t face font-lock-comment-delimiter-face) 8387 8391 (c-in-sws t face font-lock-comment-face) 8391 8393 (c-in-sws t face font-lock-comment-face) 8393 8397 (c-in-sws t face font-lock-comment-face) 8397 8403 (c-in-sws t face font-lock-comment-face) 8403 8407 (c-in-sws t face font-lock-comment-face) 8407 8408 (c-in-sws t face font-lock-comment-face) 8408 8414 (c-in-sws t face font-lock-comment-face) 8414 8415 (c-in-sws t face font-lock-comment-face) 8415 8416 (c-in-sws t) 8416 8417 (c-in-sws t) 8417 8418 (c-in-sws t face font-lock-comment-delimiter-face) 8418 8422 (c-in-sws t face font-lock-comment-delimiter-face) 8422 8423 (c-in-sws t face font-lock-comment-delimiter-face) 8423 8424 (c-in-sws t face font-lock-comment-face) 8424 8425 (c-in-sws t face font-lock-comment-face) 8425 8426 (c-in-sws t c-is-sws t) 8426 8427 (c-is-sws t) 8427 8428 (c-in-sws t face font-lock-comment-delimiter-face) 8428 8429 (c-in-sws t face font-lock-comment-delimiter-face) 8429 8430 (c-in-sws t face font-lock-comment-delimiter-face) 8430 8432 (c-in-sws t face font-lock-comment-delimiter-face) 8432 8436 (c-in-sws t face font-lock-comment-delimiter-face) 8436 8437 (c-in-sws t face font-lock-comment-delimiter-face) 8437 8438 (c-in-sws t face font-lock-comment-face) 8438 8453 (c-in-sws t face font-lock-comment-face) 8453 8454 (c-in-sws t face font-lock-comment-face) 8454 8458 (c-in-sws t face font-lock-comment-face) 8458 8459 (c-in-sws t face font-lock-comment-face) 8459 8460 (c-in-sws t) 8460 8461 (c-in-sws t) 8461 8462 (face font-lock-comment-delimiter-face c-in-sws t) 8462 8467 (c-in-sws t face font-lock-comment-delimiter-face) 8467 8469 (c-in-sws t face font-lock-comment-face) 8469 8471 (c-in-sws t) 8471 8473 (c-in-sws t face font-lock-comment-delimiter-face)) . 2215) (undo-tree-id540 . -6753) (undo-tree-id541 . 1835) (undo-tree-id542 . -7484) (undo-tree-id543 . -5875) (undo-tree-id544 . -7484) (undo-tree-id545 . -7478) (undo-tree-id546 . -10) (undo-tree-id547 . -6546) (undo-tree-id548 . 1926) (undo-tree-id549 . -6546) (undo-tree-id550 . -6546) (undo-tree-id551 . -7033) (undo-tree-id552 . -6) (undo-tree-id553 . -50) (undo-tree-id554 . -69) (undo-tree-id555 . -7286) (undo-tree-id556 . -746) (undo-tree-id557 . -4303) (undo-tree-id558 . -746) (undo-tree-id559 . -64) (undo-tree-id560 . -6706) (undo-tree-id561 . -6722) (undo-tree-id562 . -85) (undo-tree-id563 . -4258) (undo-tree-id564 . -2812) (undo-tree-id565 . -81) (undo-tree-id566 . -89) (undo-tree-id567 . -6127) (undo-tree-id568 . -6838) (undo-tree-id569 . -6838) 9053 (t 25314 20303 84896 980000)) nil (25314 22415 358038 11000) 0 nil])
([nil nil ((2215 . 10688) (#("is_timing = 0;
inline void time_begin()
{
    if (is_timing == 0)
    {
        __HAL_TIM_SetCounter(&htim1, 0);
        is_timing = 1;
    }
}
/* USER CODE END EV */

/******************************************************************************/
/*           Cortex-M4 Processor Interruption and Exception Handlers          */
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
    while (1)
    {
    }
  /* USER CODE END NonMaskableInt_IRQn 1 */
}

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_HardFault_IRQn 0 */
    /* USER CODE END W1_HardFault_IRQn 0 */
  }
}

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
    /* USER CODE END W1_MemoryManagement_IRQn 0 */
  }
}

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_BusFault_IRQn 0 */
    /* USER CODE END W1_BusFault_IRQn 0 */
  }
}

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
    /* USER CODE END W1_UsageFault_IRQn 0 */
  }
}

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
  /* USER CODE BEGIN SVCall_IRQn 0 */

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
  /* USER CODE BEGIN DebugMonitor_IRQn 0 */

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
  /* USER CODE BEGIN PendSV_IRQn 0 */

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}

/******************************************************************************/
/* STM32F4xx Peripheral Interrupt Handlers                                    */
/* Add here the Interrupt Handlers for the used peripherals.                  */
/* For the available peripheral interrupt handler names,                      */
/* please refer to the startup file (startup_stm32f4xx.s).                    */
/******************************************************************************/

/**
  * @brief This function handles EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI0_IRQn 0 */
    printf(\"0\");
    mp_timestamp[0] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI0_IRQn);
  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}

/**
  * @brief This function handles EXTI line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI1_IRQn 0 */
    printf(\"1\");
    mp_timestamp[1] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI1_IRQn);
  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
  /* USER CODE BEGIN EXTI1_IRQn 1 */
  /* USER CODE END EXTI1_IRQn 1 */
}

/**
  * @brief This function handles EXTI line2 interrupt.
  */
void EXTI2_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI2_IRQn 0 */
    printf(\"2\");
    mp_timestamp[2] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI2_IRQn);
  /* USER CODE END EXTI2_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
  /* USER CODE BEGIN EXTI2_IRQn 1 */
  /* USER CODE END EXTI2_IRQn 1 */
}

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI3_IRQn 0 */
    printf(\"3\");
    mp_timestamp[3] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI3_IRQn);
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
  /* USER CODE BEGIN EXTI3_IRQn 1 */
  /* USER CODE END EXTI3_IRQn 1 */
}

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_rx);
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}

/**
  * @brief This function handles DMA1 stream5 global interrupt.
  */
void DMA1_Stream5_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_rx);
  /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */

  /* USER CODE END DMA1_Stream5_IRQn 1 */
}

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
  HAL_TIM_IRQHandler(&htim10);
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
  /* USER CODE BEGIN USART3_IRQn 0 */
    if (__HAL_UART_GET_FLAG(&huart3, UART_FLAG_IDLE) != RESET)
    {
        USER_UART_IDLECallback(&huart3);
    }
  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}

/* USER CODE BEGIN 1 */
void print_delta_distance(int p1, int p2, int p3, int p4, float d1, float d2)
{
    printf(\"MP:%d,%d    delta distance:%f\\n\", p1, p2, d1);
    printf(\"MP:%d,%d    delta distance:%f\\n\", p3, p4, d2);
}
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
    if (TIM1 == htim->Instance && is_timing)
    {
        printf(\"\\n\");
        is_timing = 0;
        HAL_NVIC_EnableIRQ(EXTI0_IRQn);
        HAL_NVIC_EnableIRQ(EXTI1_IRQn);
        HAL_NVIC_EnableIRQ(EXTI2_IRQn);
        HAL_NVIC_EnableIRQ(EXTI3_IRQn);
        for (int i = 0; i < 4; i++)
        {
            if (mp_timestamp[i] == -1)
                return;
        }
        calculate_delta_distance();
        // print_delta_distance(0, 1, 2, 3, delta_distance[0][0], delta_distance[0][1]);
        // print_delta_distance(0, 2, 1, 3, delta_distance[1][0], delta_distance[1][1]);
        // print_delta_distance(0, 3, 1, 2, delta_distance[2][0], delta_distance[2][1]);
        for (int i = 0; i < 4; i++)
        {
            printf(\"mp:%d,timestamp:%u\\n\", i, mp_timestamp[i]);
            mp_timestamp[i] = -1;
        }
    }
    else if (TIM10 == htim->Instance && is_timing)
    {
        for (int i = 0; i < 4; i++)
        {
            mp_timestamp[i] = -1;
        }
    " 0 9 (fontified t face font-lock-variable-name-face) 9 15 (fontified t) 15 21 (fontified t face font-lock-keyword-face) 21 22 (fontified t) 22 25 (fontified t face font-lock-type-face) 25 26 (fontified t c-type c-decl-id-start face font-lock-type-face) 26 27 (fontified t) 27 37 (fontified t face font-lock-function-name-face) 37 46 (fontified t) 46 48 (fontified t face font-lock-keyword-face) 48 144 (fontified t) 144 145 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 145 147 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 147 163 (fontified t face font-lock-comment-face c-in-sws t) 163 166 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 166 168 (fontified t c-in-sws t) 168 247 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 247 248 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 248 249 (fontified t c-in-sws t) 249 262 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 262 317 (fontified t face font-lock-comment-face c-in-sws t) 317 329 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 329 330 (fontified t c-in-sws t) 330 409 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 409 410 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 410 411 (fontified t c-in-sws t) 411 414 (fontified t face font-lock-doc-face c-in-sws t) 414 419 (fontified t face font-lock-doc-face c-in-sws t) 419 425 (fontified t face (font-lock-doc-markup-face font-lock-doc-face) c-in-sws t) 425 472 (fontified t face font-lock-doc-face c-in-sws t) 472 476 (fontified t face font-lock-doc-face c-in-sws t) 476 477 (fontified t c-in-sws t) 477 478 (fontified t c-is-sws t face font-lock-type-face) 478 480 (fontified t face font-lock-type-face) 480 481 (fontified t c-type c-decl-id-start face font-lock-type-face) 481 482 (fontified t) 482 493 (fontified t face font-lock-function-name-face) 493 494 (fontified t c-type c-decl-arg-start) 494 498 (fontified t face font-lock-type-face) 498 504 (fontified t) 504 507 (fontified t face font-lock-comment-delimiter-face) 507 544 (fontified t face font-lock-comment-face) 544 547 (fontified t face font-lock-comment-delimiter-face) 547 551 (fontified t) 551 554 (fontified t face font-lock-comment-delimiter-face) 554 589 (fontified t face font-lock-comment-face) 589 592 (fontified t face font-lock-comment-delimiter-face) 592 595 (fontified t) 595 598 (fontified t face font-lock-comment-delimiter-face) 598 635 (fontified t face font-lock-comment-face) 635 638 (fontified t face font-lock-comment-delimiter-face) 638 643 (fontified t) 643 648 (fontified t face font-lock-keyword-face) 648 667 (fontified t) 667 670 (fontified t face font-lock-comment-delimiter-face) 670 705 (fontified t face font-lock-comment-face) 705 708 (fontified t face font-lock-comment-delimiter-face) 708 712 (fontified t) 712 713 (fontified t face font-lock-doc-face c-in-sws t c-is-sws t) 713 715 (fontified t face font-lock-doc-face c-in-sws t) 715 720 (fontified t face font-lock-doc-face c-in-sws t) 720 726 (fontified t face (font-lock-doc-markup-face font-lock-doc-face) c-in-sws t) 726 771 (fontified t face font-lock-doc-face c-in-sws t) 771 775 (fontified t face font-lock-doc-face c-in-sws t) 775 776 (fontified t c-in-sws t) 776 777 (fontified t c-is-sws t face font-lock-type-face) 777 779 (fontified t face font-lock-type-face) 779 780 (fontified t c-type c-decl-id-start face font-lock-type-face) 780 781 (fontified t) 781 798 (fontified t face font-lock-function-name-face) 798 799 (fontified t c-type c-decl-arg-start) 799 803 (fontified t face font-lock-type-face) 803 809 (fontified t) 809 812 (fontified t face font-lock-comment-delimiter-face) 812 844 (fontified t face font-lock-comment-face) 844 847 (fontified t face font-lock-comment-delimiter-face) 847 851 (fontified t) 851 854 (fontified t face font-lock-comment-delimiter-face) 854 884 (fontified t face font-lock-comment-face) 884 887 (fontified t face font-lock-comment-delimiter-face) 887 890 (fontified t) 890 895 (fontified t face font-lock-keyword-face) 895 908 (fontified t) 908 911 (fontified t face font-lock-comment-delimiter-face) 911 946 (fontified t face font-lock-comment-face) 946 949 (fontified t face font-lock-comment-delimiter-face) 949 954 (fontified t) 954 957 (fontified t face font-lock-comment-delimiter-face) 957 990 (fontified t face font-lock-comment-face) 990 993 (fontified t face font-lock-comment-delimiter-face) 993 1001 (fontified t) 1001 1002 (fontified t face font-lock-doc-face c-in-sws t c-is-sws t) 1002 1004 (fontified t face font-lock-doc-face c-in-sws t) 1004 1009 (fontified t face font-lock-doc-face c-in-sws t) 1009 1015 (fontified t face (font-lock-doc-markup-face font-lock-doc-face) c-in-sws t) 1015 1063 (fontified t face font-lock-doc-face c-in-sws t) 1063 1067 (fontified t face font-lock-doc-face c-in-sws t) 1067 1068 (fontified t c-in-sws t) 1068 1069 (fontified t c-is-sws t face font-lock-type-face) 1069 1071 (fontified t face font-lock-type-face) 1071 1072 (fontified t c-type c-decl-id-start face font-lock-type-face) 1072 1073 (fontified t) 1073 1090 (fontified t face font-lock-function-name-face) 1090 1091 (fontified t c-type c-decl-arg-start) 1091 1095 (fontified t face font-lock-type-face) 1095 1101 (fontified t) 1101 1104 (fontified t face font-lock-comment-delimiter-face) 1104 1143 (fontified t face font-lock-comment-face) 1143 1146 (fontified t face font-lock-comment-delimiter-face) 1146 1150 (fontified t) 1150 1153 (fontified t face font-lock-comment-delimiter-face) 1153 1190 (fontified t face font-lock-comment-face) 1190 1193 (fontified t face font-lock-comment-delimiter-face) 1193 1196 (fontified t) 1196 1201 (fontified t face font-lock-keyword-face) 1201 1214 (fontified t) 1214 1217 (fontified t face font-lock-comment-delimiter-face) 1217 1259 (fontified t face font-lock-comment-face) 1259 1262 (fontified t face font-lock-comment-delimiter-face) 1262 1267 (fontified t) 1267 1270 (fontified t face font-lock-comment-delimiter-face) 1270 1310 (fontified t face font-lock-comment-face) 1310 1313 (fontified t face font-lock-comment-delimiter-face) 1313 1321 (fontified t) 1321 1322 (fontified t face font-lock-doc-face c-in-sws t c-is-sws t) 1322 1324 (fontified t face font-lock-doc-face c-in-sws t) 1324 1329 (fontified t face font-lock-doc-face c-in-sws t) 1329 1335 (fontified t face (font-lock-doc-markup-face font-lock-doc-face) c-in-sws t) 1335 1396 (fontified t face font-lock-doc-face c-in-sws t) 1396 1400 (fontified t face font-lock-doc-face c-in-sws t) 1400 1401 (fontified t c-in-sws t) 1401 1402 (fontified t c-is-sws t face font-lock-type-face) 1402 1404 (fontified t face font-lock-type-face) 1404 1405 (fontified t c-type c-decl-id-start face font-lock-type-face) 1405 1406 (fontified t) 1406 1422 (fontified t face font-lock-function-name-face) 1422 1423 (fontified t c-type c-decl-arg-start) 1423 1427 (fontified t face font-lock-type-face) 1427 1433 (fontified t) 1433 1436 (fontified t face font-lock-comment-delimiter-face) 1436 1467 (fontified t face font-lock-comment-face) 1467 1470 (fontified t face font-lock-comment-delimiter-face) 1470 1474 (fontified t) 1474 1477 (fontified t face font-lock-comment-delimiter-face) 1477 1500 (fontified t face font-lock-comment-face) 1500 1506 (fontified t face font-lock-comment-face) 1506 1509 (fontified t face font-lock-comment-delimiter-face) 1509 1510 (fontified t) 1510 6405 (fontified nil) 6405 6406 (fontified nil c-is-sws t c-in-sws t) 6406 6472 (fontified nil c-in-sws t) 6472 6473 (fontified nil c-is-sws t) 6473 6503 (fontified nil) 6503 6506 (fontified nil c-in-sws t c-is-sws t) 6506 6541 (fontified nil c-in-sws t) 6541 6542 (fontified nil c-in-sws t) 6542 6543 (fontified t c-is-sws t) 6543 6544 (fontified t c-in-sws t) 6544 6545 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 6545 6547 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 6547 6574 (fontified t c-in-sws t face font-lock-comment-face) 6574 6577 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 6577 6578 (fontified t c-in-sws t) 6578 6579 (fontified t c-is-sws t) 6579 6580 (fontified t) 6580 6581 (fontified t c-is-sws t) 6581 6610 (fontified t) 6610 6612 (fontified t) 6612 6613 (fontified t c-is-sws t face font-lock-comment-delimiter-face) 6613 6615 (fontified t face font-lock-comment-delimiter-face) 6615 6644 (fontified t face font-lock-comment-face) 6644 6647 (fontified t face font-lock-comment-delimiter-face) 6647 6651 (fontified t) 6651 6654 (fontified t face font-lock-comment-delimiter-face) 6654 6681 (fontified t face font-lock-comment-face) 6681 6684 (fontified t face font-lock-comment-delimiter-face) 6684 6685 (fontified t) 6685 6686 (fontified t c-is-sws t) 6686 6688 (fontified t) 6688 6689 (fontified t c-is-sws t face font-lock-doc-face c-in-sws t) 6689 6691 (fontified t face font-lock-doc-face c-in-sws t) 6691 6696 (fontified t face font-lock-doc-face c-in-sws t) 6696 6702 (fontified t face (font-lock-doc-markup-face font-lock-doc-face) c-in-sws t) 6702 6750 (fontified t face font-lock-doc-face c-in-sws t) 6750 6754 (fontified t face font-lock-doc-face c-in-sws t) 6754 6755 (fontified t c-in-sws t) 6755 6756 (fontified t c-is-sws t face font-lock-type-face) 6756 6758 (fontified t face font-lock-type-face) 6758 6759 (fontified t c-type c-decl-id-start face font-lock-type-face) 6759 6760 (fontified t) 6760 6777 (fontified t face font-lock-function-name-face) 6777 6778 (fontified t c-type c-decl-arg-start) 6778 6782 (fontified t face font-lock-type-face) 6782 6786 (fontified t) 6786 6788 (fontified t c-in-sws t c-is-sws t) 6788 6789 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 6789 6791 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 6791 6820 (fontified t face font-lock-comment-face c-in-sws t) 6820 6823 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 6823 6824 (fontified t c-in-sws t) 6824 6828 (fontified t c-is-sws t c-in-sws t) 6828 6829 (fontified t face font-lock-keyword-face c-is-sws t) 6829 6830 (fontified t face font-lock-keyword-face) 6830 6940 (fontified t) 6940 6942 (fontified t c-in-sws t c-is-sws t) 6942 6943 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 6943 6945 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 6945 6972 (fontified t face font-lock-comment-face c-in-sws t) 6972 6975 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 6975 6976 (fontified t c-in-sws t) 6976 6978 (fontified t c-is-sws t c-in-sws t) 6978 6979 (fontified t c-is-sws t) 6979 7008 (fontified t) 7008 7010 (fontified t) 7010 7011 (fontified t c-is-sws t face font-lock-comment-delimiter-face) 7011 7013 (fontified t face font-lock-comment-delimiter-face) 7013 7042 (fontified t face font-lock-comment-face) 7042 7045 (fontified t face font-lock-comment-delimiter-face) 7045 7049 (fontified t) 7049 7052 (fontified t face font-lock-comment-delimiter-face) 7052 7079 (fontified t face font-lock-comment-face) 7079 7082 (fontified t face font-lock-comment-delimiter-face) 7082 7083 (fontified t) 7083 7084 (fontified t c-is-sws t) 7084 7086 (fontified t) 7086 7087 (fontified t face font-lock-doc-face c-in-sws t c-is-sws t) 7087 7089 (fontified t face font-lock-doc-face c-in-sws t) 7089 7094 (fontified t face font-lock-doc-face c-in-sws t) 7094 7100 (fontified t face (font-lock-doc-markup-face font-lock-doc-face) c-in-sws t) 7100 7154 (fontified t face font-lock-doc-face c-in-sws t) 7154 7158 (fontified t face font-lock-doc-face c-in-sws t) 7158 7159 (fontified t c-in-sws t) 7159 7160 (fontified t c-is-sws t face font-lock-type-face) 7160 7162 (fontified t face font-lock-type-face) 7162 7163 (fontified t c-type c-decl-id-start face font-lock-type-face) 7163 7164 (fontified t) 7164 7187 (fontified t face font-lock-function-name-face) 7187 7188 (fontified t c-type c-decl-arg-start) 7188 7192 (fontified t face font-lock-type-face) 7192 7196 (fontified t) 7196 7198 (fontified t c-in-sws t c-is-sws t) 7198 7199 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 7199 7201 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 7201 7236 (fontified t face font-lock-comment-face c-in-sws t) 7236 7239 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 7239 7243 (fontified t c-in-sws t) 7243 7246 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 7246 7279 (fontified t face font-lock-comment-face c-in-sws t) 7279 7282 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 7282 7283 (fontified t c-in-sws t) 7283 7285 (fontified t c-is-sws t c-in-sws t) 7285 7286 (fontified t c-is-sws t) 7286 7324 (fontified t) 7324 7327 (fontified t face font-lock-comment-delimiter-face) 7327 7362 (fontified t face font-lock-comment-face) 7362 7365 (fontified t face font-lock-comment-delimiter-face) 7365 7369 (fontified t) 7369 7372 (fontified t face font-lock-comment-delimiter-face) 7372 7405 (fontified t face font-lock-comment-face) 7405 7408 (fontified t face font-lock-comment-delimiter-face) 7408 7412 (fontified t) 7412 7413 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 7413 7415 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 7415 7432 (fontified t face font-lock-comment-face c-in-sws t) 7432 7435 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 7435 7436 (fontified t c-in-sws t) 7436 7437 (fontified t c-is-sws t face font-lock-type-face) 7437 7439 (fontified t face font-lock-type-face) 7439 7440 (fontified t c-type c-decl-id-start face font-lock-type-face) 7440 7441 (fontified t) 7441 7461 (fontified t face font-lock-function-name-face) 7461 7462 (fontified t c-type c-decl-arg-start) 7462 7465 (fontified t face font-lock-type-face) 7465 7466 (fontified t) 7466 7468 (fontified t face font-lock-variable-name-face) 7468 7469 (fontified t c-type c-decl-arg-start) 7469 7470 (fontified t) 7470 7473 (fontified t face font-lock-type-face) 7473 7474 (fontified t) 7474 7476 (fontified t face font-lock-variable-name-face) 7476 7477 (fontified t c-type c-decl-arg-start) 7477 7478 (fontified t) 7478 7481 (fontified t face font-lock-type-face) 7481 7482 (fontified t) 7482 7484 (fontified t face font-lock-variable-name-face) 7484 7485 (fontified t c-type c-decl-arg-start) 7485 7486 (fontified t) 7486 7489 (fontified t face font-lock-type-face) 7489 7490 (fontified t) 7490 7492 (fontified t face font-lock-variable-name-face) 7492 7493 (fontified t c-type c-decl-arg-start) 7493 7494 (fontified t) 7494 7499 (fontified t face font-lock-type-face) 7499 7500 (fontified t) 7500 7502 (fontified t face font-lock-variable-name-face) 7502 7503 (fontified t c-type c-decl-arg-start) 7503 7504 (fontified t) 7504 7509 (fontified t face font-lock-type-face) 7509 7510 (fontified t) 7510 7512 (fontified t face font-lock-variable-name-face) 7512 7527 (fontified t) 7527 7560 (fontified t face font-lock-string-face) 7560 7586 (fontified t) 7586 7619 (fontified t face font-lock-string-face) 7619 7636 (fontified t) 7636 7639 (fontified t face font-lock-type-face) 7639 7640 (fontified t c-type c-decl-id-start face font-lock-type-face) 7640 7641 (fontified t) 7641 7670 (fontified t face font-lock-function-name-face) 7670 7671 (fontified t c-type c-decl-arg-start) 7671 7688 (fontified t face font-lock-type-face) 7688 7690 (fontified t) 7690 7694 (fontified t face font-lock-variable-name-face) 7694 7702 (fontified t) 7702 7704 (fontified t face font-lock-keyword-face) 7704 7764 (fontified t) 7764 7768 (fontified t face font-lock-string-face) 7768 7962 (fontified t) 7962 7965 (fontified t face font-lock-keyword-face) 7965 7967 (fontified t) 7967 7969 (fontified t face font-lock-type-face) 7969 7970 (fontified t c-type c-decl-id-start face font-lock-type-face) 7970 7971 (fontified t) 7971 7972 (fontified t face font-lock-variable-name-face) 7972 8012 (fontified t) 8012 8014 (fontified t face font-lock-keyword-face) 8014 8055 (fontified t) 8055 8061 (fontified t face font-lock-keyword-face) 8061 8109 (fontified t) 8109 8117 (fontified t c-in-sws t c-is-sws t) 8117 8118 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 8118 8120 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 8120 8198 (fontified t face font-lock-comment-face c-in-sws t) 8198 8206 (fontified t c-in-sws t) 8206 8209 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 8209 8287 (fontified t face font-lock-comment-face c-in-sws t) 8287 8295 (fontified t c-in-sws t) 8295 8298 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 8298 8376 (fontified t face font-lock-comment-face c-in-sws t) 8376 8384 (fontified t c-is-sws t c-in-sws t) 8384 8385 (fontified t face font-lock-keyword-face c-is-sws t) 8385 8387 (fontified t face font-lock-keyword-face) 8387 8389 (fontified t) 8389 8391 (fontified t face font-lock-type-face) 8391 8392 (fontified t c-type c-decl-id-start face font-lock-type-face) 8392 8393 (fontified t) 8393 8394 (fontified t face font-lock-variable-name-face) 8394 8441 (fontified t) 8441 8463 (fontified t face font-lock-string-face) 8463 8510 (fontified t) 8510 8520 (fontified t) 8520 8687 (fontified nil)) . 2215) (undo-tree-id537 . -6542) (undo-tree-id538 . -7010) (undo-tree-id539 . -7010) (t 25314 20970 249512 665000)) nil (25314 22415 357924 921000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1261 . 1262) (#("
" 0 1 (c-in-sws t fontified nil ws-butler-chg chg)) . -1347) (undo-tree-id536 . -1) (1261 . 1348) 1248 (t 25314 20999 170756 101000)) nil (25314 22415 357918 872000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t c-is-sws t)) . 1348)) nil (25314 22415 357883 597000) 0 nil])
([nil nil ((#("#define QUEUE_SIZE 20
#define WINDOW_SIZE 5
#define MAX(a, b) ((a) > (b) ? (a) : (b))
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 7 (c-in-sws t fontified t face font-lock-preprocessor-face) 7 8 (c-in-sws t fontified t) 8 18 (c-in-sws t fontified t face font-lock-variable-name-face) 18 22 (c-in-sws t fontified t) 22 23 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 23 29 (c-in-sws t fontified t face font-lock-preprocessor-face) 29 30 (c-in-sws t fontified t) 30 41 (c-in-sws t fontified t face font-lock-variable-name-face) 41 44 (c-in-sws t fontified t) 44 45 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 45 51 (c-in-sws t fontified t face font-lock-preprocessor-face) 51 52 (c-in-sws t fontified t) 52 55 (c-in-sws t fontified t face font-lock-function-name-face) 55 56 (c-in-sws t fontified t) 56 57 (c-in-sws t fontified t face font-lock-variable-name-face) 57 59 (c-in-sws t fontified t) 59 60 (c-in-sws t fontified t face font-lock-variable-name-face) 60 85 (c-in-sws t fontified t) 85 86 (fontified t c-in-sws t)) . 1262) (undo-tree-id570 . -85) (undo-tree-id571 . -85) (undo-tree-id572 . -21) (undo-tree-id573 . -86) (undo-tree-id574 . -86) (undo-tree-id575 . -8) (undo-tree-id576 . -18) (undo-tree-id577 . -30) (undo-tree-id578 . -41) (undo-tree-id579 . -52) (undo-tree-id580 . -55) (undo-tree-id581 . -86) (t 25314 22415 380676 664000)) nil (25314 22445 386324 634000) 0 nil])
([nil nil ((1261 . 1262) (t 25314 22445 402929 367000) 1237) nil (25314 22447 188764 335000) 0 nil])
([nil nil ((2350 . 2351) (2346 . 2350) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2346) (undo-tree-id582 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -2347) (undo-tree-id583 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2348) (undo-tree-id584 . -1) 2349 (2341 . 2349) (2326 . 2341) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2326) (undo-tree-id585 . -1) 2327 (2326 . 2327) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2326) (undo-tree-id586 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -2327) (undo-tree-id587 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2328) (undo-tree-id588 . -1) 2329 (2325 . 2329) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2325) (undo-tree-id589 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -2326) (undo-tree-id590 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2327) (undo-tree-id591 . -1) 2328 (2325 . 2328) (2324 . 2325) (t 25314 22447 200944 502000) 2302) nil (25314 22558 715783 320000) 0 nil])
([nil nil ((9060 . 9062) (t 25314 22558 726883 237000)) nil (25314 22567 710750 977000) 0 nil])
([nil current ((8955 . 8958) (t 25314 22567 721958 950000)) nil (25314 22604 142779 387000) 0 nil])
nil
