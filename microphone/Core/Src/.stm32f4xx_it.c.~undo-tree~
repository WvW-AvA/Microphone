(undo-tree-save-format-version . 1)
"23ee899c71a7b3624b8228e9555c0219b1e8bc8d"
[nil nil nil nil (25314 12136 10752 864000) 0 nil]
([nil nil ((#("}" 0 1 (c-is-sws t fontified t)) . 8617) (undo-tree-id27 . -1) (undo-tree-id28 . 1) (undo-tree-id29 . -1) (t 25314 10699 48057 517000)) nil (25314 12136 10751 135000) 0 nil])
([nil nil ((9916 . 9917) (9912 . 9914) (#("    " 0 4 (fontified nil)) . 9912) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . 3) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (9916 . 9918)) nil (25314 12136 10746 403000) 0 nil])
([nil nil ((#("//" 0 1 (c-in-sws t face font-lock-comment-delimiter-face c-is-sws t fontified nil) 1 2 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil)) . 9916) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (nil ws-butler-chg delete 9916 . 9917) (9912 . 9916) (#("  " 0 2 (c-is-sws t c-in-sws t ws-butler-chg chg fontified nil)) . 9912) (#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 9916) (undo-tree-id20 . -1)) nil (25314 12136 10739 488000) 0 nil])
([nil nil ((9912 . 9914) (#("    " 0 4 (fontified nil)) . 9912) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (9916 . 9918)) nil (25314 12136 10734 721000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10900 . 10901) (nil fontified nil 10900 . 10901) (nil fontified nil 10899 . 10900) (10899 . 10901) (nil rear-nonsticky nil 10890 . 10891) (nil fontified nil 10890 . 10891) (nil fontified nil 10889 . 10890) (10889 . 10891) (nil rear-nonsticky nil 10856 . 10857) (nil fontified nil 10856 . 10857) (nil fontified nil 10855 . 10856) (10855 . 10857) (nil rear-nonsticky nil 10846 . 10847) (nil fontified nil 10846 . 10847) (nil fontified nil 10845 . 10846) (10845 . 10847) (nil rear-nonsticky nil 10810 . 10811) (nil fontified nil 10810 . 10811) (nil fontified nil 10809 . 10810) (10809 . 10811) (nil rear-nonsticky nil 10804 . 10805) (nil fontified nil 10804 . 10805) (nil fontified nil 10803 . 10804) (10803 . 10805) (nil rear-nonsticky nil 10753 . 10754) (nil fontified nil 10753 . 10754) (nil fontified nil 10752 . 10753) (10752 . 10754) (nil rear-nonsticky nil 10747 . 10748) (nil fontified nil 10747 . 10748) (nil fontified nil 10746 . 10747) (10746 . 10748) (nil rear-nonsticky nil 10737 . 10738) (nil fontified nil 10737 . 10738) (nil fontified nil 10736 . 10737) (10736 . 10738) (nil rear-nonsticky nil 10703 . 10704) (nil fontified nil 10703 . 10704) (nil fontified nil 10702 . 10703) (10702 . 10704) (nil rear-nonsticky nil 10639 . 10640) (nil fontified nil 10639 . 10640) (nil fontified nil 10638 . 10639) (10638 . 10640) (nil rear-nonsticky nil 10629 . 10630) (nil fontified nil 10629 . 10630) (nil fontified nil 10628 . 10629) (10628 . 10630) (nil rear-nonsticky nil 10593 . 10594) (nil fontified nil 10593 . 10594) (nil fontified nil 10592 . 10593) (10592 . 10594) (nil rear-nonsticky nil 10504 . 10505) (nil fontified nil 10504 . 10505) (nil fontified nil 10503 . 10504) (10503 . 10505) (nil rear-nonsticky nil 10415 . 10416) (nil fontified nil 10415 . 10416) (nil fontified nil 10414 . 10415) (10414 . 10416) (nil rear-nonsticky nil 10326 . 10327) (nil fontified nil 10326 . 10327) (nil fontified nil 10325 . 10326) (10325 . 10327) (nil rear-nonsticky nil 10290 . 10291) (nil fontified nil 10290 . 10291) (nil fontified nil 10289 . 10290) (10289 . 10291) (nil rear-nonsticky nil 10280 . 10281) (nil fontified nil 10280 . 10281) (nil fontified nil 10279 . 10280) (10279 . 10281) (nil rear-nonsticky nil 10256 . 10257) (nil fontified nil 10256 . 10257) (nil fontified nil 10255 . 10256) (10255 . 10257) (nil rear-nonsticky nil 10217 . 10218) (nil fontified nil 10217 . 10218) (nil fontified nil 10216 . 10217) (10216 . 10218) (nil rear-nonsticky nil 10207 . 10208) (nil fontified nil 10207 . 10208) (nil fontified nil 10206 . 10207) (10206 . 10208) (nil rear-nonsticky nil 10171 . 10172) (nil fontified nil 10171 . 10172) (nil fontified nil 10170 . 10171) (10170 . 10172) (nil rear-nonsticky nil 10131 . 10132) (nil fontified nil 10131 . 10132) (nil fontified nil 10130 . 10131) (10130 . 10132) (nil rear-nonsticky nil 10091 . 10092) (nil fontified nil 10091 . 10092) (nil fontified nil 10090 . 10091) (10090 . 10092) (nil rear-nonsticky nil 10051 . 10052) (nil fontified nil 10051 . 10052) (nil fontified nil 10050 . 10051) (10050 . 10052) (nil rear-nonsticky nil 10011 . 10012) (nil fontified nil 10011 . 10012) (nil fontified nil 10010 . 10011) (10010 . 10012) (nil rear-nonsticky nil 9988 . 9989) (nil fontified nil 9988 . 9989) (nil fontified nil 9987 . 9988) (9987 . 9989) (nil rear-nonsticky nil 9966 . 9967) (nil fontified nil 9966 . 9967) (nil fontified nil 9965 . 9966) (9965 . 9967) (nil rear-nonsticky nil 9960 . 9961) (nil fontified nil 9960 . 9961) (nil fontified nil 9959 . 9960) (9959 . 9961) (#("  " 0 2 (fontified t)) . 10843) (undo-tree-id9 . -1) (undo-tree-id10 . -2) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("  " 0 2 (fontified t)) . 10835) (#("  " 0 2 (fontified t)) . 10803) (#("  " 0 2 (fontified t)) . 10795) (#("  " 0 2 (fontified t)) . 10761) (#("  " 0 2 (fontified t)) . 10757) (#("  " 0 2 (fontified t)) . 10708) (#("  " 0 2 (fontified t)) . 10704) (#("  " 0 2 (fontified t)) . 10696) (#("  " 0 2 (fontified t)) . 10664) (#("  " 0 2 (fontified t)) . 10602) (#("  " 0 2 (fontified t)) . 10594) (#("  " 0 1 (c-is-sws t fontified t) 1 2 (fontified t c-in-sws t)) . 10560) (#("  " 0 1 (c-is-sws t fontified t) 1 2 (fontified t c-in-sws t)) . 10473) (#("  " 0 1 (c-is-sws t fontified t) 1 2 (fontified t c-in-sws t)) . 10386) (#("  " 0 2 (fontified t c-is-sws t c-in-sws t)) . 10299) (#("  " 0 2 (fontified t)) . 10265) (#("  " 0 2 (fontified t)) . 10257) (#("  " 0 2 (fontified t)) . 10235) (#("  " 0 2 (fontified t)) . 10198) (#("  " 0 2 (fontified t)) . 10190) (#("  " 0 2 (fontified t)) . 10156) (#("  " 0 2 (fontified t)) . 10118) (#("  " 0 2 (fontified t)) . 10080) (#("  " 0 2 (fontified t)) . 10042) (#("  " 0 2 (fontified t)) . 10004) (#("  " 0 2 (fontified t)) . 9983) (#("  " 0 2 (fontified t)) . 9963) (#("  " 0 2 (c-is-sws t fontified t)) . 9959) 10901) nil (25314 12136 10719 381000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t)) . -9914) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 9915 (9914 . 9915) (9911 . 9914) 9910) nil (25314 12136 10680 429000) 0 nil])
([nil nil ((#("
  " 0 1 (ws-butler-chg chg fontified t) 1 3 (ws-butler-chg chg fontified nil)) . 9911) (undo-tree-id0 . -2) (undo-tree-id1 . -3) (undo-tree-id2 . -1) (undo-tree-id3 . -2) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (#("i" 0 1 (ws-butler-chg chg fontified nil)) . 9914) (undo-tree-id6 . -1) (nil ws-butler-chg delete 9915 . 9916) (9914 . 9915)) nil (25314 12136 10670 855000) 0 nil])
([nil nil ((9914 . 9916) (9911 . 9914) (t 25314 12136 22152 853000) 9910) nil (25314 12547 966944 551000) 0 nil])
([nil nil ((#("  if
" 0 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified t ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified t)) . 9912) (undo-tree-id43 . -3) (undo-tree-id44 . 1) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -2) 9914) nil (25314 12547 966941 576000) 0 nil])
([nil nil ((9945 . 9947) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 9945) (undo-tree-id26 . -4) (9949 . 9950) (9944 . 9949) (9943 . 9944) (9942 . 9943) (9941 . 9942) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -9941) (undo-tree-id27 . -1) (#("&" 0 1 (fontified t ws-butler-chg chg)) . -9942) (undo-tree-id28 . -1) (#("&" 0 1 (fontified t ws-butler-chg chg)) . -9943) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -9944) (undo-tree-id30 . -1) 9945 (9940 . 9945) (9939 . 9940) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -9939) (undo-tree-id31 . -1) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -9940) (undo-tree-id32 . -1) 9941 (9923 . 9941) (9918 . 9923) (#("T" 0 1 (fontified t ws-butler-chg chg)) . -9918) (undo-tree-id33 . -1) (#("I" 0 1 (fontified t ws-butler-chg chg)) . -9919) (undo-tree-id34 . -1) (#("M" 0 1 (fontified t ws-butler-chg chg)) . -9920) (undo-tree-id35 . -1) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -9921) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -9922) (undo-tree-id37 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -9923) (undo-tree-id38 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -9924) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -9925) (undo-tree-id40 . -1) 9926 (9921 . 9926) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -9921) (undo-tree-id41 . -1) 9922 (9918 . 9922) (9917 . 9918) (9916 . 9917) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -9916) (undo-tree-id42 . -1) 9917 (9916 . 9917) (9914 . 9916) (9911 . 9914) 9910) nil (25314 12547 966525 535000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . -9945) (undo-tree-id25 . -4) 9949 (9945 . 9949) (9945 . 9946) 9947) nil (25314 12547 966499 383000) 0 nil])
([nil nil ((2228 . 2229) (2220 . 2228) (2215 . 2220) (#("G" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2215) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2216) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("I" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2217) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg)) . -2218) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 2219 (2215 . 2219) (2211 . 2215) (#("6" 0 1 (fontified t ws-butler-chg chg)) . -2211) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 2212 (2207 . 2212) (#("G" 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -2207) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg)) . -2208) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("I" 0 1 (fontified t ws-butler-chg chg)) . -2209) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 2210 (2207 . 2210) (2206 . 2207) 2182) nil (25314 12547 966478 269000) 0 nil])
([nil nil ((10052 . 10053) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -9975) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 9976 (9972 . 9976) (9968 . 9972) (9968 . 9969) (#("
" 0 1 (fontified t)) . 9968) (undo-tree-id52 . 1) (t 25314 12547 971620 327000)) nil (25314 12718 384115 507000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . 10052)) nil (25314 12718 384101 36000) 0 nil])
([nil nil ((5744 . 7012) ("EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI0_IRQn 0 */
    printf(\"0\");
    mp_timestamp[0] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI0_IRQn);
  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}

/**
  * @brief This function handles EXTI line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI1_IRQn 0 */
    printf(\"1\");
    mp_timestamp[1] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI1_IRQn);
  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
  /* USER CODE BEGIN EXTI1_IRQn 1 */
  /* USER CODE END EXTI1_IRQn 1 */
}

/**
  * @brief This function handles EXTI line2 interrupt.
  */
void EXTI2_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI2_IRQn 0 */
    printf(\"2\");
    mp_timestamp[2] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI2_IRQn);
  /* USER CODE END EXTI2_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
  /* USER CODE BEGIN EXTI2_IRQn 1 */
  /* USER CODE END EXTI2_IRQn 1 */
}

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI3_IRQn 0 */
    printf(\"3\");
    mp_timestamp[3] = __HAL_TIM_GET_COUNTER(&htim10);
    time_begin();
    HAL_NVIC_DisableIRQ(EXTI3_IRQn);
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
  /* USER CODE BEGIN EXTI3_IRQn 1 */
  /* USER CODE END EXTI3_IRQn 1 */
}

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_rx);
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}

/**
  * @brief This function handles DMA1 stream5 global interrupt.
  */
void DMA1_Stream5_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_rx);
  /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */

  /* USER CODE END DMA1_Stream5_IRQn 1 */
}

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
  HAL_TIM_IRQHandler(&htim10);
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
" . 5744) (t 25314 12718 392054 792000)) nil (25314 13189 408615 275000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t ws-butler-chg chg)) . -8346) (undo-tree-id37 . -1) (#("A" 0 1 (fontified t ws-butler-chg chg)) . -8347) (undo-tree-id38 . -1) (#("L" 0 1 (fontified t ws-butler-chg chg)) . -8348) (undo-tree-id39 . -1) 8349 (8346 . 8349) (8340 . 8346) (8340 . 8341) (#("    for
" 0 4 (fontified t) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t)) . 8340) (undo-tree-id40 . -7) (undo-tree-id41 . 1) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -6) (undo-tree-id46 . -6) 8346 (t 25314 12870 720000 0)) nil (25314 13189 408610 877000) 0 nil])
([nil nil ((#("      
" 0 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg delete)) . 8340) (undo-tree-id36 . 1)) nil (25314 13189 408600 410000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 8307) (undo-tree-id35 . 2)) nil (25314 13189 408598 686000) 0 nil])
([nil nil ((8307 . 8311)) nil (25314 13189 408596 836000) 0 nil])
([nil nil ((#("  " 0 1 (ws-butler-chg delete fontified t) 1 2 (fontified t)) . 8342) (undo-tree-id34 . 2)) nil (25314 13189 408595 653000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg chg)) . -8342) (8342 . 8343) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -8342) (8342 . 8343)) nil (25314 13189 408593 681000) 0 nil])
([nil nil ((8342 . 8346)) nil (25314 13189 408592 275000) 0 nil])
([nil nil ((8391 . 8392) (8383 . 8391) (#("G" 0 1 (fontified t ws-butler-chg chg)) . -8383) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg)) . -8384) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 8385 (8383 . 8385) (8382 . 8383) (8381 . 8382) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -8381) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 8382 (8381 . 8382) (8367 . 8381) (#("G" 0 1 (fontified t ws-butler-chg chg)) . -8367) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg)) . -8368) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("I" 0 1 (fontified t ws-butler-chg chg)) . -8369) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg)) . -8370) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("D" 0 1 (fontified t ws-butler-chg chg)) . -8371) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("," 0 1 (fontified t ws-butler-chg chg)) . -8372) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8373) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 8374 (#("G" 0 1 (fontified t ws-butler-chg chg)) . -8374) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg)) . -8375) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("I" 0 1 (fontified t ws-butler-chg chg)) . -8376) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg)) . -8377) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 8378 (8373 . 8378) (8372 . 8373) (8371 . 8372) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -8371) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 8372 (8367 . 8372) (8366 . 8367) (8358 . 8366) (8350 . 8358) (8341 . 8350) 8309) nil (25314 13189 408586 623000) 0 nil])
([nil nil ((8370 . 8371) (#("3" 0 1 (fontified t ws-butler-chg chg)) . 8370)) nil (25314 13189 408553 850000) 0 nil])
([nil nil ((8392 . 8393)) nil (25314 13189 408552 613000) 0 nil])
([nil nil ((8350 . 8351)) nil (25314 13189 408551 629000) 0 nil])
([nil nil ((2215 . 2218) (#("gpio" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face)) . 2215)) nil (25314 13189 408550 27000) 0 nil])
([nil nil ((2220 . 2224) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2220) (undo-tree-id0 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2221) (undo-tree-id1 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2222) (undo-tree-id2 . -1) 2223 (2219 . 2223) (#("value" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face)) . 2219) (undo-tree-id3 . -5)) nil (25314 13189 408544 762000) 0 nil])
([nil nil ((2219 . 2222) (#("input" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face)) . 2219) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (t 25314 13189 419019 540000)) nil (25314 13201 878047 285000) 0 nil])
([nil nil ((8348 . 8351) (t 25314 13201 883124 451000)) nil (25314 13235 334848 507000) 0 nil])
([nil nil ((#("micHAL" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 8348) (undo-tree-id53 . 3)) nil (25314 13235 334846 160000) 0 nil])
([nil nil ((nil ws-butler-chg delete 8354 . 8355) (8348 . 8354)) nil (25314 13235 334842 881000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . 8348)) nil (25314 13235 334840 712000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg delete)) . 8348)) nil (25314 13235 334839 34000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg delete)) . 8348)) nil (25314 13235 334836 608000) 0 nil])
([nil nil ((8354 . 8359) (8347 . 8354) (#("mic" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -8347) (undo-tree-id52 . -3) 8350 (8347 . 8350)) nil (25314 13235 334833 909000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8411 . 8412) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -8468) (undo-tree-id51 . -1) (8403 . 8469) 8358) nil (25314 13235 334828 770000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8476 . 8477) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -8533) (undo-tree-id50 . -1) (8468 . 8534) 8412) nil (25314 13235 334824 28000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8541 . 8542) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -8598) (undo-tree-id49 . -1) (8533 . 8599) 8477) nil (25314 13235 334818 479000) 0 nil])
([nil nil ((8420 . 8421) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 8420)) nil (25314 13235 334806 862000) 0 nil])
([nil nil ((8485 . 8486) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 8485)) nil (25314 13235 334805 548000) 0 nil])
([nil nil ((8550 . 8551) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 8550)) nil (25314 13235 334803 697000) 0 nil])
([nil nil ((8445 . 8446) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8445)) nil (25314 13235 334801 537000) 0 nil])
([nil nil ((8510 . 8511) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8510)) nil (25314 13235 334799 490000) 0 nil])
([nil nil ((8575 . 8576) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8575)) nil (25314 13235 334797 210000) 0 nil])
([nil nil ((8461 . 8462) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8461)) nil (25314 13235 334794 194000) 0 nil])
([nil nil ((8526 . 8527) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8526)) nil (25314 13235 334791 112000) 0 nil])
([nil nil ((8591 . 8592) (#("0" 0 1 (fontified t ws-butler-chg chg)) . 8591)) nil (25314 13235 334782 520000) 0 nil])
([nil nil ((8617 . 8618) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -8617) (undo-tree-id77 . -1) 8618 (8617 . 8618) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -8617) (undo-tree-id78 . -1) 8618 (8616 . 8618) (#("3" 0 1 (fontified t ws-butler-chg chg)) . -8616) (undo-tree-id79 . -1) (#("]" 0 1 (fontified t ws-butler-chg chg)) . -8617) (undo-tree-id80 . -1) (undo-tree-id81 . 1) (undo-tree-id82 . -1) 8618 (8611 . 8618) (8608 . 8611) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -8608) (undo-tree-id83 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8609) (undo-tree-id84 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -8610) (undo-tree-id85 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -8611) (undo-tree-id86 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -8612) (undo-tree-id87 . -1) 8613 (8612 . 8613) (8608 . 8612) (8599 . 8608) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 8599) (undo-tree-id88 . -8) 8607 (8598 . 8607) (t 25314 13235 342406 84000) 8591) nil (25314 13568 13594 339000) 0 nil])
([nil nil ((8612 . 8613) (8608 . 8612) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -8608) (undo-tree-id73 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8609) (undo-tree-id74 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -8610) (undo-tree-id75 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -8611) (undo-tree-id76 . -1) 8612 (8608 . 8612)) nil (25314 13568 13560 785000) 0 nil])
([nil nil ((8613 . 8614)) nil (25314 13568 13555 347000) 0 nil])
([nil nil ((#("        push(&mic_que[0]
" 0 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg delete) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 21 (fontified t ws-butler-chg chg) 21 22 (fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg delete)) . 8600) (undo-tree-id62 . 1) (undo-tree-id63 . -25) (undo-tree-id64 . -25) (undo-tree-id65 . -25) (undo-tree-id66 . -25) (undo-tree-id67 . -25) (undo-tree-id68 . -23) (undo-tree-id69 . 2) (undo-tree-id70 . -24) (undo-tree-id71 . 4) (undo-tree-id72 . -22) 8623) nil (25314 13568 13553 790000) 0 nil])
([nil nil ((1524 . 1530)) nil (25314 13568 13544 562000) 0 nil])
([nil nil ((1524 . 1525) (#("Queue 
" 0 1 (fontified t c-is-sws t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t)) . 1524) (undo-tree-id57 . 1) (undo-tree-id58 . -5) (undo-tree-id59 . -6) (undo-tree-id60 . -5) (undo-tree-id61 . -5) 1529) nil (25314 13568 13542 568000) 0 nil])
([nil nil ((2243 . 2244) (2237 . 2243) (2227 . 2237) (2226 . 2227) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -2226) (undo-tree-id54 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2227) (undo-tree-id55 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2228) (undo-tree-id56 . -1) 2229 (2227 . 2229) (2226 . 2227) 2207) nil (25314 13568 13533 137000) 0 nil])
([nil nil ((8639 . 8642) (8632 . 8639) (#("mic_q" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -8632) (undo-tree-id136 . -5) (undo-tree-id137 . -5) 8637 (8631 . 8637) (8630 . 8631) (8627 . 8630) (8626 . 8627) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -8626) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -8627) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -8628) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -8629) (undo-tree-id147 . -1) (undo-tree-id148 . -1) 8630 (8629 . 8630) (8626 . 8629) (8617 . 8626) (t 25314 13568 22206 329000) 8617) nil (25314 13652 977786 115000) 0 nil])
([nil nil ((8655 . 8656) (8654 . 8655) (8652 . 8654) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -8652) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 8653 (8647 . 8653) (8643 . 8647) (8642 . 8643)) nil (25314 13652 977771 75000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t ws-butler-chg chg)) . -8617) (undo-tree-id132 . -8) (undo-tree-id133 . -8) 8625 (8617 . 8625) (8617 . 8618) (#("
" 0 1 (fontified t ws-butler-chg chg)) . 8617)) nil (25314 13652 977765 682000) 0 nil])
([nil nil ((8631 . 8640) (8630 . 8631) (8626 . 8630) (8617 . 8626) 8617) nil (25314 13652 977700 220000) 0 nil])
([nil nil ((8652 . 8653) (8648 . 8652) (8647 . 8648) (8645 . 8647) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -8645) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 8646 (8644 . 8646) (#("+" 0 1 (fontified t ws-butler-chg chg)) . -8644) (undo-tree-id130 . -1) (undo-tree-id131 . -1) 8645 (8641 . 8645) (8640 . 8641)) nil (25314 13652 977695 450000) 0 nil])
([nil nil ((8654 . 8655) (8653 . 8654) (#("{" 0 1 (fontified t ws-butler-chg chg)) . -8653) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 8654 (8653 . 8654)) nil (25314 13652 977682 961000) 0 nil])
([nil nil ((8664 . 8668)) nil (25314 13652 977675 779000) 0 nil])
([nil nil ((8699 . 8707) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 8699) (undo-tree-id123 . -12) (undo-tree-id124 . -12) (8711 . 8712) (8698 . 8711) 8667) nil (25314 13652 977673 496000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -8726) (undo-tree-id117 . -1) (undo-tree-id118 . -1) 8727 (8723 . 8727) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8723) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8724) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 8725 (8715 . 8725) (8714 . 8715) (8711 . 8714) (8698 . 8711) 8664) nil (25314 13652 977668 464000) 0 nil])
([nil nil ((#("            pop(&mic_que[i]
" 0 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 21 (fontified t ws-butler-chg chg) 21 22 (fontified t ws-butler-chg chg) 22 23 (fontified t ws-butler-chg chg) 23 24 (fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg chg) 25 26 (fontified t ws-butler-chg chg) 26 27 (fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg delete)) . 8699) (undo-tree-id105 . 1) (undo-tree-id106 . -26) (undo-tree-id107 . -15) (undo-tree-id108 . -27) (undo-tree-id109 . 2) (undo-tree-id110 . -27) (undo-tree-id111 . 4) (undo-tree-id112 . -25) (undo-tree-id113 . -12) (undo-tree-id114 . -28) (undo-tree-id115 . -27) (undo-tree-id116 . -26) 8725) nil (25314 13652 977660 599000) 0 nil])
([nil nil ((#("        }
" 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg delete fontified t) 9 10 (ws-butler-chg delete fontified t)) . 8699) (undo-tree-id94 . 10) (undo-tree-id95 . -10) (undo-tree-id96 . -10) (undo-tree-id97 . -10) (undo-tree-id98 . -10) (undo-tree-id99 . -10) (undo-tree-id100 . -8) (undo-tree-id101 . 2) (undo-tree-id102 . -9) (undo-tree-id103 . -9) (undo-tree-id104 . -8) 8707) nil (25314 13652 977649 906000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t ws-butler-chg chg)) . 8654) (undo-tree-id92 . 1) (undo-tree-id93 . -1)) nil (25314 13652 977639 307000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 8653) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1)) nil (25314 13652 977633 78000) 0 nil])
([nil nil ((8711 . 8712) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8711) (undo-tree-id159 . -1) 8712 (8706 . 8712) (#("q" 0 1 (fontified t ws-butler-chg chg)) . -8706) (undo-tree-id160 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8707) (undo-tree-id161 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8708) (undo-tree-id162 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8709) (undo-tree-id163 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8710) (undo-tree-id164 . -1) 8711 (8706 . 8711) (8697 . 8706) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 8697) (undo-tree-id165 . -8) 8705 (8696 . 8705) (t 25314 13652 981921 456000) 8688) nil (25314 14824 983377 305000) 0 nil])
([nil nil ((8716 . 8717) (8712 . 8716)) nil (25314 14824 983362 600000) 0 nil])
([nil nil ((8718 . 8719) (8717 . 8718) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -8717) (undo-tree-id155 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8718) (undo-tree-id156 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -8719) (undo-tree-id157 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -8720) (undo-tree-id158 . -1) 8721 (8717 . 8721)) nil (25314 14824 983359 251000) 0 nil])
([nil nil ((8260 . 8261) (8259 . 8260) 8258) nil (25314 14824 983351 228000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil ws-butler-chg chg)) . 8281) (undo-tree-id151 . -4) (8285 . 8286) (8280 . 8285) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 8279) (undo-tree-id152 . -4) (8283 . 8284) (8278 . 8283) (8276 . 8278) (8269 . 8276) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -8269) (undo-tree-id153 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -8270) (undo-tree-id154 . -1) 8271 (8261 . 8271) (8260 . 8261) 8260) nil (25314 14824 983347 235000) 0 nil])
([nil nil ((8315 . 8319) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 8315) (undo-tree-id150 . -8) (8323 . 8324) (8314 . 8323) (8313 . 8314) (8312 . 8313) (8311 . 8312) (8307 . 8311) (8306 . 8307) (8300 . 8306) (8299 . 8300) (8290 . 8299) (8289 . 8290) (8285 . 8289) (8280 . 8285) 8279) nil (25314 14824 983337 169000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t ws-butler-chg chg)) . -8315) (undo-tree-id149 . -8) 8323 (8314 . 8323) 8285) nil (25314 14824 983327 707000) 0 nil])
([nil nil ((8343 . 8344) (8332 . 8343) (8328 . 8332) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8328) (undo-tree-id172 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -8329) (undo-tree-id173 . -1) 8330 (8323 . 8330) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8323) (undo-tree-id174 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -8324) (undo-tree-id175 . -1) 8325 (8323 . 8325) (8315 . 8323) (8315 . 8316) (#("
" 0 1 (fontified t)) . 8315) (undo-tree-id176 . 1) (t 25314 14824 990786 538000)) nil (25314 17052 521600 863000) 0 nil])
([nil nil ((8331 . 8332)) nil (25314 17052 521589 645000) 0 nil])
([nil nil ((8359 . 8360) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8359) (undo-tree-id171 . -1) 8360 (8345 . 8360)) nil (25314 17052 521587 879000) 0 nil])
([nil nil ((8331 . 8332)) nil (25314 17052 521582 218000) 0 nil])
([nil nil ((8375 . 8376) (8368 . 8375) (#("W" 0 1 (fontified t ws-butler-chg chg)) . -8368) (undo-tree-id169 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg)) . -8369) (undo-tree-id170 . -1) 8370 (8361 . 8370)) nil (25314 17052 521580 425000) 0 nil])
([nil nil ((8327 . 8328) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 8327)) nil (25314 17052 521575 798000) 0 nil])
([nil nil ((8349 . 8354) (#("U" 0 1 (fontified t ws-butler-chg chg)) . -8349) (undo-tree-id168 . -1) 8350 (8349 . 8350) (#("WINDOW" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . 8349)) nil (25314 17052 521573 556000) 0 nil])
([nil nil ((8363 . 8368) (#("U" 0 1 (fontified nil ws-butler-chg chg)) . -8363) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 8364 (8363 . 8364) (#("WINDOW" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . 8363)) nil (25314 17052 521566 352000) 0 nil])
([nil nil ((8383 . 8391) (8374 . 8383) (t 25314 17052 528536 249000) 8367) nil (25314 17087 71660 424000) 0 nil])
([nil nil ((8323 . 8330) (#("i" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -8323) (undo-tree-id186 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -8324) (undo-tree-id187 . -1) 8325 (8323 . 8325) (#("int" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) . 8323)) nil (25314 17087 71657 989000) 0 nil])
([nil nil ((8290 . 8297) (#("int" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) . 8290)) nil (25314 17087 71654 250000) 0 nil])
([nil nil ((8391 . 8398) (#("int" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . 8391)) nil (25314 17087 71652 409000) 0 nil])
([nil nil ((8418 . 8419) (8414 . 8418) (#("I" 0 1 (ws-butler-chg chg fontified t)) . -8414) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("S" 0 1 (ws-butler-chg chg fontified t)) . -8415) (undo-tree-id180 . -1) 8416 (8410 . 8416) (8407 . 8410) (#("Q" 0 1 (ws-butler-chg chg fontified t)) . -8407) (undo-tree-id181 . -1) (#("U" 0 1 (ws-butler-chg chg fontified t)) . -8408) (undo-tree-id182 . -1) (#("E" 0 1 (ws-butler-chg chg fontified t)) . -8409) (undo-tree-id183 . -1) (#("U" 0 1 (ws-butler-chg chg fontified t)) . -8410) (undo-tree-id184 . -1) (#("E" 0 1 (ws-butler-chg chg fontified t)) . -8411) (undo-tree-id185 . -1) 8412 (8403 . 8412)) nil (25314 17087 71646 292000) 0 nil])
([nil nil ((8442 . 8450) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 8442) (undo-tree-id191 . -12) (undo-tree-id192 . -12) (8454 . 8455) (8441 . 8454) (8440 . 8441) (8439 . 8440) (8438 . 8439) (8435 . 8438) (8434 . 8435) (8433 . 8434) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -8433) (8433 . 8435) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 8433) (undo-tree-id193 . -5) (8428 . 8433) 8433 (8428 . 8433) (8419 . 8428) (t 25314 17087 80827 87000) 8418) nil (25314 17105 391996 803000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t ws-butler-chg chg)) . -8442) (undo-tree-id188 . -12) (undo-tree-id189 . -12) (undo-tree-id190 . -12) 8454 (8441 . 8454) 8428) nil (25314 17105 391986 415000) 0 nil])
([nil nil ((8435 . 8445)) nil (25314 17105 391971 410000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 8438) (t 25314 17105 397981 265000)) nil (25314 17131 288974 873000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . 8441)) nil (25314 17131 288973 763000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t ws-butler-chg delete)) . 8441) (undo-tree-id200 . -1)) nil (25314 17131 288972 724000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 8441)) nil (25314 17131 288970 836000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg delete)) . 8441) (undo-tree-id199 . 1)) nil (25314 17131 288969 756000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8440) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1)) nil (25314 17131 288967 875000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg delete)) . 8440) (undo-tree-id195 . 1)) nil (25314 17131 288963 840000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg delete)) . 8440) (undo-tree-id194 . 1)) nil (25314 17131 288960 459000) 0 nil])
([nil nil ((8460 . 8461) (8457 . 8460) (8444 . 8457) 8444) nil (25314 17131 288950 342000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 8458) (t 25314 17131 294199 239000)) nil (25314 17134 167457 606000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg delete)) . 8458) (undo-tree-id201 . -1) (undo-tree-id202 . -1)) nil (25314 17134 167455 98000) 0 nil])
([nil nil ((8457 . 8459)) nil (25314 17134 167441 799000) 0 nil])
([nil nil ((8472 . 8473) (8471 . 8472) (8460 . 8471) (8459 . 8460) (8456 . 8459) (8444 . 8456) (8444 . 8445) (#("
" 0 1 (fontified t)) . 8444) (t 25314 17134 172223 464000)) nil (25314 17181 359202 215000) 0 nil])
([nil nil ((8348 . 8349) (8342 . 8348) (8338 . 8342) (#("mic" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -8338) (undo-tree-id203 . -3) 8341 (8334 . 8341) (8333 . 8334) (8327 . 8333) (#("q" 0 1 (fontified t ws-butler-chg chg)) . -8327) (undo-tree-id204 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8328) (undo-tree-id205 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8329) (undo-tree-id206 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8330) (undo-tree-id207 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8331) (undo-tree-id208 . -1) 8332 (8327 . 8332) (8318 . 8327) (t 25314 17181 364620 707000) 8309) nil (25314 17216 302778 384000) 0 nil])
([nil nil ((8338 . 8339)) nil (25314 17216 302760 791000) 0 nil])
([nil nil ((8373 . 8376) (t 25314 17216 313914 882000)) nil (25314 17260 693080 25000) 0 nil])
([nil nil ((8384 . 8387)) nil (25314 17260 693078 85000) 0 nil])
([nil nil ((8378 . 8379) (8377 . 8378) (8376 . 8377) (8375 . 8376) (8371 . 8375) (#("((q->front - q->back) + QUEUE_SIZE) % QUEUE_SIZE;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t)) . 8371) (undo-tree-id211 . 33) (undo-tree-id212 . 49) (undo-tree-id213 . -1) (undo-tree-id214 . 15) (undo-tree-id215 . -35)) nil (25314 17260 693075 491000) 0 nil])
([nil nil ((#("(&" 0 1 (fontified t) 1 2 (fontified t)) . 8456) (undo-tree-id209 . 2) (undo-tree-id210 . -1)) nil (25314 17260 693064 307000) 0 nil])
([nil nil ((#("mic_que[i]);" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 8456)) nil (25314 17260 693051 358000) 0 nil])
([nil nil ((8459 . 8460) (8458 . 8459) (8457 . 8458) (8456 . 8457)) nil (25314 17260 693045 160000) 0 nil])
([nil nil ((#("        uint8_t l = size(q);
" 0 8 (fontified t) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t face font-lock-type-face) 11 12 (fontified t face font-lock-type-face) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face) 14 15 (fontified t c-type c-decl-id-start face font-lock-type-face) 15 16 (fontified t) 16 17 (fontified t face font-lock-variable-name-face) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t)) . 8351) (undo-tree-id225 . -28) (undo-tree-id226 . -27) (undo-tree-id227 . -27) (undo-tree-id228 . -27) 8378 (t 25314 17260 699288 482000)) nil (25314 17569 561261 488000) 0 nil])
([nil nil ((8377 . 8378) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -8377) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 8378 (8376 . 8378) (8375 . 8376) (8373 . 8375) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8373) (undo-tree-id222 . -1) 8374 (8373 . 8374) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8373) (undo-tree-id223 . -1) (#("z" 0 1 (fontified t ws-butler-chg chg)) . -8374) (undo-tree-id224 . -1) 8375 (8371 . 8375) (#("l" 0 1 (fontified t)) . 8371)) nil (25314 17569 561252 116000) 0 nil])
([nil nil ((8377 . 8378) (8376 . 8377) (8375 . 8376) (8374 . 8375) (8371 . 8374) (t 25314 17569 570888 320000)) nil (25314 17668 255536 667000) 0 nil])
([nil nil ((8399 . 8400)) nil (25314 17668 255531 603000) 0 nil])
([nil nil ((8371 . 8374) (#("max" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . 8371)) nil (25314 17668 255521 149000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 8419) (t 25314 17668 262719 35000)) nil (25314 17676 950010 477000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 8419)) nil (25314 17676 950008 512000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t ws-butler-chg delete)) . 8419)) nil (25314 17676 950007 206000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8418) (undo-tree-id241 . -1) (undo-tree-id242 . -1)) nil (25314 17676 950005 154000) 0 nil])
([nil nil ((8418 . 8420)) nil (25314 17676 949998 827000) 0 nil])
([nil nil ((#("            --d;
" 0 1 (fontified t) 1 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t)) . 8444) (undo-tree-id239 . -15) (undo-tree-id240 . -15) 8459) nil (25314 17676 949996 578000) 0 nil])
([nil nil ((#("        }
" 0 1 (ws-butler-chg delete fontified t) 1 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 8444) (undo-tree-id234 . -8) (undo-tree-id235 . -9) (undo-tree-id236 . 2) (undo-tree-id237 . -9) (undo-tree-id238 . -8) 8452) nil (25314 17676 949991 328000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 8422) (undo-tree-id232 . 1) (undo-tree-id233 . -1)) nil (25314 17676 949982 310000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8421) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1)) nil (25314 17676 949973 885000) 0 nil])
([nil nil ((8904 . 8911) (#("cut" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 8904) (undo-tree-id244 . -3) (t 25314 17676 956792 215000)) nil (25314 17766 429698 86000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-function-name-face)) . 8272)) nil (25314 17766 429693 309000) 0 nil])
([nil nil ((nil ws-butler-chg delete 8273 . 8274) (8272 . 8273)) nil (25314 17766 429691 18000) 0 nil])
([nil nil ((8273 . 8280) (#("cut" 0 1 (fontified t face font-lock-function-name-face) 1 2 (fontified t face font-lock-function-name-face) 2 3 (fontified t face font-lock-function-name-face)) . 8273) (undo-tree-id243 . 3)) nil (25314 17766 429684 520000) 0 nil])
([nil nil ((8291 . 8302) (8289 . 8291) (8284 . 8289) (t 25314 17766 435545 379000) 8283) nil (25314 17829 894290 925000) 0 nil])
([nil nil ((8520 . 8521) (8519 . 8520) (8518 . 8519) (#("else" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-comment-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-comment-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 8518) (undo-tree-id248 . -4) (8514 . 8518) 8518 (8514 . 8518) (#("w" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8514) (undo-tree-id249 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8515) (undo-tree-id250 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -8516) (undo-tree-id251 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8517) (undo-tree-id252 . -1) 8518 (8514 . 8518) (8497 . 8514) (#("1" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8497) (undo-tree-id253 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8498) (undo-tree-id254 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8499) (undo-tree-id255 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8500) (undo-tree-id256 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8501) (undo-tree-id257 . -1) 8502 (8497 . 8502) (8496 . 8497) (8495 . 8496) (#("(" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -8495) (undo-tree-id258 . -1) 8496 (8495 . 8496) (8478 . 8495) (#("w" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8478) (undo-tree-id259 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8479) (undo-tree-id260 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8480) (undo-tree-id261 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8481) (undo-tree-id262 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8482) (undo-tree-id263 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8483) (undo-tree-id264 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8484) (undo-tree-id265 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8485) (undo-tree-id266 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8486) (undo-tree-id267 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8487) (undo-tree-id268 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -8488) (undo-tree-id269 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8489) (undo-tree-id270 . -1) 8490 (8485 . 8490) (8477 . 8485) (8475 . 8477) (8470 . 8475) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 8470) (undo-tree-id271 . -4) 8474 (8469 . 8474) 8468) nil (25314 17829 894281 443000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 4 (fontified t ws-butler-chg chg c-is-sws t)) . -8522) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) 8526 (8521 . 8526) 8520) nil (25314 17829 894192 6000) 0 nil])
([nil nil ((2263 . 2264) (2261 . 2263) (2258 . 2261) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2258) (undo-tree-id272 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2259) (undo-tree-id273 . -1) 2260 (2258 . 2260) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2258) (undo-tree-id274 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2259) (undo-tree-id275 . -1) 2260 (2258 . 2260) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2258) (undo-tree-id276 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2259) (undo-tree-id277 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2260) (undo-tree-id278 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2261) (undo-tree-id279 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2262) (undo-tree-id280 . -1) 2263 (2261 . 2263) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2261) (undo-tree-id281 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2262) (undo-tree-id282 . -1) (#("[" 0 1 (fontified t ws-butler-chg chg)) . -2263) (undo-tree-id283 . -1) 2264 (2263 . 2264) (2245 . 2263) (2244 . 2245) (t 25314 17829 901079 581000) 2227) nil (25314 17893 701300 696000) 0 nil])
([nil nil ((8580 . 8584) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 8580) (undo-tree-id337 . -8) (8588 . 8589) (8579 . 8588) (8578 . 8579) (8577 . 8578) (8576 . 8577) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -8576) (undo-tree-id338 . -1) 8577 (8576 . 8577) (8572 . 8576) (8571 . 8572) (8565 . 8571) (8564 . 8565) (8556 . 8564) (#("-" 0 1 (fontified t ws-butler-chg chg)) . -8556) (undo-tree-id339 . -1) 8557 (8551 . 8557) (8550 . 8551) (8546 . 8550) (8542 . 8546) (8542 . 8543) (#("
" 0 1 (c-is-sws t fontified t)) . 8542) (t 25314 17893 710616 680000)) nil (25314 18064 816168 118000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t c-is-sws t ws-butler-chg chg) 1 4 (fontified t c-is-sws t ws-butler-chg chg)) . -8542) (undo-tree-id336 . -4) 8546 (8542 . 8546) (8542 . 8543) 8546) nil (25314 18064 816160 868000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete c-is-sws t)) . 8542) (undo-tree-id335 . 1)) nil (25314 18064 816158 582000) 0 nil])
([nil nil ((8601 . 8602) (8596 . 8601) (8592 . 8596) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8592) (undo-tree-id334 . -1) 8593 (8588 . 8593) (8579 . 8588) 8542) nil (25314 18064 816156 453000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t ws-butler-chg chg)) . -8628) (undo-tree-id330 . -1) (undo-tree-id331 . -1) 8629 (8616 . 8629) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8616) (undo-tree-id332 . -1) (undo-tree-id333 . -1) 8617 (8616 . 8617) (8615 . 8616) (8611 . 8615) (8602 . 8611) 8601) nil (25314 18064 816152 518000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8610 . 8611) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -8634) (8602 . 8635) 8601) nil (25314 18064 816145 974000) 0 nil])
([nil nil ((#("        Queue *q = &mic_que[i];
" 0 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg rear-nonsticky t) 8 9 (fontified t ws-butler-chg chg face font-lock-type-face) 9 10 (fontified t ws-butler-chg chg face font-lock-type-face) 10 11 (fontified t ws-butler-chg chg face font-lock-type-face) 11 12 (fontified t ws-butler-chg chg face font-lock-type-face) 12 13 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 16 17 (fontified t ws-butler-chg chg) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg) 20 24 (fontified t ws-butler-chg chg) 24 25 (fontified t ws-butler-chg chg) 25 26 (fontified t ws-butler-chg chg) 26 27 (fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg chg) 28 29 (fontified t ws-butler-chg chg) 29 30 (fontified t ws-butler-chg chg) 30 31 (fontified t ws-butler-chg chg) 31 32 (fontified t ws-butler-chg delete)) . 8603) (undo-tree-id325 . -31) (undo-tree-id326 . -31) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) 8611) nil (25314 18064 816144 127000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified nil)) . -8611) (undo-tree-id324 . -1) (8579 . 8612) 8550) nil (25314 18064 816137 407000) 0 nil])
([nil nil ((8708 . 8709) (8703 . 8708) (8695 . 8703) (8694 . 8695) (8689 . 8694) (8688 . 8689) (8685 . 8688) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8685) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8686) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (#(")" 0 1 (ws-butler-chg chg fontified t)) . -8687) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . 1) (undo-tree-id301 . -1) 8688 (8687 . 8688) (8684 . 8687) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8684) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8685) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#("j" 0 1 (ws-butler-chg chg fontified t)) . -8686) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (#(")" 0 1 (ws-butler-chg chg fontified t)) . -8687) (undo-tree-id311 . -1) (undo-tree-id312 . 1) (undo-tree-id313 . -1) 8688 (8687 . 8688) (8684 . 8687) (#("j" 0 1 (ws-butler-chg chg fontified t)) . -8684) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8685) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8686) (undo-tree-id318 . -1) (undo-tree-id319 . -1) 8687 (8683 . 8687) (8682 . 8683) (8674 . 8682) (8671 . 8674) (#("<" 0 1 (ws-butler-chg chg fontified t)) . -8671) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8672) (undo-tree-id322 . -1) (undo-tree-id323 . -1) 8673 (8668 . 8673) (8667 . 8668) (8660 . 8667)) nil (25314 18064 816130 257000) 0 nil])
([nil nil ((8737 . 8738) (8724 . 8737) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -8724) (undo-tree-id284 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8725) (undo-tree-id285 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -8726) (undo-tree-id286 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -8727) (undo-tree-id287 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8728) (undo-tree-id288 . -1) (#("|" 0 1 (fontified t ws-butler-chg chg)) . -8729) (undo-tree-id289 . -1) (#("|" 0 1 (fontified t ws-butler-chg chg)) . -8730) (undo-tree-id290 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8731) (undo-tree-id291 . -1) 8732 (8727 . 8732) (8726 . 8727) (8724 . 8726) (#("|" 0 1 (fontified t ws-butler-chg chg)) . -8724) (undo-tree-id292 . -1) 8725 (8722 . 8725) (8709 . 8722) 8708) nil (25314 18064 816082 165000) 0 nil])
([nil nil ((8761 . 8762) (8747 . 8761) (8738 . 8747) (t 25314 18064 826056 995000) 8737) nil (25314 18083 496838 392000) 0 nil])
([nil nil ((8724 . 8725) (#("|" 0 1 (fontified t)) . 8724) (t 25314 18083 504214 214000)) nil (25314 18177 652698 568000) 0 nil])
([nil nil ((8632 . 8633) (#("0" 0 1 (fontified t)) . 8632)) nil (25314 18177 652692 148000) 0 nil])
([nil nil ((9263 . 9264) (9261 . 9263) (9259 . 9261) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -9259) (undo-tree-id340 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -9260) (undo-tree-id341 . -1) 9261 (9245 . 9261) (9236 . 9245) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 9236) (undo-tree-id342 . -8) 9244 (9235 . 9244) (t 25314 18177 659006 737000) 9234) nil (25314 18422 847652 644000) 0 nil])
([nil nil ((9259 . 9260) (9257 . 9259) (9254 . 9257) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -9254) (undo-tree-id343 . -1) (undo-tree-id344 . -1) 9255 (9250 . 9255) (9249 . 9250) (9242 . 9249) (9241 . 9242) (9233 . 9241) (9232 . 9233) (9229 . 9232) (9225 . 9229) (9224 . 9225) (9221 . 9224) (#("s" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -9221) (undo-tree-id345 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -9222) (undo-tree-id346 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -9223) (undo-tree-id347 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -9224) (undo-tree-id348 . -1) 9225 (9224 . 9225) (9218 . 9224) (9209 . 9218) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 9209) (undo-tree-id349 . -8) 9217 (9208 . 9217) (t 25314 18422 854070 605000) 9192) nil (25314 18470 133197 718000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2264 . 2265) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -2284) (undo-tree-id350 . -1) (2264 . 2285) 2245 (t 25314 18470 139468 616000)) nil (25314 18495 152010 786000) 0 nil])
([nil nil ((2277 . 2280) (#("ftr" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 2 3 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 2277)) nil (25314 18495 151993 592000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified nil)) . 8818) (undo-tree-id410 . -4) (8822 . 8823) (8817 . 8822) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 8816) (undo-tree-id411 . -4) (8820 . 8821) (8815 . 8820) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8815) (undo-tree-id412 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -8816) (undo-tree-id413 . -1) 8817 (8816 . 8817) (8815 . 8816) (8813 . 8815) (8810 . 8813) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8810) (undo-tree-id414 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -8811) (undo-tree-id415 . -1) 8812 (8792 . 8812) (8791 . 8792) (8790 . 8791) (t 25314 18495 157679 204000) 8789) nil (25314 18668 960557 392000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -8827) (undo-tree-id399 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -8828) (undo-tree-id400 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -8829) (undo-tree-id401 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8830) (undo-tree-id402 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -8831) (undo-tree-id403 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8832) (undo-tree-id404 . -1) (#("=" 0 1 (ws-butler-chg chg fontified t)) . -8833) (undo-tree-id405 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8834) (undo-tree-id406 . -1) (#("0" 0 1 (ws-butler-chg chg fontified t)) . -8835) (undo-tree-id407 . -1) (#(";" 0 1 (ws-butler-chg chg fontified t)) . -8836) (undo-tree-id408 . -1) 8837 (8836 . 8837) (8827 . 8836) (8826 . 8827) (8822 . 8826) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8822) (undo-tree-id409 . -1) 8823 (8822 . 8823) (8817 . 8822) 8816) nil (25314 18668 960541 868000) 0 nil])
([nil nil ((9202 . 9209) (#("int" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) . 9202)) nil (25314 18668 960529 734000) 0 nil])
([nil nil ((8882 . 8892) (8866 . 8882) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -8866) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -8867) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -8868) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8869) (undo-tree-id397 . -1) (undo-tree-id398 . -1) 8870 (8866 . 8870) (8865 . 8866) (8862 . 8865) (8853 . 8862) (8852 . 8853) (8848 . 8852) (8847 . 8848) (8842 . 8847) (8841 . 8842) (8840 . 8841) (8827 . 8840)) nil (25314 18668 960526 730000) 0 nil])
([nil nil ((nil fontified nil 9384 . 9385) (nil fontified nil 9383 . 9384) (nil fontified nil 9382 . 9383) (nil fontified nil 9381 . 9382) (nil fontified nil 9380 . 9381) (nil fontified nil 9379 . 9380) (nil fontified nil 9378 . 9379) (#("mic_ftr" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil)) . 9378) (9385 . 9392) (nil fontified t 9368 . 9369) (nil fontified t 9367 . 9368) (nil fontified t 9366 . 9367) (nil fontified t 9365 . 9366) (nil fontified t 9364 . 9365) (nil fontified t 9363 . 9364) (nil fontified t 9362 . 9363) (#("mic_ftr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 9362) (9369 . 9376) (nil fontified t 8891 . 8892) (nil ws-butler-chg chg 8891 . 8892) (nil fontified t 8890 . 8891) (nil ws-butler-chg chg 8890 . 8891) (nil fontified t 8889 . 8890) (nil ws-butler-chg chg 8889 . 8890) (nil fontified t 8888 . 8889) (nil ws-butler-chg chg 8888 . 8889) (nil fontified t 8887 . 8888) (nil ws-butler-chg chg 8887 . 8888) (nil fontified t 8886 . 8887) (nil ws-butler-chg chg 8886 . 8887) (nil fontified t 8885 . 8886) (nil ws-butler-chg chg 8885 . 8886) (#("mic_ftr" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg)) . 8885) (8892 . 8899) (nil fontified t 8773 . 8774) (nil fontified t 8772 . 8773) (nil fontified t 8771 . 8772) (nil fontified t 8770 . 8771) (nil fontified t 8769 . 8770) (nil fontified t 8768 . 8769) (nil fontified t 8767 . 8768) (#("mic_ftr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 8767) (8774 . 8781) (nil fontified t 2259 . 2260) (nil face font-lock-variable-name-face 2259 . 2260) (nil fontified t 2258 . 2259) (nil face font-lock-variable-name-face 2258 . 2259) (nil fontified t 2257 . 2258) (nil face font-lock-variable-name-face 2257 . 2258) (nil fontified t 2256 . 2257) (nil face font-lock-variable-name-face 2256 . 2257) (nil fontified t 2255 . 2256) (nil face font-lock-variable-name-face 2255 . 2256) (nil fontified t 2254 . 2255) (nil face font-lock-variable-name-face 2254 . 2255) (nil fontified t 2253 . 2254) (nil face font-lock-variable-name-face 2253 . 2254) (#("mic_ftr" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t face font-lock-variable-name-face)) . 2253) (2260 . 2267)) nil (25314 18668 960505 469000) 0 nil])
([nil nil ((8901 . 8909) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 8901) (undo-tree-id384 . -12) (undo-tree-id385 . -12) (undo-tree-id386 . -12) (8913 . 8914) (#("]" 0 1 (ws-butler-chg chg fontified t)) . -8913) (undo-tree-id387 . -1) (undo-tree-id388 . 1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) 8914 (8913 . 8914) (8900 . 8913) (8899 . 8900) (8898 . 8899) (8897 . 8898) (8893 . 8897) (8892 . 8893)) nil (25314 18668 960483 203000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -8913) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8914) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -8915) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8916) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -8917) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8918) (undo-tree-id382 . -1) 8919 (8915 . 8919) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8915) (undo-tree-id383 . -1) 8916 (8913 . 8916) (8900 . 8913) 8862) nil (25314 18668 960432 114000) 0 nil])
([nil nil ((2305 . 2306) (2299 . 2305) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2299) (undo-tree-id354 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2300) (undo-tree-id355 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2301) (undo-tree-id356 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2302) (undo-tree-id357 . -1) 2303 (2294 . 2303) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2294) (undo-tree-id358 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2295) (undo-tree-id359 . -1) 2296 (2294 . 2296) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2294) (undo-tree-id360 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2295) (undo-tree-id361 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2296) (undo-tree-id362 . -1) 2297 (2285 . 2297) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2285) (undo-tree-id363 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2286) (undo-tree-id364 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -2287) (undo-tree-id365 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2288) (undo-tree-id366 . -1) 2289 (2285 . 2289) (2284 . 2285) 2276) nil (25314 18668 960397 930000) 0 nil])
([nil nil ((#("            " 0 12 (ws-butler-chg chg)) . 8923) (undo-tree-id351 . -11) (undo-tree-id352 . -11) (undo-tree-id353 . -11)) nil (25314 18668 960368 734000) 0 nil])
([nil nil ((8952 . 8954) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8952) (undo-tree-id416 . -1) 8953 (8949 . 8953) (#("]" 0 1 (fontified t ws-butler-chg chg)) . -8949) (undo-tree-id417 . -1) (undo-tree-id418 . 1) (undo-tree-id419 . -1) 8950 (8948 . 8950) (8935 . 8948) (#("mic_time" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg)) . -8935) (undo-tree-id420 . -8) 8943 (8935 . 8943) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8935) (undo-tree-id421 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8936) (undo-tree-id422 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -8937) (undo-tree-id423 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8938) (undo-tree-id424 . -1) 8939 (8935 . 8939) (8923 . 8935) (8923 . 8924) (#("
" 0 1 (fontified t)) . 8923) (t 25314 18668 974142 252000)) nil (25314 18956 205746 697000) 0 nil])
([nil nil ((2293 . 2297) (#("timestamp" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face)) . 2293)) nil (25314 18956 205723 612000) 0 nil])
([nil nil ((#("timestamp" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t) 2 3 (face font-lock-function-name-face fontified t) 3 4 (face font-lock-function-name-face fontified t) 4 5 (face font-lock-function-name-face fontified t) 5 6 (fontified t face font-lock-function-name-face) 6 7 (fontified t face font-lock-function-name-face) 7 8 (fontified t face font-lock-function-name-face) 8 9 (fontified t face font-lock-function-name-face)) . 8821)) nil (25314 18956 205721 457000) 0 nil])
([nil nil ((nil ws-butler-chg delete 8830 . 8831) (8821 . 8830)) nil (25314 18956 205719 666000) 0 nil])
([nil nil ((8934 . 8938) (#("timestamp" 0 9 (ws-butler-chg chg fontified t)) . 8934)) nil (25314 18956 205716 704000) 0 nil])
([nil nil ((8944 . 8949)) nil (25314 18956 205713 517000) 0 nil])
([nil nil ((8954 . 8955) (8949 . 8954)) nil (25314 18956 205706 601000) 0 nil])
([nil nil ((9019 . 9020) (nil syntax-table nil 9019 . 9020) (nil syntax-table (1) 9017 . 9018) (9018 . 9019) (nil syntax-table nil 9018 . 9019) (nil syntax-table (1) 9017 . 9018) (9017 . 9018) (9016 . 9017) (9010 . 9016) (9001 . 9010) (9000 . 9001) (8996 . 9000) (8995 . 8996) (8992 . 8995) (8989 . 8992) (8988 . 8989) (8975 . 8988) (8974 . 8975) (8970 . 8974) (8965 . 8970) (t 25314 18956 212560 14000) 8964) nil (25314 20282 455592 824000) 0 nil])
([nil nil ((9003 . 9004) (nil syntax-table nil 9055 . 9056) (nil syntax-table (15) 9058 . 9059) (nil syntax-table (15) 9055 . 9056) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9055 . 9056) (9002 . 9003) (nil syntax-table nil 9054 . 9055) (nil syntax-table (15) 9057 . 9058) (nil syntax-table (15) 9054 . 9055) (nil syntax-table nil 9057 . 9058) (nil syntax-table (1) 9054 . 9055) (9001 . 9002) (nil syntax-table nil 9053 . 9054) (nil syntax-table (15) 9056 . 9057) (nil syntax-table (15) 9053 . 9054) (nil syntax-table nil 9056 . 9057) (nil syntax-table (1) 9053 . 9054) (9000 . 9001) (nil syntax-table nil 9052 . 9053) (nil syntax-table (15) 9055 . 9056) (nil syntax-table (15) 9052 . 9053) (nil syntax-table nil 9055 . 9056) (nil syntax-table (1) 9052 . 9053) (8999 . 9000) (nil syntax-table nil 9051 . 9052) (nil syntax-table (15) 9054 . 9055) (nil syntax-table (15) 9051 . 9052) (nil syntax-table nil 9054 . 9055) (nil syntax-table (1) 9051 . 9052) (8998 . 8999) (nil syntax-table nil 9050 . 9051) (nil syntax-table (15) 9053 . 9054) (nil syntax-table (15) 9050 . 9051) (nil syntax-table nil 9053 . 9054) (nil syntax-table (1) 9050 . 9051) (8997 . 8998) (nil syntax-table nil 9049 . 9050) (nil syntax-table (15) 9052 . 9053) (nil syntax-table (15) 9049 . 9050) (nil syntax-table nil 9052 . 9053) (nil syntax-table (1) 9049 . 9050) (8996 . 8997) (nil syntax-table nil 9048 . 9049) (nil syntax-table (15) 9051 . 9052) (nil syntax-table (15) 9048 . 9049) (nil syntax-table nil 9051 . 9052) (nil syntax-table (1) 9048 . 9049) (#("k" 0 1 (fontified t ws-butler-chg chg)) . -8996) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (nil syntax-table nil 9049 . 9050) (nil syntax-table (15) 9052 . 9053) (nil syntax-table (15) 9049 . 9050) (nil syntax-table nil 9052 . 9053) (nil syntax-table (1) 9049 . 9050) (8996 . 8997) (nil syntax-table nil 9048 . 9049) (nil syntax-table (15) 9051 . 9052) (nil syntax-table (15) 9048 . 9049) (nil syntax-table nil 9051 . 9052) (nil syntax-table (1) 9048 . 9049) (8995 . 8996) (nil syntax-table nil 9047 . 9048) (nil syntax-table (15) 9050 . 9051) (nil syntax-table (15) 9047 . 9048) (nil syntax-table nil 9050 . 9051) (nil syntax-table (1) 9047 . 9048) (8994 . 8995) (nil syntax-table nil 9046 . 9047) (nil syntax-table (15) 9049 . 9050) (nil syntax-table (15) 9046 . 9047) (nil syntax-table nil 9049 . 9050) (nil syntax-table (1) 9046 . 9047) (8993 . 8994) (nil syntax-table nil 9045 . 9046) (nil syntax-table (15) 9048 . 9049) (nil syntax-table (15) 9045 . 9046) (nil syntax-table nil 9048 . 9049) (nil syntax-table (1) 9045 . 9046) (8992 . 8993) (nil syntax-table nil 9044 . 9045) (nil syntax-table (15) 9047 . 9048) (nil syntax-table (15) 9044 . 9045) (nil syntax-table nil 9047 . 9048) (nil syntax-table (1) 9044 . 9045) (8991 . 8992) (nil syntax-table nil 9043 . 9044) (nil syntax-table (15) 9046 . 9047) (nil syntax-table (15) 9043 . 9044) (nil syntax-table nil 9046 . 9047) (nil syntax-table nil 9043 . 9044) (nil syntax-table nil 8991 . 8992) (nil syntax-table nil 8977 . 8978) (8990 . 8991) (nil syntax-table nil 9042 . 9043) (nil syntax-table (15) 9045 . 9046) (nil syntax-table (15) 9042 . 9043) (nil syntax-table nil 9045 . 9046) (nil syntax-table nil 9042 . 9043) (nil syntax-table nil 9026 . 9027) (nil syntax-table nil 8977 . 8978) (8989 . 8990) (nil syntax-table nil 9041 . 9042) (nil syntax-table (15) 9044 . 9045) (nil syntax-table (15) 9041 . 9042) (nil syntax-table nil 9044 . 9045) (nil syntax-table nil 9041 . 9042) (nil syntax-table nil 8989 . 8990) (nil syntax-table nil 8977 . 8978) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8989) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (nil syntax-table nil 9042 . 9043) (nil syntax-table (15) 9045 . 9046) (nil syntax-table (15) 9042 . 9043) (nil syntax-table nil 9045 . 9046) (nil syntax-table (1) 9042 . 9043) (8989 . 8990) (nil syntax-table nil 9041 . 9042) (nil syntax-table (15) 9044 . 9045) (nil syntax-table (15) 9041 . 9042) (nil syntax-table nil 9044 . 9045) (nil syntax-table nil 9041 . 9042) (nil syntax-table nil 8989 . 8990) (nil syntax-table nil 8977 . 8978) (8988 . 8989) (nil syntax-table nil 9040 . 9041) (nil syntax-table (15) 9043 . 9044) (nil syntax-table (15) 9040 . 9041) (nil syntax-table nil 9043 . 9044) (nil syntax-table nil 9040 . 9041) (nil syntax-table nil 8988 . 8989) (nil syntax-table nil 8977 . 8978) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8988) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (nil syntax-table nil 9041 . 9042) (nil syntax-table (15) 9044 . 9045) (nil syntax-table (15) 9041 . 9042) (nil syntax-table nil 9044 . 9045) (nil syntax-table nil 9041 . 9042) (nil syntax-table nil 8989 . 8990) (nil syntax-table nil 8977 . 8978) (8988 . 8989) (nil syntax-table nil 9040 . 9041) (nil syntax-table (15) 9043 . 9044) (nil syntax-table (15) 9040 . 9041) (nil syntax-table nil 9043 . 9044) (nil syntax-table nil 9040 . 9041) (nil syntax-table nil 8988 . 8989) (nil syntax-table nil 8977 . 8978) (8987 . 8988) (nil syntax-table nil 9039 . 9040) (nil syntax-table (15) 9042 . 9043) (nil syntax-table (15) 9039 . 9040) (nil syntax-table nil 9042 . 9043) (nil syntax-table nil 9039 . 9040) (nil syntax-table nil 8987 . 8988) (nil syntax-table nil 8977 . 8978) (8986 . 8987) (nil syntax-table nil 9038 . 9039) (nil syntax-table (15) 9041 . 9042) (nil syntax-table (15) 9038 . 9039) (nil syntax-table nil 9041 . 9042) (nil syntax-table nil 9038 . 9039) (nil syntax-table nil 8986 . 8987) (nil syntax-table nil 8977 . 8978) (8985 . 8986) (nil syntax-table nil 9037 . 9038) (nil syntax-table (15) 9040 . 9041) (nil syntax-table (15) 9037 . 9038) (nil syntax-table nil 9040 . 9041) (nil syntax-table nil 9037 . 9038) (nil syntax-table nil 8985 . 8986) (nil syntax-table nil 8977 . 8978) (8984 . 8985) (nil syntax-table nil 9036 . 9037) (nil syntax-table (15) 9039 . 9040) (nil syntax-table (15) 9036 . 9037) (nil syntax-table nil 9039 . 9040) (nil syntax-table nil 9036 . 9037) (nil syntax-table nil 8984 . 8985) (nil syntax-table nil 8977 . 8978) (8983 . 8984) (nil syntax-table nil 9035 . 9036) (nil syntax-table (15) 9038 . 9039) (nil syntax-table (15) 9035 . 9036) (nil syntax-table nil 9038 . 9039) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 8983 . 8984) (nil syntax-table nil 8977 . 8978) (8982 . 8983) (nil syntax-table nil 9034 . 9035) (nil syntax-table (15) 9037 . 9038) (nil syntax-table (15) 9034 . 9035) (nil syntax-table nil 9037 . 9038) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 8982 . 8983) (nil syntax-table nil 8977 . 8978) (8981 . 8982) (nil syntax-table nil 9033 . 9034) (nil syntax-table (15) 9036 . 9037) (nil syntax-table (15) 9033 . 9034) (nil syntax-table nil 9036 . 9037) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 8981 . 8982) (nil syntax-table nil 8977 . 8978) (8980 . 8981) (nil syntax-table nil 9032 . 9033) (nil syntax-table (15) 9035 . 9036) (nil syntax-table (15) 9032 . 9033) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 9032 . 9033) (nil syntax-table nil 8980 . 8981) (nil syntax-table nil 8977 . 8978) (8979 . 8980) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (8978 . 8979) (nil syntax-table nil 9030 . 9031) (nil syntax-table (15) 9033 . 9034) (nil syntax-table (15) 9030 . 9031) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 9030 . 9031) (nil syntax-table nil 8978 . 8979) (nil syntax-table nil 8977 . 8978) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8978) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8979) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (nil syntax-table nil 9032 . 9033) (nil syntax-table (15) 9035 . 9036) (nil syntax-table (15) 9032 . 9033) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 9032 . 9033) (nil syntax-table nil 8980 . 8981) (nil syntax-table nil 8977 . 8978) (8979 . 8980) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (8978 . 8979) (nil syntax-table nil 9030 . 9031) (nil syntax-table (15) 9033 . 9034) (nil syntax-table (15) 9030 . 9031) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 9030 . 9031) (nil syntax-table nil 8978 . 8979) (nil syntax-table nil 8977 . 8978) (#("%" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8978) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8979) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (nil syntax-table nil 9032 . 9033) (nil syntax-table (15) 9035 . 9036) (nil syntax-table (15) 9032 . 9033) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 9032 . 9033) (nil syntax-table nil 8980 . 8981) (nil syntax-table nil 8977 . 8978) (#("\\" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face c-is-sws t)) . -8980) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (nil syntax-table nil 9033 . 9034) (nil syntax-table (15) 9036 . 9037) (nil syntax-table (15) 9033 . 9034) (nil syntax-table nil 9036 . 9037) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 9017 . 9018) (nil syntax-table nil 8977 . 8978) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8981) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (nil syntax-table nil 9034 . 9035) (nil syntax-table (15) 9037 . 9038) (nil syntax-table (15) 9034 . 9035) (nil syntax-table nil 9037 . 9038) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 8982 . 8983) (nil syntax-table nil 8977 . 8978) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8982) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (nil syntax-table nil 9035 . 9036) (nil syntax-table (15) 9038 . 9039) (nil syntax-table (15) 9035 . 9036) (nil syntax-table nil 9038 . 9039) (nil syntax-table (1) 9035 . 9036) (8982 . 8983) (nil syntax-table nil 9034 . 9035) (nil syntax-table (15) 9037 . 9038) (nil syntax-table (15) 9034 . 9035) (nil syntax-table nil 9037 . 9038) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 8982 . 8983) (nil syntax-table nil 8977 . 8978) (8981 . 8982) (nil syntax-table nil 9033 . 9034) (nil syntax-table (15) 9036 . 9037) (nil syntax-table (15) 9033 . 9034) (nil syntax-table nil 9036 . 9037) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 9017 . 9018) (nil syntax-table nil 8977 . 8978) (8980 . 8981) (nil syntax-table nil 9032 . 9033) (nil syntax-table (15) 9035 . 9036) (nil syntax-table (15) 9032 . 9033) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 9032 . 9033) (nil syntax-table nil 8980 . 8981) (nil syntax-table nil 8977 . 8978) (8979 . 8980) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -8979) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (nil syntax-table nil 9032 . 9033) (nil syntax-table (15) 9035 . 9036) (nil syntax-table (15) 9032 . 9033) (nil syntax-table nil 9035 . 9036) (nil syntax-table nil 9032 . 9033) (nil syntax-table nil 8980 . 8981) (nil syntax-table nil 8977 . 8978) (8979 . 8980) (nil syntax-table nil 9031 . 9032) (nil syntax-table (15) 9034 . 9035) (nil syntax-table (15) 9031 . 9032) (nil syntax-table nil 9034 . 9035) (nil syntax-table nil 9031 . 9032) (nil syntax-table nil 8979 . 8980) (nil syntax-table nil 8977 . 8978) (8978 . 8979) (nil syntax-table nil 9030 . 9031) (nil syntax-table (15) 9033 . 9034) (nil syntax-table (15) 9030 . 9031) (nil syntax-table nil 9033 . 9034) (nil syntax-table nil 9030 . 9031) (nil syntax-table nil 8978 . 8979) (nil syntax-table nil 8977 . 8978) (8977 . 8978) (nil syntax-table nil 9029 . 9030) (nil syntax-table (15) 9032 . 9033) (nil syntax-table (15) 9029 . 9030) (nil syntax-table nil 9032 . 9033) (nil syntax-table (1) 9029 . 9030) (8976 . 8977) (nil syntax-table nil 9028 . 9029) (nil syntax-table (15) 9031 . 9032) (nil syntax-table (15) 9028 . 9029) (nil syntax-table nil 9031 . 9032) (nil syntax-table (1) 9028 . 9029) (8975 . 8976) (nil syntax-table nil 9027 . 9028) (nil syntax-table (15) 9030 . 9031) (nil syntax-table (15) 9027 . 9028) (nil syntax-table nil 9030 . 9031) (nil syntax-table (1) 9027 . 9028) (8974 . 8975) (nil syntax-table nil 9026 . 9027) (nil syntax-table (15) 9029 . 9030) (nil syntax-table (15) 9026 . 9027) (nil syntax-table nil 9029 . 9030) (nil syntax-table (1) 9026 . 9027) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -8974) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (nil syntax-table nil 9027 . 9028) (nil syntax-table (15) 9030 . 9031) (nil syntax-table (15) 9027 . 9028) (nil syntax-table nil 9030 . 9031) (nil syntax-table (1) 9027 . 9028) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8975) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (nil syntax-table nil 9028 . 9029) (nil syntax-table (15) 9031 . 9032) (nil syntax-table (15) 9028 . 9029) (nil syntax-table nil 9031 . 9032) (nil syntax-table (1) 9028 . 9029) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -8976) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (nil syntax-table nil 9029 . 9030) (nil syntax-table (15) 9032 . 9033) (nil syntax-table (15) 9029 . 9030) (nil syntax-table nil 9032 . 9033) (nil syntax-table (1) 9029 . 9030) (8976 . 8977) (nil syntax-table nil 9028 . 9029) (nil syntax-table (15) 9031 . 9032) (nil syntax-table (15) 9028 . 9029) (nil syntax-table nil 9031 . 9032) (nil syntax-table (1) 9028 . 9029) (8975 . 8976) (nil syntax-table nil 9027 . 9028) (nil syntax-table (15) 9030 . 9031) (nil syntax-table (15) 9027 . 9028) (nil syntax-table nil 9030 . 9031) (nil syntax-table (1) 9027 . 9028) (8974 . 8975) (nil syntax-table nil 9026 . 9027) (nil syntax-table (15) 9029 . 9030) (nil syntax-table (15) 9026 . 9027) (nil syntax-table nil 9029 . 9030) (nil syntax-table (1) 9026 . 9027) (8973 . 8974) (nil syntax-table nil 9025 . 9026) (nil syntax-table (15) 9028 . 9029) (nil syntax-table (15) 9025 . 9026) (nil syntax-table nil 9028 . 9029) (nil syntax-table (1) 9025 . 9026) (8972 . 8973) (nil syntax-table nil 9024 . 9025) (nil syntax-table (15) 9027 . 9028) (nil syntax-table (15) 9024 . 9025) (nil syntax-table nil 9027 . 9028) (nil syntax-table (1) 9024 . 9025) (8971 . 8972) (nil syntax-table nil 9023 . 9024) (nil syntax-table (15) 9026 . 9027) (nil syntax-table (15) 9023 . 9024) (nil syntax-table nil 9026 . 9027) (nil syntax-table (1) 9023 . 9024) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8971) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (nil syntax-table nil 9024 . 9025) (nil syntax-table (15) 9027 . 9028) (nil syntax-table (15) 9024 . 9025) (nil syntax-table nil 9027 . 9028) (nil syntax-table (1) 9024 . 9025) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -8972) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (nil syntax-table nil 9025 . 9026) (nil syntax-table (15) 9028 . 9029) (nil syntax-table (15) 9025 . 9026) (nil syntax-table nil 9028 . 9029) (nil syntax-table (1) 9025 . 9026) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -8973) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (nil syntax-table nil 9026 . 9027) (nil syntax-table (15) 9029 . 9030) (nil syntax-table (15) 9026 . 9027) (nil syntax-table nil 9029 . 9030) (nil syntax-table (1) 9026 . 9027) (8973 . 8974) (nil syntax-table nil 9025 . 9026) (nil syntax-table (15) 9028 . 9029) (nil syntax-table (15) 9025 . 9026) (nil syntax-table nil 9028 . 9029) (nil syntax-table (1) 9025 . 9026) (8972 . 8973) (nil syntax-table nil 9024 . 9025) (nil syntax-table (15) 9027 . 9028) (nil syntax-table (15) 9024 . 9025) (nil syntax-table nil 9027 . 9028) (nil syntax-table (1) 9024 . 9025) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -8972) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (nil syntax-table nil 9025 . 9026) (nil syntax-table (15) 9028 . 9029) (nil syntax-table (15) 9025 . 9026) (nil syntax-table nil 9028 . 9029) (nil syntax-table (1) 9025 . 9026) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8973) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (nil syntax-table nil 9026 . 9027) (nil syntax-table (15) 9029 . 9030) (nil syntax-table (15) 9026 . 9027) (nil syntax-table nil 9029 . 9030) (nil syntax-table (1) 9026 . 9027) (8973 . 8974) (nil syntax-table nil 9025 . 9026) (nil syntax-table (15) 9028 . 9029) (nil syntax-table (15) 9025 . 9026) (nil syntax-table nil 9028 . 9029) (nil syntax-table (1) 9025 . 9026) (8972 . 8973) (nil syntax-table nil 9024 . 9025) (nil syntax-table (15) 9027 . 9028) (nil syntax-table (15) 9024 . 9025) (nil syntax-table nil 9027 . 9028) (nil syntax-table (1) 9024 . 9025) (8971 . 8972) (nil syntax-table nil 9023 . 9024) (nil syntax-table (15) 9026 . 9027) (nil syntax-table (15) 9023 . 9024) (nil syntax-table nil 9026 . 9027) (nil syntax-table (1) 9023 . 9024) (8970 . 8971) (nil syntax-table nil 9022 . 9023) (nil syntax-table (15) 9025 . 9026) (nil syntax-table (15) 9022 . 9023) (nil syntax-table nil 9025 . 9026) (nil syntax-table (1) 9022 . 9023) (8966 . 8970) (nil syntax-table nil 9018 . 9019) (nil syntax-table (15) 9021 . 9022) (nil syntax-table (15) 9018 . 9019) (nil syntax-table nil 9021 . 9022) (nil syntax-table (1) 9018 . 9019) (8965 . 8966) (nil syntax-table nil 9017 . 9018) (nil syntax-table (15) 9020 . 9021) (nil syntax-table (15) 9017 . 9018) (nil syntax-table nil 9020 . 9021) (nil syntax-table (1) 9017 . 9018) 8964) nil (25314 20282 455559 161000) 0 nil])
([nil nil ((9068 . 9069) (nil syntax-table nil 9068 . 9069) (nil syntax-table (1) 9056 . 9057) (9067 . 9068) (nil syntax-table nil 9067 . 9068) (nil syntax-table (1) 9056 . 9057) (9066 . 9067) (nil syntax-table nil 9066 . 9067) (nil syntax-table (1) 9056 . 9057) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9066) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (nil syntax-table nil 9067 . 9068) (nil syntax-table (1) 9056 . 9057) (9066 . 9067) (nil syntax-table nil 9066 . 9067) (nil syntax-table (1) 9056 . 9057) (9065 . 9066) (nil syntax-table nil 9065 . 9066) (nil syntax-table (1) 9056 . 9057) (9064 . 9065) (nil syntax-table nil 9064 . 9065) (nil syntax-table (1) 9056 . 9057) (9063 . 9064) (nil syntax-table nil 9063 . 9064) (nil syntax-table (1) 9056 . 9057) (9062 . 9063) (nil syntax-table nil 9062 . 9063) (nil syntax-table (1) 9056 . 9057) (9061 . 9062) (nil syntax-table nil 9061 . 9062) (nil syntax-table (1) 9056 . 9057) (9060 . 9061) (nil syntax-table nil 9060 . 9061) (nil syntax-table (1) 9056 . 9057) (9059 . 9060) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057) (9058 . 9059) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9056 . 9057) (9057 . 9058) (nil syntax-table nil 9057 . 9058) (nil syntax-table (1) 9056 . 9057) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9057) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9056 . 9057) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9058) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9059) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (nil syntax-table nil 9060 . 9061) (nil syntax-table (1) 9056 . 9057) (#("k" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9060) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (nil syntax-table nil 9061 . 9062) (nil syntax-table (1) 9056 . 9057) (9060 . 9061) (nil syntax-table nil 9060 . 9061) (nil syntax-table (1) 9056 . 9057) (9059 . 9060) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057) (9058 . 9059) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9056 . 9057) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9058) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9059) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (nil syntax-table nil 9060 . 9061) (nil syntax-table (1) 9056 . 9057) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9060) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (nil syntax-table nil 9061 . 9062) (nil syntax-table (1) 9056 . 9057) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9061) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (nil syntax-table nil 9062 . 9063) (nil syntax-table (1) 9056 . 9057) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9062) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (nil syntax-table nil 9063 . 9064) (nil syntax-table (1) 9056 . 9057) (9062 . 9063) (nil syntax-table nil 9062 . 9063) (nil syntax-table (1) 9056 . 9057) (9061 . 9062) (nil syntax-table nil 9061 . 9062) (nil syntax-table (1) 9056 . 9057) (9060 . 9061) (nil syntax-table nil 9060 . 9061) (nil syntax-table (1) 9056 . 9057) (9059 . 9060) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057) (9058 . 9059) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9056 . 9057) (9057 . 9058) (nil syntax-table nil 9057 . 9058) (nil syntax-table (1) 9056 . 9057) (#("%" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9057) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (nil syntax-table nil 9058 . 9059) (nil syntax-table (1) 9056 . 9057) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9058) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (nil syntax-table nil 9059 . 9060) (nil syntax-table (1) 9056 . 9057)) nil (25314 20282 455379 411000) 0 nil])
([nil nil ((#("_" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . 9019) (nil syntax-table nil 9056 . 9057) (nil syntax-table (15) 9069 . 9070) (nil syntax-table (15) 9056 . 9057) (nil syntax-table nil 9069 . 9070) (nil syntax-table (1) 9056 . 9057)) nil (25314 20282 455330 122000) 0 nil])
([nil nil ((9016 . 9017) (nil syntax-table nil 9051 . 9052) (nil syntax-table (15) 9064 . 9065) (nil syntax-table (15) 9051 . 9052) (nil syntax-table nil 9064 . 9065) (nil syntax-table (1) 9051 . 9052) (9015 . 9016) (nil syntax-table nil 9050 . 9051) (nil syntax-table (15) 9063 . 9064) (nil syntax-table (15) 9050 . 9051) (nil syntax-table nil 9063 . 9064) (nil syntax-table (1) 9050 . 9051) (9014 . 9015) (nil syntax-table nil 9049 . 9050) (nil syntax-table (15) 9062 . 9063) (nil syntax-table (15) 9049 . 9050) (nil syntax-table nil 9062 . 9063) (nil syntax-table (1) 9049 . 9050) (#("uint8t" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t face font-lock-type-face) 5 6 (ws-butler-chg delete fontified t c-type c-decl-id-start face font-lock-type-face)) . 9014) (undo-tree-id432 . 1) (undo-tree-id433 . -5) (undo-tree-id434 . -5) (nil syntax-table nil 9055 . 9056) (nil syntax-table (15) 9068 . 9069) (nil syntax-table (15) 9055 . 9056) (nil syntax-table nil 9068 . 9069) (nil syntax-table (1) 9055 . 9056)) nil (25314 20282 455322 330000) 0 nil])
([nil nil ((9090 . 9091) (9089 . 9090) (9086 . 9089) (9078 . 9086) (#("mic_" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t)) . -9078) (undo-tree-id426 . -4) (undo-tree-id427 . -4) 9082 (9077 . 9082) (9076 . 9077) (9074 . 9076) (9073 . 9074) (9072 . 9073) (nil syntax-table nil 9072 . 9073) (nil syntax-table (1) 9052 . 9053) (9071 . 9072) (nil syntax-table nil 9073 . 9074) (nil syntax-table (1) 9052 . 9053) (9070 . 9071) (nil syntax-table nil 9070 . 9071) (nil syntax-table (1) 9052 . 9053) (9069 . 9070) (nil syntax-table nil 9069 . 9070) (nil syntax-table (1) 9052 . 9053) (9068 . 9069) (nil syntax-table nil 9068 . 9069) (nil syntax-table (1) 9052 . 9053) (9067 . 9068) (nil syntax-table nil 9067 . 9068) (nil syntax-table (1) 9052 . 9053) (9066 . 9067) (nil syntax-table nil 9066 . 9067) (nil syntax-table (1) 9052 . 9053) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9066) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (nil syntax-table nil 9067 . 9068) (nil syntax-table (1) 9052 . 9053) (#("=" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9067) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (nil syntax-table nil 9068 . 9069) (nil syntax-table (1) 9052 . 9053) (9067 . 9068) (nil syntax-table nil 9067 . 9068) (nil syntax-table (1) 9052 . 9053) (9066 . 9067) (nil syntax-table nil 9066 . 9067) (nil syntax-table (1) 9052 . 9053) (9065 . 9066) (nil syntax-table nil 9065 . 9066) (nil syntax-table (1) 9052 . 9053)) nil (25314 20282 455002 731000) 0 nil])
([nil nil ((9108 . 9109) (9107 . 9108) (9106 . 9107) (nil syntax-table nil 9106 . 9107) (nil syntax-table (1) 9103 . 9104) (9105 . 9106) (nil syntax-table nil 9107 . 9108) (nil syntax-table (1) 9103 . 9104) (9104 . 9105) (nil syntax-table nil 9104 . 9105) (nil syntax-table (1) 9103 . 9104) (9103 . 9104) (9102 . 9103) (9097 . 9102) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -9097) (undo-tree-id425 . -1) 9098 (9096 . 9098) (9091 . 9096) 9090) nil (25314 20282 454941 955000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . -8966) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) 8970 (8965 . 8970) (t 25314 20282 744725 773000) 8964) nil (25314 20284 602004 366000) 0 nil])
([nil nil ((8974 . 8977) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8974) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8975) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8976) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8977) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8978) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8979) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8980) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8981) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8982) (undo-tree-id524 . -1) 8983 (8978 . 8983) (8973 . 8978) (8971 . 8973) (8966 . 8971) (t 25314 20284 609741 472000) 8966) nil (25314 20292 578498 705000) 0 nil])
([nil current ((8852 . 8853) (#("k" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -8852) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8853) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8854) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8855) (undo-tree-id534 . -1) 8856 (8849 . 8856) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -8849) (undo-tree-id535 . -1) 8850 (8849 . 8850) (8841 . 8849) (8839 . 8841) (8834 . 8839) (t 25314 20292 588808 633000) 8833) nil (25314 20303 77862 303000) 0 nil])
nil
