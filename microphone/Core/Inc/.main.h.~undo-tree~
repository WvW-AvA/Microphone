(undo-tree-save-format-version . 1)
"f8cbff415c8f58e6fa1a16d216d78b0dce74dac5"
[nil nil nil nil (25314 13500 24694 104000) 0 nil]
([nil nil ((2376 . 2594) (#("P1_Pin GPIO_PIN_0
#define MP1_GPIO_Port GPIOD
#define MP1_EXTI_IRQn EXTI0_IRQn
#define MP2_Pin GPIO_PIN_1
#define MP2_GPIO_Port GPIOD
#define MP2_EXTI_IRQn EXTI1_IRQn
#define MP3_Pin GPIO_PIN_2
#define MP3_GPIO_Port GPIOD
#define MP3_EXTI_IRQn EXTI2_IRQn
#define MP4_Pin GPIO_PIN_3
#define MP4_GPIO_Port GPIOD
#define MP4_EXTI_IRQn EXTI3_IRQn" 0 6 (fontified t face font-lock-variable-name-face) 6 18 (fontified t) 18 19 (fontified t face font-lock-preprocessor-face c-is-sws t) 19 25 (fontified t face font-lock-preprocessor-face) 25 26 (fontified t) 26 39 (fontified t face font-lock-variable-name-face) 39 46 (fontified t) 46 47 (fontified t face font-lock-preprocessor-face c-is-sws t) 47 53 (fontified t face font-lock-preprocessor-face) 53 54 (fontified t) 54 67 (fontified t face font-lock-variable-name-face) 67 79 (fontified t) 79 80 (fontified t face font-lock-preprocessor-face c-is-sws t) 80 86 (fontified t face font-lock-preprocessor-face) 86 87 (fontified t) 87 94 (fontified t face font-lock-variable-name-face) 94 106 (fontified t) 106 107 (fontified t face font-lock-preprocessor-face c-is-sws t) 107 113 (fontified t face font-lock-preprocessor-face) 113 114 (fontified t) 114 127 (fontified t face font-lock-variable-name-face) 127 134 (fontified t) 134 135 (fontified t face font-lock-preprocessor-face c-is-sws t) 135 141 (fontified t face font-lock-preprocessor-face) 141 142 (fontified t) 142 155 (fontified t face font-lock-variable-name-face) 155 167 (fontified t) 167 168 (fontified t face font-lock-preprocessor-face c-is-sws t) 168 174 (fontified t face font-lock-preprocessor-face) 174 175 (fontified t) 175 182 (fontified t face font-lock-variable-name-face) 182 194 (fontified t) 194 195 (fontified t face font-lock-preprocessor-face c-is-sws t) 195 201 (fontified t face font-lock-preprocessor-face) 201 202 (fontified t) 202 215 (fontified t face font-lock-variable-name-face) 215 222 (fontified t) 222 223 (fontified t face font-lock-preprocessor-face c-is-sws t) 223 229 (fontified t face font-lock-preprocessor-face) 229 230 (fontified t) 230 243 (fontified t face font-lock-variable-name-face) 243 255 (fontified t) 255 256 (fontified t face font-lock-preprocessor-face c-is-sws t) 256 262 (fontified t face font-lock-preprocessor-face) 262 263 (fontified t) 263 270 (fontified t face font-lock-variable-name-face) 270 282 (fontified t) 282 283 (fontified t face font-lock-preprocessor-face c-is-sws t) 283 289 (fontified t face font-lock-preprocessor-face) 289 290 (fontified t) 290 303 (fontified t face font-lock-variable-name-face) 303 310 (fontified t) 310 311 (fontified t face font-lock-preprocessor-face c-is-sws t) 311 317 (fontified t face font-lock-preprocessor-face) 317 318 (fontified t) 318 331 (fontified t face font-lock-variable-name-face) 331 342 (fontified t)) . 2376) (t 25314 10699 47057 508000)) nil (25314 13500 24691 766000) 0 nil])
([nil nil ((1452 . 1456) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 1452) (undo-tree-id33 . -8) (1460 . 1461) (1451 . 1460) (1433 . 1437) (1446 . 1447) (1440 . 1446) (1433 . 1440) (t 25314 12871 114000 0)) nil (25314 13500 24689 76000) 0 nil])
([nil nil ((1465 . 1466) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1465) (undo-tree-id28 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1466) (undo-tree-id29 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1467) (undo-tree-id30 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1468) (undo-tree-id31 . -1) 1469 (1460 . 1469) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -1460) (undo-tree-id32 . -1) 1461 (1460 . 1461) (1451 . 1460) 1437) nil (25314 13500 24682 300000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -1613) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -1614) (undo-tree-id27 . -1) 1615 (1603 . 1615) (1603 . 1604) (#("
" 0 1 (fontified t c-is-sws t)) . 1603)) nil (25314 13500 24670 829000) 0 nil])
([nil nil ((#("          
" 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 10 (fontified t ws-butler-chg chg c-in-sws t) 10 11 (fontified t ws-butler-chg delete c-in-sws t)) . 1603) (undo-tree-id24 . 1) (undo-tree-id25 . -9) 1612) nil (25314 13500 24664 848000) 0 nil])
([nil nil ((1467 . 1481) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 1467) (1472 . 1473)) nil (25314 13500 24661 240000) 0 nil])
([nil nil ((#("          " 0 10 (fontified t ws-butler-chg chg)) . 1471)) nil (25314 13500 24659 508000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -1608) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -1609) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -1610) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -1611) (undo-tree-id23 . -1) 1612 (1603 . 1612) 1583) nil (25314 13500 24657 168000) 0 nil])
([nil nil ((#("        " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 8 (fontified t ws-butler-chg chg c-in-sws t)) . -1604) (undo-tree-id17 . -8) 1612 (1604 . 1612) (1604 . 1605) (#("    
" 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 4 (fontified t ws-butler-chg chg c-in-sws t) 4 5 (fontified t ws-butler-chg delete c-in-sws t)) . 1604) (undo-tree-id18 . 1) (undo-tree-id19 . -3) 1607) nil (25314 13500 24648 333000) 0 nil])
([nil nil ((2688 . 2691) (#("I" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2688) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("Z" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2689) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("E" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2690) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 2691 (2674 . 2691) (2673 . 2674)) nil (25314 13500 24639 721000) 0 nil])
([nil nil ((2684 . 2686) (#("e" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2684) (undo-tree-id9 . -1) 2685 (2681 . 2685) (#("U" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2681) (undo-tree-id10 . -1) 2682 (2681 . 2682) (#("QUEUE" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . 2681)) nil (25314 13500 24606 586000) 0 nil])
([nil nil ((2685 . 2694) (2681 . 2685) (#("Queue_Size" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 5 6 (fontified t ws-butler-chg delete c-in-sws t face font-lock-variable-name-face) 6 7 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 7 8 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 8 9 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 9 10 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . 2681) (undo-tree-id8 . -10)) nil (25314 13500 24601 256000) 0 nil])
([nil nil ((1490 . 1491) (1487 . 1490) (1478 . 1487) (1477 . 1478) (1476 . 1477) (#("[" 0 1 (fontified t ws-butler-chg chg)) . -1476) (undo-tree-id2 . -1) 1477 (1476 . 1477) (1466 . 1476) (#("QUEUE" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -1466) (undo-tree-id3 . -5) 1471 (1465 . 1471) (#("[" 0 1 (fontified t ws-butler-chg chg)) . -1465) (undo-tree-id4 . -1) (#("E" 0 1 (fontified t ws-butler-chg chg)) . -1466) (undo-tree-id5 . -1) 1467 (#("E" 0 1 (fontified nil ws-butler-chg chg)) . -1467) (1467 . 1468) (#("U" 0 1 (fontified nil ws-butler-chg chg)) . -1467) (1466 . 1468) (#("U" 0 1 (fontified nil ws-butler-chg chg)) . -1466) (1466 . 1467) (#("Q" 0 1 (fontified nil ws-butler-chg chg)) . -1466) (1466 . 1467) (#("q" 0 1 (fontified t ws-butler-chg chg)) . -1466) (undo-tree-id6 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1467) (undo-tree-id7 . -1) 1468 (#("e" 0 1 (fontified nil ws-butler-chg chg)) . -1468) (1468 . 1469) (#("u" 0 1 (fontified nil ws-butler-chg chg)) . -1468) (1468 . 1469) (#("e" 0 1 (fontified nil ws-butler-chg chg)) . -1468) (1466 . 1469)) nil (25314 13500 24592 865000) 0 nil])
([nil nil ((1460 . 1465) (#("int" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . 1460)) nil (25314 13500 24571 450000) 0 nil])
([nil nil ((#("int" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . 1489)) nil (25314 13500 24568 357000) 0 nil])
([nil nil ((1506 . 1507) (1501 . 1506) (1500 . 1501) (1495 . 1500) (1489 . 1495) (#(" " 0 1 (ws-butler-chg delete fontified t)) . -1489) (undo-tree-id0 . 1) (undo-tree-id1 . -1) 1490) nil (25314 13500 24561 665000) 0 nil])
([nil nil ((1437 . 1445) (t 25314 13500 28634 15000)) nil (25314 13529 307189 153000) 0 nil])
([nil nil ((1453 . 1458) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1453) (undo-tree-id34 . -1) 1454 (1452 . 1454) (#("Queue" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face)) . 1452)) nil (25314 13529 307186 361000) 0 nil])
([nil nil ((1522 . 1528)) nil (25314 13529 307175 426000) 0 nil])
([nil nil ((2763 . 2776) (2756 . 2763) (2755 . 2756) (2750 . 2755) (t 25314 13529 310880 489000) 2740) nil (25314 13757 677766 445000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1 4 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t face font-lock-preprocessor-face)) . 2751) (undo-tree-id35 . -4)) nil (25314 13757 677759 986000) 0 nil])
([nil nil ((2381 . 2382) (2380 . 2381) (2378 . 2380) (#("," 0 1 (fontified t ws-butler-chg chg c-type c-decl-arg-start)) . -2378) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 2379 (2378 . 2379) (2377 . 2378) (2376 . 2377) (2370 . 2376) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -2370) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2371) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2372) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2373) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -2374) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -2375) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 2376 (2370 . 2376) (2356 . 2360) (2365 . 2366) (2356 . 2365) (t 25314 13757 681802 740000)) nil (25314 14226 723081 518000) 0 nil])
([nil nil ((1475 . 1479) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1475) (undo-tree-id39 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1476) (undo-tree-id40 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1477) (undo-tree-id41 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1478) (undo-tree-id42 . -1) 1479 (1475 . 1479) (#("q" 0 1 (fontified t face font-lock-variable-name-face)) . 1475)) nil (25314 14226 723043 606000) 0 nil])
([nil nil ((1475 . 1478) (#("list" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 2 3 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 3 4 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 1475) (undo-tree-id37 . -4) (undo-tree-id38 . -3)) nil (25314 14226 723033 626000) 0 nil])
([nil nil ((1478 . 1479)) nil (25314 14226 723027 239000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2384) (undo-tree-id36 . -1)) nil (25314 14226 723021 878000) 0 nil])
([nil nil ((2385 . 2394) (2384 . 2385) (t 25314 14226 729750 834000)) nil (25314 14821 962788 254000) 0 nil])
([nil nil ((2402 . 2406) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2402) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (2410 . 2411) (2401 . 2410) (2396 . 2400) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2396) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (2404 . 2405) (2395 . 2404) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2395) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 2396 (2395 . 2396) (2394 . 2395) (t 25314 14821 966761 85000)) nil (25314 17317 150543 697000) 0 nil])
([nil nil ((2413 . 2415) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2413) (undo-tree-id65 . -1) 2414 (2410 . 2414) (2401 . 2410) 2400) nil (25314 17317 150533 79000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-variable-name-face)) . 2381)) nil (25314 17317 150530 377000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 2381)) nil (25314 17317 150529 289000) 0 nil])
([nil nil ((2429 . 2430) (2425 . 2429) (2421 . 2425) (2408 . 2421) (2400 . 2408) (2400 . 2401) (#("        que->
" 0 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg delete)) . 2400) (undo-tree-id59 . 1) (undo-tree-id60 . -12) (undo-tree-id61 . -8) (undo-tree-id62 . -14) (undo-tree-id63 . -13) (undo-tree-id64 . -12) 2412) nil (25314 17317 150526 945000) 0 nil])
([nil nil ((2449 . 2450) (2443 . 2449) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -2443) (undo-tree-id57 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -2444) (undo-tree-id58 . -1) 2445 (2439 . 2445) (2430 . 2439) 2429) nil (25314 17317 150515 176000) 0 nil])
([nil nil ((#("        q->front++;
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t)) . 2431) (undo-tree-id72 . 1) (undo-tree-id73 . -18) (undo-tree-id74 . -19) (undo-tree-id75 . -18) (undo-tree-id76 . -18) (undo-tree-id77 . -18) (undo-tree-id78 . -18) 2449 (t 25314 17317 161763 743000)) nil (25314 17321 606274 594000) 0 nil])
([nil nil ((2424 . 2426)) nil (25314 17321 606250 267000) 0 nil])
([nil nil ((2469 . 2473) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2469) (undo-tree-id112 . -8) (undo-tree-id113 . -8) (2477 . 2478) (2468 . 2477) (2463 . 2467) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2463) (undo-tree-id114 . -8) (undo-tree-id115 . -8) (2471 . 2472) (2462 . 2471) (2461 . 2462) (2460 . 2461) (2459 . 2460) (2453 . 2459) (2452 . 2453) (2444 . 2452) (2439 . 2444) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2439) (undo-tree-id116 . -4) 2443 (2438 . 2443) (t 25314 17321 613801 216000) 2437) nil (25314 17420 710851 73000) 0 nil])
([nil nil ((2444 . 2451) (#("void" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg face font-lock-type-face) 3 4 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . 2444)) nil (25314 17420 710835 462000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -2480) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2481) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2482) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2483) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2484) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -2485) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2486) (undo-tree-id111 . -1) 2487 (2480 . 2487) (2471 . 2480) 2470) nil (25314 17420 710829 282000) 0 nil])
([nil nil ((2549 . 2550) (2533 . 2549) (2524 . 2533) (2515 . 2524) (2514 . 2515) (2504 . 2514) (2503 . 2504) (2492 . 2503) (#(">" 0 1 (fontified t ws-butler-chg chg)) . -2492) (undo-tree-id79 . -1) 2493 (#("=" 0 1 (fontified t ws-butler-chg chg)) . -2493) (undo-tree-id80 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2494) (undo-tree-id81 . -1) (#("q" 0 1 (fontified t ws-butler-chg chg)) . -2495) (undo-tree-id82 . -1) 2496 (2491 . 2496) (2484 . 2491) (#("-" 0 1 (fontified t ws-butler-chg chg)) . -2484) (undo-tree-id83 . -1) 2485 (2484 . 2485) (2483 . 2484) (2480 . 2483) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2480) (undo-tree-id84 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2481) (undo-tree-id85 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2482) (undo-tree-id86 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2483) (undo-tree-id87 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2484) (undo-tree-id88 . -1) 2485 (2480 . 2485) (2472 . 2480) (2472 . 2473) (#("        
" 0 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg delete)) . 2472) (undo-tree-id89 . 1) (undo-tree-id90 . -4) (undo-tree-id91 . -8) (undo-tree-id92 . -4) 2476) nil (25314 17420 710803 701000) 0 nil])
([nil nil ((2576 . 2577) (2569 . 2576) (2566 . 2569) (2557 . 2566) (2556 . 2557) (2541 . 2556) (#("b" 0 1 (fontified t ws-butler-chg chg)) . -2541) (undo-tree-id136 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2542) (undo-tree-id137 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -2543) (undo-tree-id138 . -1) (#("k" 0 1 (fontified t ws-butler-chg chg)) . -2544) (undo-tree-id139 . -1) (#("+" 0 1 (fontified t ws-butler-chg chg)) . -2545) (undo-tree-id140 . -1) (#("+" 0 1 (fontified t ws-butler-chg chg)) . -2546) (undo-tree-id141 . -1) (#(";" 0 1 (fontified t ws-butler-chg chg)) . -2547) (undo-tree-id142 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -2548) (undo-tree-id143 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2549) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2550) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2551) (undo-tree-id146 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2552) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2553) (undo-tree-id148 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2554) (undo-tree-id149 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2555) (undo-tree-id150 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2556) (undo-tree-id151 . -1) 2557 (2548 . 2557) (2547 . 2548) (2545 . 2547) (2524 . 2545) (2516 . 2524) (2516 . 2517) (#("        return q->data[q->back++];
" 0 8 (fontified t) 8 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t)) . 2516) (undo-tree-id152 . 1) (undo-tree-id153 . -33) (undo-tree-id154 . -33) (undo-tree-id155 . -33) (undo-tree-id156 . -33) 2549 (t 25314 17420 715635 377000)) nil (25314 17553 155794 638000) 0 nil])
([nil nil ((2618 . 2622) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2618) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (2626 . 2627) (2617 . 2626) (2612 . 2616) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2612) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (2620 . 2621) (2611 . 2620) (2610 . 2611) (2609 . 2610) (2608 . 2609) (2602 . 2608) (2601 . 2602) (2590 . 2601) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2590) (undo-tree-id132 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -2591) (undo-tree-id133 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2592) (undo-tree-id134 . -1) 2593 (2589 . 2593) (2584 . 2589) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2584) (undo-tree-id135 . -4) 2588 (2583 . 2588) 2582) nil (25314 17553 155768 843000) 0 nil])
([nil nil ((2681 . 2682) (2671 . 2681) (#("QUE" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -2671) (undo-tree-id122 . -3) 2674 (2668 . 2674) (2667 . 2668) (2657 . 2667) (#("QUE" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -2657) (undo-tree-id123 . -3) 2660 (2654 . 2660) (2653 . 2654) (2649 . 2653) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -2649) (undo-tree-id124 . -1) 2650 (2635 . 2650) (2634 . 2635) (#("q" 0 1 (fontified t ws-butler-chg chg)) . -2634) (undo-tree-id125 . -1) 2635 (#("-" 0 1 (fontified t ws-butler-chg chg)) . -2635) (undo-tree-id126 . -1) (#(">" 0 1 (fontified t ws-butler-chg chg)) . -2636) (undo-tree-id127 . -1) 2637 (2634 . 2637) (2633 . 2634) (2626 . 2633) (2618 . 2626) (2618 . 2619) 2622) nil (25314 17553 155686 507000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . 2653) (undo-tree-id120 . 1) (undo-tree-id121 . -1)) nil (25314 17553 155675 996000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t ws-butler-chg chg)) . 2635)) nil (25314 17553 155672 912000) 0 nil])
([nil nil ((nil ws-butler-chg delete 2636 . 2637) (2635 . 2636)) nil (25314 17553 155671 465000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . 2634) (undo-tree-id117 . -1) (undo-tree-id118 . 1) (undo-tree-id119 . -1)) nil (25314 17553 155666 238000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -2692) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2693) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -2694) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2695) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("8" 0 1 (fontified t ws-butler-chg chg)) . -2696) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -2697) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2698) (undo-tree-id194 . -1) 2699 (2692 . 2699) (2687 . 2692) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2687) (undo-tree-id195 . -4) 2691 (2686 . 2691) (t 25314 17553 160750 192000) 2685) nil (25314 17659 616637 631000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg delete)) . 2688) (undo-tree-id172 . 1) (undo-tree-id173 . -3) (undo-tree-id174 . -4) (undo-tree-id175 . -4) 2691) nil (25314 17659 616591 713000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 2687) (undo-tree-id170 . -1) (undo-tree-id171 . -1)) nil (25314 17659 616584 26000) 0 nil])
([nil current ((3142 . 3144) (3141 . 3142) (3140 . 3141) (3139 . 3140) (3138 . 3139) (3137 . 3138) (3136 . 3137) (3135 . 3136) (3134 . 3135) (3131 . 3134) (3130 . 3131) (3129 . 3130) (3128 . 3129) (3125 . 3128) (3124 . 3125) (#("_" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -3124) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 3125 (3124 . 3125) (#(">" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -3124) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -3125) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 3126 (3123 . 3126) (3122 . 3123) (3121 . 3122) (3120 . 3121) (3119 . 3120) (3117 . 3119) (3116 . 3117) (3115 . 3116) (3114 . 3115) (3104 . 3114) (3103 . 3104) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -3103) (undo-tree-id166 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -3104) (undo-tree-id167 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -3105) (undo-tree-id168 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -3106) (undo-tree-id169 . -1) 3107 (3102 . 3107) 3081) nil (25314 17659 616570 911000) 0 nil])
nil
