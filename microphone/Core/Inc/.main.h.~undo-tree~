(undo-tree-save-format-version . 1)
"b6dec7b66fbfa8b05884ecaf050f824f119e9e5a"
[nil nil nil nil (25314 13500 24694 104000) 0 nil]
([nil nil ((2376 . 2594) (#("P1_Pin GPIO_PIN_0
#define MP1_GPIO_Port GPIOD
#define MP1_EXTI_IRQn EXTI0_IRQn
#define MP2_Pin GPIO_PIN_1
#define MP2_GPIO_Port GPIOD
#define MP2_EXTI_IRQn EXTI1_IRQn
#define MP3_Pin GPIO_PIN_2
#define MP3_GPIO_Port GPIOD
#define MP3_EXTI_IRQn EXTI2_IRQn
#define MP4_Pin GPIO_PIN_3
#define MP4_GPIO_Port GPIOD
#define MP4_EXTI_IRQn EXTI3_IRQn" 0 6 (fontified t face font-lock-variable-name-face) 6 18 (fontified t) 18 19 (fontified t face font-lock-preprocessor-face c-is-sws t) 19 25 (fontified t face font-lock-preprocessor-face) 25 26 (fontified t) 26 39 (fontified t face font-lock-variable-name-face) 39 46 (fontified t) 46 47 (fontified t face font-lock-preprocessor-face c-is-sws t) 47 53 (fontified t face font-lock-preprocessor-face) 53 54 (fontified t) 54 67 (fontified t face font-lock-variable-name-face) 67 79 (fontified t) 79 80 (fontified t face font-lock-preprocessor-face c-is-sws t) 80 86 (fontified t face font-lock-preprocessor-face) 86 87 (fontified t) 87 94 (fontified t face font-lock-variable-name-face) 94 106 (fontified t) 106 107 (fontified t face font-lock-preprocessor-face c-is-sws t) 107 113 (fontified t face font-lock-preprocessor-face) 113 114 (fontified t) 114 127 (fontified t face font-lock-variable-name-face) 127 134 (fontified t) 134 135 (fontified t face font-lock-preprocessor-face c-is-sws t) 135 141 (fontified t face font-lock-preprocessor-face) 141 142 (fontified t) 142 155 (fontified t face font-lock-variable-name-face) 155 167 (fontified t) 167 168 (fontified t face font-lock-preprocessor-face c-is-sws t) 168 174 (fontified t face font-lock-preprocessor-face) 174 175 (fontified t) 175 182 (fontified t face font-lock-variable-name-face) 182 194 (fontified t) 194 195 (fontified t face font-lock-preprocessor-face c-is-sws t) 195 201 (fontified t face font-lock-preprocessor-face) 201 202 (fontified t) 202 215 (fontified t face font-lock-variable-name-face) 215 222 (fontified t) 222 223 (fontified t face font-lock-preprocessor-face c-is-sws t) 223 229 (fontified t face font-lock-preprocessor-face) 229 230 (fontified t) 230 243 (fontified t face font-lock-variable-name-face) 243 255 (fontified t) 255 256 (fontified t face font-lock-preprocessor-face c-is-sws t) 256 262 (fontified t face font-lock-preprocessor-face) 262 263 (fontified t) 263 270 (fontified t face font-lock-variable-name-face) 270 282 (fontified t) 282 283 (fontified t face font-lock-preprocessor-face c-is-sws t) 283 289 (fontified t face font-lock-preprocessor-face) 289 290 (fontified t) 290 303 (fontified t face font-lock-variable-name-face) 303 310 (fontified t) 310 311 (fontified t face font-lock-preprocessor-face c-is-sws t) 311 317 (fontified t face font-lock-preprocessor-face) 317 318 (fontified t) 318 331 (fontified t face font-lock-variable-name-face) 331 342 (fontified t)) . 2376) (t 25314 10699 47057 508000)) nil (25314 13500 24691 766000) 0 nil])
([nil nil ((1452 . 1456) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 1452) (undo-tree-id33 . -8) (1460 . 1461) (1451 . 1460) (1433 . 1437) (1446 . 1447) (1440 . 1446) (1433 . 1440) (t 25314 12871 114000 0)) nil (25314 13500 24689 76000) 0 nil])
([nil nil ((1465 . 1466) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1465) (undo-tree-id28 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1466) (undo-tree-id29 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1467) (undo-tree-id30 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1468) (undo-tree-id31 . -1) 1469 (1460 . 1469) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -1460) (undo-tree-id32 . -1) 1461 (1460 . 1461) (1451 . 1460) 1437) nil (25314 13500 24682 300000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -1613) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -1614) (undo-tree-id27 . -1) 1615 (1603 . 1615) (1603 . 1604) (#("
" 0 1 (fontified t c-is-sws t)) . 1603)) nil (25314 13500 24670 829000) 0 nil])
([nil nil ((#("          
" 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 10 (fontified t ws-butler-chg chg c-in-sws t) 10 11 (fontified t ws-butler-chg delete c-in-sws t)) . 1603) (undo-tree-id24 . 1) (undo-tree-id25 . -9) 1612) nil (25314 13500 24664 848000) 0 nil])
([nil nil ((1467 . 1481) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 1467) (1472 . 1473)) nil (25314 13500 24661 240000) 0 nil])
([nil nil ((#("          " 0 10 (fontified t ws-butler-chg chg)) . 1471)) nil (25314 13500 24659 508000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -1608) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -1609) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -1610) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -1611) (undo-tree-id23 . -1) 1612 (1603 . 1612) 1583) nil (25314 13500 24657 168000) 0 nil])
([nil nil ((#("        " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 8 (fontified t ws-butler-chg chg c-in-sws t)) . -1604) (undo-tree-id17 . -8) 1612 (1604 . 1612) (1604 . 1605) (#("    
" 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 4 (fontified t ws-butler-chg chg c-in-sws t) 4 5 (fontified t ws-butler-chg delete c-in-sws t)) . 1604) (undo-tree-id18 . 1) (undo-tree-id19 . -3) 1607) nil (25314 13500 24648 333000) 0 nil])
([nil nil ((2688 . 2691) (#("I" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2688) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("Z" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2689) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("E" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2690) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 2691 (2674 . 2691) (2673 . 2674)) nil (25314 13500 24639 721000) 0 nil])
([nil nil ((2684 . 2686) (#("e" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2684) (undo-tree-id9 . -1) 2685 (2681 . 2685) (#("U" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -2681) (undo-tree-id10 . -1) 2682 (2681 . 2682) (#("QUEUE" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . 2681)) nil (25314 13500 24606 586000) 0 nil])
([nil nil ((2685 . 2694) (2681 . 2685) (#("Queue_Size" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 2 3 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 3 4 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 4 5 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 5 6 (fontified t ws-butler-chg delete c-in-sws t face font-lock-variable-name-face) 6 7 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 7 8 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 8 9 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face) 9 10 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . 2681) (undo-tree-id8 . -10)) nil (25314 13500 24601 256000) 0 nil])
([nil nil ((1490 . 1491) (1487 . 1490) (1478 . 1487) (1477 . 1478) (1476 . 1477) (#("[" 0 1 (fontified t ws-butler-chg chg)) . -1476) (undo-tree-id2 . -1) 1477 (1476 . 1477) (1466 . 1476) (#("QUEUE" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -1466) (undo-tree-id3 . -5) 1471 (1465 . 1471) (#("[" 0 1 (fontified t ws-butler-chg chg)) . -1465) (undo-tree-id4 . -1) (#("E" 0 1 (fontified t ws-butler-chg chg)) . -1466) (undo-tree-id5 . -1) 1467 (#("E" 0 1 (fontified nil ws-butler-chg chg)) . -1467) (1467 . 1468) (#("U" 0 1 (fontified nil ws-butler-chg chg)) . -1467) (1466 . 1468) (#("U" 0 1 (fontified nil ws-butler-chg chg)) . -1466) (1466 . 1467) (#("Q" 0 1 (fontified nil ws-butler-chg chg)) . -1466) (1466 . 1467) (#("q" 0 1 (fontified t ws-butler-chg chg)) . -1466) (undo-tree-id6 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1467) (undo-tree-id7 . -1) 1468 (#("e" 0 1 (fontified nil ws-butler-chg chg)) . -1468) (1468 . 1469) (#("u" 0 1 (fontified nil ws-butler-chg chg)) . -1468) (1468 . 1469) (#("e" 0 1 (fontified nil ws-butler-chg chg)) . -1468) (1466 . 1469)) nil (25314 13500 24592 865000) 0 nil])
([nil nil ((1460 . 1465) (#("int" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . 1460)) nil (25314 13500 24571 450000) 0 nil])
([nil nil ((#("int" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . 1489)) nil (25314 13500 24568 357000) 0 nil])
([nil nil ((1506 . 1507) (1501 . 1506) (1500 . 1501) (1495 . 1500) (1489 . 1495) (#(" " 0 1 (ws-butler-chg delete fontified t)) . -1489) (undo-tree-id0 . 1) (undo-tree-id1 . -1) 1490) nil (25314 13500 24561 665000) 0 nil])
([nil nil ((1437 . 1445) (t 25314 13500 28634 15000)) nil (25314 13529 307189 153000) 0 nil])
([nil nil ((1453 . 1458) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1453) (undo-tree-id34 . -1) 1454 (1452 . 1454) (#("Queue" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face)) . 1452)) nil (25314 13529 307186 361000) 0 nil])
([nil nil ((1522 . 1528)) nil (25314 13529 307175 426000) 0 nil])
([nil nil ((2763 . 2776) (2756 . 2763) (2755 . 2756) (2750 . 2755) (t 25314 13529 310880 489000) 2740) nil (25314 13757 677766 445000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t ws-butler-chg chg c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1 4 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t face font-lock-preprocessor-face)) . 2751) (undo-tree-id35 . -4)) nil (25314 13757 677759 986000) 0 nil])
([nil nil ((2381 . 2382) (2380 . 2381) (2378 . 2380) (#("," 0 1 (fontified t ws-butler-chg chg c-type c-decl-arg-start)) . -2378) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 2379 (2378 . 2379) (2377 . 2378) (2376 . 2377) (2370 . 2376) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -2370) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2371) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2372) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2373) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -2374) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -2375) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 2376 (2370 . 2376) (2356 . 2360) (2365 . 2366) (2356 . 2365) (t 25314 13757 681802 740000)) nil (25314 14226 723081 518000) 0 nil])
([nil nil ((1475 . 1479) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1475) (undo-tree-id39 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1476) (undo-tree-id40 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1477) (undo-tree-id41 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1478) (undo-tree-id42 . -1) 1479 (1475 . 1479) (#("q" 0 1 (fontified t face font-lock-variable-name-face)) . 1475)) nil (25314 14226 723043 606000) 0 nil])
([nil nil ((1475 . 1478) (#("list" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 2 3 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 3 4 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 1475) (undo-tree-id37 . -4) (undo-tree-id38 . -3)) nil (25314 14226 723033 626000) 0 nil])
([nil nil ((1478 . 1479)) nil (25314 14226 723027 239000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2384) (undo-tree-id36 . -1)) nil (25314 14226 723021 878000) 0 nil])
([nil nil ((2385 . 2394) (2384 . 2385) (t 25314 14226 729750 834000)) nil (25314 14821 962788 254000) 0 nil])
([nil nil ((2402 . 2406) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2402) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (2410 . 2411) (2401 . 2410) (2396 . 2400) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2396) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (2404 . 2405) (2395 . 2404) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2395) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 2396 (2395 . 2396) (2394 . 2395) (t 25314 14821 966761 85000)) nil (25314 17317 150543 697000) 0 nil])
([nil nil ((2413 . 2415) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2413) (undo-tree-id65 . -1) 2414 (2410 . 2414) (2401 . 2410) 2400) nil (25314 17317 150533 79000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-variable-name-face)) . 2381)) nil (25314 17317 150530 377000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 2381)) nil (25314 17317 150529 289000) 0 nil])
([nil nil ((2429 . 2430) (2425 . 2429) (2421 . 2425) (2408 . 2421) (2400 . 2408) (2400 . 2401) (#("        que->
" 0 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg delete)) . 2400) (undo-tree-id59 . 1) (undo-tree-id60 . -12) (undo-tree-id61 . -8) (undo-tree-id62 . -14) (undo-tree-id63 . -13) (undo-tree-id64 . -12) 2412) nil (25314 17317 150526 945000) 0 nil])
([nil nil ((2449 . 2450) (2443 . 2449) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -2443) (undo-tree-id57 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -2444) (undo-tree-id58 . -1) 2445 (2439 . 2445) (2430 . 2439) 2429) nil (25314 17317 150515 176000) 0 nil])
([nil nil ((#("        q->front++;
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t)) . 2431) (undo-tree-id72 . 1) (undo-tree-id73 . -18) (undo-tree-id74 . -19) (undo-tree-id75 . -18) (undo-tree-id76 . -18) (undo-tree-id77 . -18) (undo-tree-id78 . -18) 2449 (t 25314 17317 161763 743000)) nil (25314 17321 606274 594000) 0 nil])
([nil nil ((2424 . 2426)) nil (25314 17321 606250 267000) 0 nil])
([nil nil ((2469 . 2473) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2469) (undo-tree-id112 . -8) (undo-tree-id113 . -8) (2477 . 2478) (2468 . 2477) (2463 . 2467) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2463) (undo-tree-id114 . -8) (undo-tree-id115 . -8) (2471 . 2472) (2462 . 2471) (2461 . 2462) (2460 . 2461) (2459 . 2460) (2453 . 2459) (2452 . 2453) (2444 . 2452) (2439 . 2444) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2439) (undo-tree-id116 . -4) 2443 (2438 . 2443) (t 25314 17321 613801 216000) 2437) nil (25314 17420 710851 73000) 0 nil])
([nil nil ((2444 . 2451) (#("void" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg face font-lock-type-face) 3 4 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . 2444)) nil (25314 17420 710835 462000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -2480) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2481) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2482) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2483) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2484) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -2485) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2486) (undo-tree-id111 . -1) 2487 (2480 . 2487) (2471 . 2480) 2470) nil (25314 17420 710829 282000) 0 nil])
([nil nil ((2549 . 2550) (2533 . 2549) (2524 . 2533) (2515 . 2524) (2514 . 2515) (2504 . 2514) (2503 . 2504) (2492 . 2503) (#(">" 0 1 (fontified t ws-butler-chg chg)) . -2492) (undo-tree-id79 . -1) 2493 (#("=" 0 1 (fontified t ws-butler-chg chg)) . -2493) (undo-tree-id80 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2494) (undo-tree-id81 . -1) (#("q" 0 1 (fontified t ws-butler-chg chg)) . -2495) (undo-tree-id82 . -1) 2496 (2491 . 2496) (2484 . 2491) (#("-" 0 1 (fontified t ws-butler-chg chg)) . -2484) (undo-tree-id83 . -1) 2485 (2484 . 2485) (2483 . 2484) (2480 . 2483) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2480) (undo-tree-id84 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2481) (undo-tree-id85 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2482) (undo-tree-id86 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2483) (undo-tree-id87 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2484) (undo-tree-id88 . -1) 2485 (2480 . 2485) (2472 . 2480) (2472 . 2473) (#("        
" 0 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg delete)) . 2472) (undo-tree-id89 . 1) (undo-tree-id90 . -4) (undo-tree-id91 . -8) (undo-tree-id92 . -4) 2476) nil (25314 17420 710803 701000) 0 nil])
([nil nil ((2576 . 2577) (2569 . 2576) (2566 . 2569) (2557 . 2566) (2556 . 2557) (2541 . 2556) (#("b" 0 1 (fontified t ws-butler-chg chg)) . -2541) (undo-tree-id136 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2542) (undo-tree-id137 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -2543) (undo-tree-id138 . -1) (#("k" 0 1 (fontified t ws-butler-chg chg)) . -2544) (undo-tree-id139 . -1) (#("+" 0 1 (fontified t ws-butler-chg chg)) . -2545) (undo-tree-id140 . -1) (#("+" 0 1 (fontified t ws-butler-chg chg)) . -2546) (undo-tree-id141 . -1) (#(";" 0 1 (fontified t ws-butler-chg chg)) . -2547) (undo-tree-id142 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -2548) (undo-tree-id143 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2549) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2550) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2551) (undo-tree-id146 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2552) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2553) (undo-tree-id148 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2554) (undo-tree-id149 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2555) (undo-tree-id150 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2556) (undo-tree-id151 . -1) 2557 (2548 . 2557) (2547 . 2548) (2545 . 2547) (2524 . 2545) (2516 . 2524) (2516 . 2517) (#("        return q->data[q->back++];
" 0 8 (fontified t) 8 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t)) . 2516) (undo-tree-id152 . 1) (undo-tree-id153 . -33) (undo-tree-id154 . -33) (undo-tree-id155 . -33) (undo-tree-id156 . -33) 2549 (t 25314 17420 715635 377000)) nil (25314 17553 155794 638000) 0 nil])
([nil nil ((2618 . 2622) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2618) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (2626 . 2627) (2617 . 2626) (2612 . 2616) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 2612) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (2620 . 2621) (2611 . 2620) (2610 . 2611) (2609 . 2610) (2608 . 2609) (2602 . 2608) (2601 . 2602) (2590 . 2601) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2590) (undo-tree-id132 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -2591) (undo-tree-id133 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2592) (undo-tree-id134 . -1) 2593 (2589 . 2593) (2584 . 2589) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2584) (undo-tree-id135 . -4) 2588 (2583 . 2588) 2582) nil (25314 17553 155768 843000) 0 nil])
([nil nil ((2681 . 2682) (2671 . 2681) (#("QUE" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -2671) (undo-tree-id122 . -3) 2674 (2668 . 2674) (2667 . 2668) (2657 . 2667) (#("QUE" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -2657) (undo-tree-id123 . -3) 2660 (2654 . 2660) (2653 . 2654) (2649 . 2653) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -2649) (undo-tree-id124 . -1) 2650 (2635 . 2650) (2634 . 2635) (#("q" 0 1 (fontified t ws-butler-chg chg)) . -2634) (undo-tree-id125 . -1) 2635 (#("-" 0 1 (fontified t ws-butler-chg chg)) . -2635) (undo-tree-id126 . -1) (#(">" 0 1 (fontified t ws-butler-chg chg)) . -2636) (undo-tree-id127 . -1) 2637 (2634 . 2637) (2633 . 2634) (2626 . 2633) (2618 . 2626) (2618 . 2619) 2622) nil (25314 17553 155686 507000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . 2653) (undo-tree-id120 . 1) (undo-tree-id121 . -1)) nil (25314 17553 155675 996000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t ws-butler-chg chg)) . 2635)) nil (25314 17553 155672 912000) 0 nil])
([nil nil ((nil ws-butler-chg delete 2636 . 2637) (2635 . 2636)) nil (25314 17553 155671 465000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . 2634) (undo-tree-id117 . -1) (undo-tree-id118 . 1) (undo-tree-id119 . -1)) nil (25314 17553 155666 238000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -2692) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2693) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -2694) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2695) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("8" 0 1 (fontified t ws-butler-chg chg)) . -2696) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -2697) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2698) (undo-tree-id194 . -1) 2699 (2692 . 2699) (2687 . 2692) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2687) (undo-tree-id195 . -4) 2691 (2686 . 2691) (t 25314 17553 160750 192000) 2685) nil (25314 17659 616637 631000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg delete)) . 2688) (undo-tree-id172 . 1) (undo-tree-id173 . -3) (undo-tree-id174 . -4) (undo-tree-id175 . -4) 2691) nil (25314 17659 616591 713000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 2687) (undo-tree-id170 . -1) (undo-tree-id171 . -1)) nil (25314 17659 616584 26000) 0 nil])
([nil nil ((3142 . 3144) (3141 . 3142) (3140 . 3141) (3139 . 3140) (3138 . 3139) (3137 . 3138) (3136 . 3137) (3135 . 3136) (3134 . 3135) (3131 . 3134) (3130 . 3131) (3129 . 3130) (3128 . 3129) (3125 . 3128) (3124 . 3125) (#("_" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -3124) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 3125 (3124 . 3125) (#(">" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -3124) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -3125) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 3126 (3123 . 3126) (3122 . 3123) (3121 . 3122) (3120 . 3121) (3119 . 3120) (3117 . 3119) (3116 . 3117) (3115 . 3116) (3114 . 3115) (3104 . 3114) (3103 . 3104) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -3103) (undo-tree-id166 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -3104) (undo-tree-id167 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t c-is-sws t)) . -3105) (undo-tree-id168 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -3106) (undo-tree-id169 . -1) 3107 (3102 . 3107) 3081) nil (25314 17659 616570 911000) 0 nil])
([nil nil ((1433 . 2757) (#("    typedef struct _queue {
        uint8 data[QUEUE_SIZE];
        uint8 front, back;
    } Queue;
/* USER CODE END ET */

/* Exported constants --------------------------------------------------------*/
/* USER CODE BEGIN EC */

/* USER CODE END EC */

/* Exported macro ------------------------------------------------------------*/
/* USER CODE BEGIN EM */
    extern int riseTimes;
    extern int mp_timestamp[4];
    extern float delta_distance[3][2];
    extern float chans_distance[1][2];
    extern vector2 mp_pos[4];
    extern vector2 sound_source_pos;

    void arg_prase(int argc, char **argv);
    void microphone_init();
    void time_init();
    void calculate_delta_distance();
    void calculate_chans_distance();
    void calculate_sound_source();

/* USER CODE END EM */

/* Exported functions prototypes ---------------------------------------------*/
void Error_Handler(void);

/* USER CODE BEGIN EFP */
    void push(Queue *q, uint8_t x)
    {
        q->data[q->front++] = x;
    }

    uint8_t pop(Queue *q)
    {
        if (q->back == q->front) return -1;
        uint8_t ret = q->data[q->back++];
        return ret;
    }

    uint8_t size(Queue *q)
    {
        return (q->front - q->back + QUEUE_SIZE) % QUEUE_SIZE;
    }
/* USER CODE END EFP */

/* Private defines -----------------------------------------------------------*/
#define MIC0_Pin GPIO_PIN_0
#define MIC0_GPIO_Port GPIOD
#define MIC1_Pin GPIO_PIN_1
#define MIC1_GPIO_Port GPIOD
#define MIC2_Pin GPIO_PIN_2
#define MIC2_GPIO_Port GPIOD
#define MIC3_Pin GPIO_PIN_3
#define MIC3_GPIO_Port GPIOD
/* USER CODE BEGIN Private defines */
#define QUEUE_SIZE 20
#define WINDOW_SIZE 5
#define MAX(a, b) ((a) > (b) ? (a) : (b))" 0 1 (fontified t c-is-sws t) 1 4 (fontified t c-is-sws t) 4 5 (fontified t c-is-sws t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 13 (fontified t c-is-sws t face font-lock-keyword-face) 13 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t face font-lock-keyword-face) 15 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t face font-lock-keyword-face c-type c-decl-type-start) 18 19 (fontified t) 19 20 (fontified t face font-lock-type-face) 20 21 (fontified t face font-lock-type-face) 21 22 (fontified t face font-lock-type-face) 22 23 (fontified t face font-lock-type-face) 23 24 (fontified t face font-lock-type-face) 24 25 (fontified t face font-lock-type-face) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 36 (fontified t) 36 37 (fontified t face font-lock-type-face) 37 38 (fontified t face font-lock-type-face) 38 39 (fontified t face font-lock-type-face) 39 40 (fontified t face font-lock-type-face) 40 41 (fontified t c-type c-decl-id-start face font-lock-type-face) 41 42 (fontified t) 42 43 (fontified t face font-lock-variable-name-face) 43 44 (fontified t face font-lock-variable-name-face) 44 45 (fontified t face font-lock-variable-name-face) 45 46 (fontified t face font-lock-variable-name-face) 46 47 (fontified t) 47 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 68 (fontified t) 68 69 (fontified t face font-lock-type-face) 69 70 (fontified t face font-lock-type-face) 70 71 (fontified t face font-lock-type-face) 71 72 (fontified t face font-lock-type-face) 72 73 (fontified t c-type c-decl-id-start face font-lock-type-face) 73 74 (fontified t) 74 75 (fontified t face font-lock-variable-name-face) 75 76 (fontified t face font-lock-variable-name-face) 76 77 (fontified t face font-lock-variable-name-face) 77 78 (fontified t face font-lock-variable-name-face) 78 79 (fontified t face font-lock-variable-name-face) 79 80 (fontified t c-type c-decl-id-start) 80 81 (fontified t) 81 82 (fontified t face font-lock-variable-name-face) 82 83 (fontified t face font-lock-variable-name-face) 83 84 (fontified t face font-lock-variable-name-face) 84 85 (fontified t face font-lock-variable-name-face) 85 86 (fontified t) 86 87 (fontified t) 87 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t face font-lock-type-face) 94 95 (fontified t face font-lock-type-face) 95 96 (fontified t face font-lock-type-face) 96 97 (fontified t face font-lock-type-face) 97 98 (fontified t face font-lock-type-face) 98 99 (fontified t) 99 100 (fontified t) 100 101 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 101 102 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 102 103 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 103 119 (c-in-sws t fontified t face font-lock-comment-face) 119 121 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 121 122 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 122 123 (c-in-sws t fontified t) 123 124 (c-in-sws t fontified t) 124 125 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 125 127 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 127 167 (c-in-sws t fontified t face font-lock-comment-face) 167 202 (c-in-sws t fontified t face font-lock-comment-face) 202 204 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 204 205 (c-in-sws t fontified t) 205 206 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 206 208 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 208 226 (c-in-sws t fontified t face font-lock-comment-face) 226 228 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 228 229 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 229 230 (c-in-sws t fontified t) 230 231 (c-in-sws t fontified t) 231 232 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 232 234 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 234 250 (c-in-sws t fontified t face font-lock-comment-face) 250 252 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 252 253 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 253 254 (c-in-sws t fontified t) 254 255 (c-in-sws t fontified t) 255 256 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 256 258 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 258 333 (c-in-sws t fontified t face font-lock-comment-face) 333 335 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 335 336 (c-in-sws t fontified t) 336 339 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 339 357 (c-in-sws t fontified t face font-lock-comment-face) 357 360 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 360 361 (c-in-sws t fontified t) 361 365 (c-in-sws t c-is-sws t fontified t) 365 366 (c-is-sws t fontified t face font-lock-keyword-face) 366 371 (fontified t face font-lock-keyword-face) 371 372 (fontified t) 372 374 (fontified t face font-lock-type-face) 374 375 (fontified t c-type c-decl-id-start face font-lock-type-face) 375 376 (fontified t) 376 385 (fontified t face font-lock-variable-name-face) 385 391 (fontified t) 391 397 (fontified t face font-lock-keyword-face) 397 398 (fontified t) 398 400 (fontified t face font-lock-type-face) 400 401 (fontified t c-type c-decl-id-start face font-lock-type-face) 401 402 (fontified t) 402 414 (fontified t face font-lock-variable-name-face) 414 423 (fontified t) 423 429 (fontified t face font-lock-keyword-face) 429 430 (fontified t) 430 434 (fontified t face font-lock-type-face) 434 435 (fontified t c-type c-decl-id-start face font-lock-type-face) 435 436 (fontified t) 436 450 (fontified t face font-lock-variable-name-face) 450 462 (fontified t) 462 468 (fontified t face font-lock-keyword-face) 468 469 (fontified t) 469 473 (fontified t face font-lock-type-face) 473 474 (fontified t c-type c-decl-id-start face font-lock-type-face) 474 475 (fontified t) 475 489 (fontified t face font-lock-variable-name-face) 489 501 (fontified t) 501 507 (fontified t face font-lock-keyword-face) 507 508 (fontified t) 508 514 (fontified t face font-lock-type-face) 514 515 (fontified t c-type c-decl-id-start face font-lock-type-face) 515 516 (fontified t) 516 522 (fontified t face font-lock-variable-name-face) 522 531 (fontified t) 531 537 (fontified t face font-lock-keyword-face) 537 538 (fontified t) 538 544 (fontified t face font-lock-type-face) 544 545 (fontified t c-type c-decl-id-start face font-lock-type-face) 545 546 (fontified t) 546 562 (fontified t face font-lock-variable-name-face) 562 569 (fontified t) 569 572 (fontified t face font-lock-type-face) 572 573 (fontified t c-type c-decl-id-start face font-lock-type-face) 573 574 (fontified t) 574 583 (fontified t face font-lock-function-name-face) 583 584 (fontified t c-type c-decl-arg-start) 584 587 (fontified t face font-lock-type-face) 587 588 (fontified t) 588 592 (fontified t face font-lock-variable-name-face) 592 593 (fontified t c-type c-decl-arg-start) 593 594 (fontified t) 594 598 (fontified t face font-lock-type-face) 598 601 (fontified t) 601 605 (fontified t face font-lock-variable-name-face) 605 608 (fontified t) 608 612 (fontified t) 612 615 (fontified t face font-lock-type-face) 615 616 (fontified t c-type c-decl-id-start face font-lock-type-face) 616 617 (fontified t) 617 632 (fontified t face font-lock-function-name-face) 632 635 (fontified t) 635 640 (fontified t) 640 643 (fontified t face font-lock-type-face) 643 644 (fontified t c-type c-decl-id-start face font-lock-type-face) 644 645 (fontified t) 645 654 (fontified t face font-lock-function-name-face) 654 662 (fontified t) 662 665 (fontified t face font-lock-type-face) 665 666 (fontified t c-type c-decl-id-start face font-lock-type-face) 666 667 (fontified t) 667 691 (fontified t face font-lock-function-name-face) 691 699 (fontified t) 699 702 (fontified t face font-lock-type-face) 702 703 (fontified t c-type c-decl-id-start face font-lock-type-face) 703 704 (fontified t) 704 728 (fontified t face font-lock-function-name-face) 728 736 (fontified t) 736 739 (fontified t face font-lock-type-face) 739 740 (fontified t c-type c-decl-id-start face font-lock-type-face) 740 741 (fontified t) 741 763 (fontified t face font-lock-function-name-face) 763 768 (fontified t) 768 769 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 769 771 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 771 787 (c-in-sws t fontified t face font-lock-comment-face) 787 790 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 790 792 (c-in-sws t fontified t) 792 795 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 795 870 (c-in-sws t fontified t face font-lock-comment-face) 870 872 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 872 873 (c-in-sws t fontified t) 873 874 (c-is-sws t fontified t face font-lock-type-face) 874 876 (fontified t face font-lock-type-face) 876 877 (fontified t c-type c-decl-id-start face font-lock-type-face) 877 878 (fontified t) 878 891 (fontified t face font-lock-function-name-face) 891 892 (fontified t c-type c-decl-arg-start) 892 896 (fontified t face font-lock-type-face) 896 900 (fontified t) 900 901 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 901 903 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 903 922 (c-in-sws t fontified t face font-lock-comment-face) 922 925 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 925 926 (fontified t c-in-sws t) 926 927 (c-is-sws t fontified t) 927 930 (c-is-sws t fontified t) 930 931 (c-is-sws t fontified t face font-lock-type-face) 931 932 (fontified t face font-lock-type-face) 932 933 (fontified t face font-lock-type-face) 933 934 (fontified t c-type c-decl-id-start face font-lock-type-face) 934 935 (fontified t) 935 936 (fontified t face font-lock-function-name-face) 936 937 (fontified t face font-lock-function-name-face) 937 938 (fontified t face font-lock-function-name-face) 938 939 (fontified t face font-lock-function-name-face) 939 940 (fontified t c-type c-decl-arg-start) 940 941 (fontified t face font-lock-type-face) 941 942 (fontified t face font-lock-type-face) 942 943 (fontified t face font-lock-type-face) 943 944 (fontified t face font-lock-type-face) 944 945 (fontified t face font-lock-type-face) 945 946 (fontified t) 946 947 (fontified t) 947 948 (fontified t face font-lock-variable-name-face) 948 949 (fontified t c-type c-decl-arg-start) 949 950 (fontified t) 950 951 (fontified t face font-lock-type-face) 951 952 (fontified t face font-lock-type-face) 952 953 (fontified t face font-lock-type-face) 953 954 (fontified t face font-lock-type-face) 954 955 (fontified t face font-lock-type-face) 955 956 (fontified t face font-lock-type-face) 956 957 (fontified t face font-lock-type-face) 957 958 (fontified t) 958 959 (fontified t face font-lock-variable-name-face) 959 960 (fontified t) 960 961 (fontified t) 961 965 (fontified t) 965 966 (fontified t) 966 967 (fontified t) 967 975 (fontified t) 975 976 (fontified t) 976 977 (fontified t) 977 978 (fontified t) 978 979 (fontified t) 979 980 (fontified t) 980 981 (fontified t) 981 982 (fontified t) 982 983 (fontified t) 983 984 (fontified t) 984 985 (fontified t) 985 986 (fontified t) 986 987 (fontified t) 987 988 (fontified t) 988 989 (fontified t) 989 990 (fontified t) 990 991 (fontified t) 991 992 (fontified t) 992 993 (fontified t) 993 994 (fontified t) 994 995 (fontified t) 995 996 (fontified t) 996 997 (fontified t) 997 998 (fontified t) 998 999 (fontified t) 999 1000 (fontified t) 1000 1001 (fontified t) 1001 1004 (fontified t) 1004 1005 (fontified t) 1005 1006 (fontified t) 1006 1007 (fontified t) 1007 1011 (fontified t) 1011 1012 (fontified t face font-lock-type-face) 1012 1013 (fontified t face font-lock-type-face) 1013 1014 (fontified t face font-lock-type-face) 1014 1015 (fontified t face font-lock-type-face) 1015 1016 (fontified t face font-lock-type-face) 1016 1017 (fontified t face font-lock-type-face) 1017 1018 (fontified t c-type c-decl-id-start face font-lock-type-face) 1018 1019 (fontified t) 1019 1020 (fontified t face font-lock-function-name-face) 1020 1021 (fontified t face font-lock-function-name-face) 1021 1022 (fontified t face font-lock-function-name-face) 1022 1023 (fontified t c-type c-decl-arg-start) 1023 1024 (fontified t face font-lock-type-face) 1024 1025 (fontified t face font-lock-type-face) 1025 1026 (fontified t face font-lock-type-face) 1026 1027 (fontified t face font-lock-type-face) 1027 1028 (fontified t face font-lock-type-face) 1028 1029 (fontified t) 1029 1030 (fontified t) 1030 1031 (fontified t face font-lock-variable-name-face) 1031 1032 (fontified t) 1032 1033 (fontified t) 1033 1037 (fontified t) 1037 1038 (fontified t) 1038 1039 (fontified t) 1039 1047 (fontified t) 1047 1048 (fontified t face font-lock-keyword-face) 1048 1049 (fontified t face font-lock-keyword-face) 1049 1050 (fontified t) 1050 1051 (fontified t) 1051 1052 (fontified t) 1052 1053 (fontified t) 1053 1054 (fontified t) 1054 1055 (fontified t) 1055 1056 (fontified t) 1056 1057 (fontified t) 1057 1058 (fontified t) 1058 1059 (fontified t) 1059 1060 (fontified t) 1060 1061 (fontified t) 1061 1062 (fontified t) 1062 1063 (fontified t) 1063 1064 (fontified t) 1064 1065 (fontified t) 1065 1066 (fontified t) 1066 1067 (fontified t) 1067 1068 (fontified t) 1068 1069 (fontified t) 1069 1070 (fontified t) 1070 1071 (fontified t) 1071 1072 (fontified t) 1072 1073 (fontified t face font-lock-keyword-face) 1073 1074 (fontified t face font-lock-keyword-face) 1074 1075 (fontified t face font-lock-keyword-face) 1075 1076 (fontified t face font-lock-keyword-face) 1076 1077 (fontified t face font-lock-keyword-face) 1077 1078 (fontified t face font-lock-keyword-face) 1078 1079 (fontified t) 1079 1080 (fontified t) 1080 1081 (fontified t) 1081 1082 (fontified t) 1082 1083 (fontified t) 1083 1091 (fontified t) 1091 1092 (fontified t face font-lock-type-face) 1092 1094 (fontified t face font-lock-type-face) 1094 1095 (fontified t face font-lock-type-face) 1095 1096 (fontified t face font-lock-type-face) 1096 1097 (fontified t face font-lock-type-face) 1097 1098 (fontified t c-type c-decl-id-start face font-lock-type-face) 1098 1099 (fontified t) 1099 1100 (fontified t face font-lock-variable-name-face) 1100 1101 (fontified t face font-lock-variable-name-face) 1101 1102 (fontified t face font-lock-variable-name-face) 1102 1103 (fontified t) 1103 1104 (fontified t) 1104 1105 (fontified t) 1105 1106 (fontified t) 1106 1107 (fontified t) 1107 1108 (fontified t) 1108 1109 (fontified t) 1109 1110 (fontified t) 1110 1111 (fontified t) 1111 1112 (fontified t) 1112 1113 (fontified t) 1113 1114 (fontified t) 1114 1115 (fontified t) 1115 1116 (fontified t) 1116 1117 (fontified t) 1117 1118 (fontified t) 1118 1119 (fontified t) 1119 1120 (fontified t) 1120 1121 (fontified t) 1121 1122 (fontified t) 1122 1123 (fontified t) 1123 1124 (fontified t) 1124 1125 (fontified t) 1125 1133 (fontified t) 1133 1134 (fontified t face font-lock-keyword-face) 1134 1135 (fontified t face font-lock-keyword-face) 1135 1136 (fontified t face font-lock-keyword-face) 1136 1137 (fontified t face font-lock-keyword-face) 1137 1138 (fontified t face font-lock-keyword-face) 1138 1139 (fontified t face font-lock-keyword-face) 1139 1140 (fontified t) 1140 1141 (fontified t) 1141 1142 (fontified t) 1142 1143 (fontified t) 1143 1144 (fontified t) 1144 1145 (fontified t) 1145 1146 (fontified t) 1146 1149 (fontified t) 1149 1150 (fontified t) 1150 1151 (fontified t) 1151 1152 (fontified t) 1152 1156 (fontified t) 1156 1157 (fontified t face font-lock-type-face) 1157 1158 (fontified t face font-lock-type-face) 1158 1159 (fontified t face font-lock-type-face) 1159 1160 (fontified t face font-lock-type-face) 1160 1161 (fontified t face font-lock-type-face) 1161 1162 (fontified t face font-lock-type-face) 1162 1163 (fontified t c-type c-decl-id-start face font-lock-type-face) 1163 1164 (fontified t) 1164 1165 (fontified t face font-lock-function-name-face) 1165 1166 (fontified t face font-lock-function-name-face) 1166 1167 (fontified t face font-lock-function-name-face) 1167 1168 (fontified t face font-lock-function-name-face) 1168 1169 (fontified t c-type c-decl-arg-start) 1169 1170 (fontified t face font-lock-type-face) 1170 1171 (fontified t face font-lock-type-face) 1171 1172 (fontified t face font-lock-type-face) 1172 1173 (fontified t face font-lock-type-face) 1173 1174 (fontified t face font-lock-type-face) 1174 1175 (fontified t) 1175 1176 (fontified t) 1176 1177 (fontified t face font-lock-variable-name-face) 1177 1178 (fontified t) 1178 1183 (fontified t) 1183 1184 (fontified t) 1184 1185 (fontified t) 1185 1193 (fontified t) 1193 1194 (fontified t face font-lock-keyword-face) 1194 1195 (fontified t face font-lock-keyword-face) 1195 1196 (fontified t face font-lock-keyword-face) 1196 1197 (fontified t face font-lock-keyword-face) 1197 1198 (fontified t face font-lock-keyword-face) 1198 1199 (fontified t face font-lock-keyword-face) 1199 1200 (fontified t) 1200 1201 (fontified t) 1201 1202 (fontified t) 1202 1203 (fontified t) 1203 1204 (fontified t) 1204 1205 (fontified t) 1205 1206 (fontified t) 1206 1207 (fontified t) 1207 1208 (fontified t) 1208 1209 (fontified t) 1209 1210 (fontified t) 1210 1211 (fontified t) 1211 1212 (fontified t) 1212 1213 (fontified t) 1213 1214 (fontified t) 1214 1215 (fontified t) 1215 1216 (fontified t) 1216 1217 (fontified t) 1217 1218 (fontified t) 1218 1219 (fontified t) 1219 1220 (fontified t) 1220 1221 (fontified t) 1221 1222 (fontified t) 1222 1232 (fontified t) 1232 1233 (fontified t) 1233 1234 (fontified t) 1234 1235 (fontified t) 1235 1236 (fontified t) 1236 1246 (fontified t) 1246 1247 (fontified t) 1247 1248 (fontified t) 1248 1252 (fontified t) 1252 1253 (fontified t) 1253 1254 (fontified t) 1254 1255 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1255 1256 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1256 1257 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1257 1274 (c-in-sws t fontified t face font-lock-comment-face) 1274 1276 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1276 1277 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1277 1278 (fontified t c-in-sws t) 1278 1279 (fontified t c-in-sws t) 1279 1280 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1280 1282 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1282 1357 (c-in-sws t fontified t face font-lock-comment-face) 1357 1359 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1359 1360 (c-in-sws t fontified t) 1360 1361 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1361 1367 (c-in-sws t fontified t face font-lock-preprocessor-face) 1367 1368 (c-in-sws t fontified t) 1368 1369 (c-in-sws t fontified t face font-lock-variable-name-face) 1369 1376 (c-in-sws t fontified t face font-lock-variable-name-face) 1376 1388 (c-in-sws t fontified t) 1388 1389 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1389 1395 (c-in-sws t fontified t face font-lock-preprocessor-face) 1395 1396 (c-in-sws t fontified t) 1396 1410 (c-in-sws t fontified t face font-lock-variable-name-face) 1410 1417 (c-in-sws t fontified t) 1417 1418 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1418 1424 (c-in-sws t fontified t face font-lock-preprocessor-face) 1424 1425 (c-in-sws t fontified t) 1425 1433 (c-in-sws t fontified t face font-lock-variable-name-face) 1433 1445 (c-in-sws t fontified t) 1445 1446 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1446 1452 (c-in-sws t fontified t face font-lock-preprocessor-face) 1452 1453 (c-in-sws t fontified t) 1453 1467 (c-in-sws t fontified t face font-lock-variable-name-face) 1467 1474 (c-in-sws t fontified t) 1474 1475 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1475 1481 (c-in-sws t fontified t face font-lock-preprocessor-face) 1481 1482 (c-in-sws t fontified t) 1482 1490 (c-in-sws t fontified t face font-lock-variable-name-face) 1490 1502 (c-in-sws t fontified t) 1502 1503 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1503 1509 (c-in-sws t fontified t face font-lock-preprocessor-face) 1509 1510 (c-in-sws t fontified t) 1510 1524 (c-in-sws t fontified t face font-lock-variable-name-face) 1524 1531 (c-in-sws t fontified t) 1531 1532 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1532 1538 (c-in-sws t fontified t face font-lock-preprocessor-face) 1538 1539 (c-in-sws t fontified t) 1539 1547 (c-in-sws t fontified t face font-lock-variable-name-face) 1547 1559 (c-in-sws t fontified t) 1559 1560 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1560 1566 (c-in-sws t fontified t face font-lock-preprocessor-face) 1566 1567 (c-in-sws t fontified t) 1567 1581 (c-in-sws t fontified t face font-lock-variable-name-face) 1581 1587 (c-in-sws t fontified t) 1587 1588 (c-in-sws t fontified t) 1588 1589 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1589 1591 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1591 1622 (c-in-sws t fontified t face font-lock-comment-face) 1622 1625 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1625 1626 (c-in-sws t fontified t) 1626 1627 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1627 1628 (c-in-sws t fontified t face font-lock-preprocessor-face) 1628 1629 (c-in-sws t fontified t face font-lock-preprocessor-face) 1629 1630 (c-in-sws t fontified t face font-lock-preprocessor-face) 1630 1631 (c-in-sws t fontified t face font-lock-preprocessor-face) 1631 1632 (c-in-sws t fontified t face font-lock-preprocessor-face) 1632 1633 (c-in-sws t fontified t face font-lock-preprocessor-face) 1633 1634 (c-in-sws t fontified t) 1634 1635 (c-in-sws t fontified t face font-lock-variable-name-face) 1635 1636 (c-in-sws t fontified t face font-lock-variable-name-face) 1636 1637 (c-in-sws t fontified t face font-lock-variable-name-face) 1637 1638 (c-in-sws t fontified t face font-lock-variable-name-face) 1638 1639 (c-in-sws t fontified t face font-lock-variable-name-face) 1639 1640 (c-in-sws t fontified t face font-lock-variable-name-face) 1640 1641 (c-in-sws t fontified t face font-lock-variable-name-face) 1641 1642 (c-in-sws t fontified t face font-lock-variable-name-face) 1642 1643 (c-in-sws t fontified t face font-lock-variable-name-face) 1643 1644 (c-in-sws t fontified t face font-lock-variable-name-face) 1644 1645 (c-in-sws t fontified t) 1645 1646 (c-in-sws t fontified t) 1646 1647 (c-in-sws t fontified t) 1647 1648 (fontified t c-in-sws t) 1648 1649 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1649 1650 (c-in-sws t fontified t face font-lock-preprocessor-face) 1650 1651 (c-in-sws t fontified t face font-lock-preprocessor-face) 1651 1652 (c-in-sws t fontified t face font-lock-preprocessor-face) 1652 1653 (c-in-sws t fontified t face font-lock-preprocessor-face) 1653 1654 (c-in-sws t fontified t face font-lock-preprocessor-face) 1654 1655 (c-in-sws t fontified t face font-lock-preprocessor-face) 1655 1656 (c-in-sws t fontified t) 1656 1657 (c-in-sws t fontified t face font-lock-variable-name-face) 1657 1658 (c-in-sws t fontified t face font-lock-variable-name-face) 1658 1659 (c-in-sws t fontified t face font-lock-variable-name-face) 1659 1660 (c-in-sws t fontified t face font-lock-variable-name-face) 1660 1661 (c-in-sws t fontified t face font-lock-variable-name-face) 1661 1662 (c-in-sws t fontified t face font-lock-variable-name-face) 1662 1663 (c-in-sws t fontified t face font-lock-variable-name-face) 1663 1664 (c-in-sws t fontified t face font-lock-variable-name-face) 1664 1665 (c-in-sws t fontified t face font-lock-variable-name-face) 1665 1666 (c-in-sws t fontified t face font-lock-variable-name-face) 1666 1667 (c-in-sws t fontified t face font-lock-variable-name-face) 1667 1668 (c-in-sws t fontified t) 1668 1669 (c-in-sws t fontified t) 1669 1670 (fontified t c-in-sws t) 1670 1671 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1671 1672 (fontified t c-in-sws t face font-lock-preprocessor-face) 1672 1673 (fontified t c-in-sws t face font-lock-preprocessor-face) 1673 1674 (fontified t c-in-sws t face font-lock-preprocessor-face) 1674 1675 (fontified t c-in-sws t face font-lock-preprocessor-face) 1675 1676 (fontified t c-in-sws t face font-lock-preprocessor-face) 1676 1677 (fontified t c-in-sws t face font-lock-preprocessor-face) 1677 1678 (fontified t c-in-sws t) 1678 1679 (fontified t c-in-sws t face font-lock-function-name-face) 1679 1680 (fontified t c-in-sws t face font-lock-function-name-face) 1680 1681 (fontified t c-in-sws t face font-lock-function-name-face) 1681 1682 (fontified t c-in-sws t) 1682 1683 (fontified t c-in-sws t face font-lock-variable-name-face) 1683 1684 (fontified t c-in-sws t) 1684 1685 (fontified t c-in-sws t) 1685 1686 (fontified t c-in-sws t face font-lock-variable-name-face) 1686 1687 (fontified t c-in-sws t) 1687 1688 (fontified t c-in-sws t) 1688 1689 (fontified t c-in-sws t) 1689 1690 (fontified t c-in-sws t) 1690 1691 (fontified t c-in-sws t) 1691 1692 (fontified t c-in-sws t) 1692 1693 (fontified t c-in-sws t) 1693 1694 (fontified t c-in-sws t) 1694 1695 (fontified t c-in-sws t) 1695 1696 (fontified t c-in-sws t) 1696 1697 (fontified t c-in-sws t) 1697 1698 (fontified t c-in-sws t) 1698 1699 (fontified t c-in-sws t) 1699 1700 (fontified t c-in-sws t) 1700 1701 (fontified t c-in-sws t) 1701 1702 (fontified t c-in-sws t) 1702 1703 (fontified t c-in-sws t) 1703 1704 (fontified t c-in-sws t) 1704 1705 (fontified t c-in-sws t) 1705 1706 (fontified t c-in-sws t) 1706 1707 (fontified t c-in-sws t) 1707 1708 (fontified t c-in-sws t) 1708 1709 (fontified t c-in-sws t) 1709 1710 (fontified t c-in-sws t) 1710 1711 (fontified t c-in-sws t)) . 1433) (undo-tree-id198 . -1559) (undo-tree-id199 . -1670) (undo-tree-id200 . -1711) (undo-tree-id201 . -961) (undo-tree-id202 . -1559) (undo-tree-id203 . -98) (undo-tree-id204 . -949) (undo-tree-id205 . -1559) (undo-tree-id206 . -730) (undo-tree-id207 . -730) (undo-tree-id208 . -458) (undo-tree-id209 . -458) (undo-tree-id210 . -730) (undo-tree-id211 . -730) (t 25314 17659 624646 327000)) nil (25314 22138 160071 879000) 0 nil])
([nil nil ((1433 . 3144) (#("
/* USER CODE END ET */

/* Exported constants --------------------------------------------------------*/
/* USER CODE BEGIN EC */

/* USER CODE END EC */

/* Exported macro ------------------------------------------------------------*/
/* USER CODE BEGIN EM */
    extern int riseTimes;
    extern int mp_timestamp[4];
    extern float delta_distance[3][2];
    extern float chans_distance[1][2];
    extern vector2 mp_pos[4];
    extern vector2 sound_source_pos;

    void arg_prase(int argc, char **argv);
    void microphone_init();
    void time_init();
    void calculate_delta_distance();
    void calculate_chans_distance();
    void calculate_sound_source();

/* USER CODE END EM */

/* Exported functions prototypes ---------------------------------------------*/
void Error_Handler(void);

/* USER CODE BEGIN EFP */

/* USER CODE END EFP */

/* Private defines -----------------------------------------------------------*/
#define MP1_Pin GPIO_PIN_0
#define MP1_GPIO_Port GPIOD
#define MP1_EXTI_IRQn EXTI0_IRQn
#define MP2_Pin GPIO_PIN_1
#define MP2_GPIO_Port GPIOD
#define MP2_EXTI_IRQn EXTI1_IRQn
#define MP3_Pin GPIO_PIN_2
#define MP3_GPIO_Port GPIOD
#define MP3_EXTI_IRQn EXTI2_IRQn
#define MP4_Pin GPIO_PIN_3
#define MP4_GPIO_Port GPIOD
#define MP4_EXTI_IRQn EXTI3_IRQn
/* USER CODE BEGIN Private defines */
" 0 1 (fontified t c-is-sws t) 1 2 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 2 4 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 4 20 (fontified t face font-lock-comment-face c-in-sws t) 20 23 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 23 25 (fontified t c-in-sws t) 25 28 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 28 103 (fontified t face font-lock-comment-face c-in-sws t) 103 105 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 105 106 (fontified t c-in-sws t) 106 109 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 109 127 (fontified t face font-lock-comment-face c-in-sws t) 127 130 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 130 132 (fontified t c-in-sws t) 132 135 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 135 151 (fontified t face font-lock-comment-face c-in-sws t) 151 154 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 154 156 (fontified t c-in-sws t) 156 159 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 159 234 (fontified t face font-lock-comment-face c-in-sws t) 234 236 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 236 237 (fontified t c-in-sws t) 237 240 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 240 258 (fontified t face font-lock-comment-face c-in-sws t) 258 261 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 261 262 (fontified t c-in-sws t) 262 266 (fontified t c-is-sws t c-in-sws t) 266 267 (c-is-sws t fontified t face font-lock-keyword-face) 267 272 (fontified t face font-lock-keyword-face) 272 273 (fontified t) 273 275 (fontified t face font-lock-type-face) 275 276 (fontified t c-type c-decl-id-start face font-lock-type-face) 276 277 (fontified t) 277 286 (fontified t face font-lock-variable-name-face) 286 292 (fontified t) 292 298 (fontified t face font-lock-keyword-face) 298 299 (fontified t) 299 301 (fontified t face font-lock-type-face) 301 302 (fontified t c-type c-decl-id-start face font-lock-type-face) 302 303 (fontified t) 303 315 (fontified t face font-lock-variable-name-face) 315 324 (fontified t) 324 330 (fontified t face font-lock-keyword-face) 330 331 (fontified t) 331 335 (fontified t face font-lock-type-face) 335 336 (fontified t c-type c-decl-id-start face font-lock-type-face) 336 337 (fontified t) 337 351 (fontified t face font-lock-variable-name-face) 351 363 (fontified t) 363 369 (fontified t face font-lock-keyword-face) 369 370 (fontified t) 370 374 (fontified t face font-lock-type-face) 374 375 (fontified t c-type c-decl-id-start face font-lock-type-face) 375 376 (fontified t) 376 390 (fontified t face font-lock-variable-name-face) 390 402 (fontified t) 402 408 (fontified t face font-lock-keyword-face) 408 409 (fontified t) 409 415 (fontified t face font-lock-type-face) 415 416 (fontified t c-type c-decl-id-start face font-lock-type-face) 416 417 (fontified t) 417 423 (fontified t face font-lock-variable-name-face) 423 432 (fontified t) 432 438 (fontified t face font-lock-keyword-face) 438 439 (fontified t) 439 445 (fontified t face font-lock-type-face) 445 446 (fontified t c-type c-decl-id-start face font-lock-type-face) 446 447 (fontified t) 447 463 (fontified t face font-lock-variable-name-face) 463 470 (fontified t) 470 473 (fontified t face font-lock-type-face) 473 474 (fontified t c-type c-decl-id-start face font-lock-type-face) 474 475 (fontified t) 475 484 (fontified t face font-lock-function-name-face) 484 485 (fontified t c-type c-decl-arg-start) 485 488 (fontified t face font-lock-type-face) 488 489 (fontified t) 489 493 (fontified t face font-lock-variable-name-face) 493 494 (fontified t c-type c-decl-arg-start) 494 495 (fontified t) 495 499 (fontified t face font-lock-type-face) 499 502 (fontified t) 502 506 (fontified t face font-lock-variable-name-face) 506 513 (fontified t) 513 516 (fontified t face font-lock-type-face) 516 517 (fontified t c-type c-decl-id-start face font-lock-type-face) 517 518 (fontified t) 518 533 (fontified t face font-lock-function-name-face) 533 541 (fontified t) 541 544 (fontified t face font-lock-type-face) 544 545 (fontified t c-type c-decl-id-start face font-lock-type-face) 545 546 (fontified t) 546 555 (fontified t face font-lock-function-name-face) 555 563 (fontified t) 563 566 (fontified t face font-lock-type-face) 566 567 (fontified t c-type c-decl-id-start face font-lock-type-face) 567 568 (fontified t) 568 592 (fontified t face font-lock-function-name-face) 592 600 (fontified t) 600 603 (fontified t face font-lock-type-face) 603 604 (fontified t c-type c-decl-id-start face font-lock-type-face) 604 605 (fontified t) 605 629 (fontified t face font-lock-function-name-face) 629 637 (fontified t) 637 640 (fontified t face font-lock-type-face) 640 641 (fontified t c-type c-decl-id-start face font-lock-type-face) 641 642 (fontified t) 642 664 (fontified t face font-lock-function-name-face) 664 669 (fontified t) 669 670 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 670 672 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 672 688 (fontified t face font-lock-comment-face c-in-sws t) 688 691 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 691 693 (fontified t c-in-sws t) 693 696 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 696 771 (fontified t face font-lock-comment-face c-in-sws t) 771 773 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 773 774 (fontified t c-in-sws t) 774 775 (fontified t c-is-sws t face font-lock-type-face) 775 777 (fontified t face font-lock-type-face) 777 778 (fontified t c-type c-decl-id-start face font-lock-type-face) 778 779 (fontified t) 779 792 (fontified t face font-lock-function-name-face) 792 793 (fontified t c-type c-decl-arg-start) 793 797 (fontified t face font-lock-type-face) 797 801 (fontified t) 801 802 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 802 804 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 804 823 (c-in-sws t fontified t face font-lock-comment-face) 823 826 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 826 828 (c-in-sws t fontified t) 828 831 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 831 848 (c-in-sws t fontified t face font-lock-comment-face) 848 851 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 851 853 (c-in-sws t fontified t) 853 856 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 856 931 (c-in-sws t fontified t face font-lock-comment-face) 931 933 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 933 934 (c-in-sws t fontified t) 934 935 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 935 941 (c-in-sws t fontified t face font-lock-preprocessor-face) 941 942 (c-in-sws t fontified t) 942 949 (c-in-sws t fontified t face font-lock-variable-name-face) 949 961 (c-in-sws t fontified t) 961 962 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 962 968 (c-in-sws t fontified t face font-lock-preprocessor-face) 968 969 (c-in-sws t fontified t) 969 982 (c-in-sws t fontified t face font-lock-variable-name-face) 982 989 (c-in-sws t fontified t) 989 990 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 990 996 (c-in-sws t fontified t face font-lock-preprocessor-face) 996 997 (c-in-sws t fontified t) 997 1010 (c-in-sws t fontified t face font-lock-variable-name-face) 1010 1022 (c-in-sws t fontified t) 1022 1023 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 1023 1029 (c-in-sws t fontified t face font-lock-preprocessor-face) 1029 1030 (c-in-sws t fontified t) 1030 1037 (c-in-sws t fontified t face font-lock-variable-name-face) 1037 1049 (c-in-sws t fontified t) 1049 1050 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 1050 1056 (c-in-sws t fontified t face font-lock-preprocessor-face) 1056 1057 (c-in-sws t fontified t) 1057 1070 (c-in-sws t fontified t face font-lock-variable-name-face) 1070 1077 (c-in-sws t fontified t) 1077 1078 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 1078 1084 (c-in-sws t fontified t face font-lock-preprocessor-face) 1084 1085 (c-in-sws t fontified t) 1085 1098 (c-in-sws t fontified t face font-lock-variable-name-face) 1098 1110 (c-in-sws t fontified t) 1110 1111 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 1111 1117 (c-in-sws t fontified t face font-lock-preprocessor-face) 1117 1118 (c-in-sws t fontified t) 1118 1125 (c-in-sws t fontified t face font-lock-variable-name-face) 1125 1137 (c-in-sws t fontified t) 1137 1138 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 1138 1144 (c-in-sws t fontified t face font-lock-preprocessor-face) 1144 1145 (c-in-sws t fontified t) 1145 1158 (c-in-sws t fontified t face font-lock-variable-name-face) 1158 1165 (c-in-sws t fontified t) 1165 1166 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 1166 1172 (c-in-sws t fontified t face font-lock-preprocessor-face) 1172 1173 (c-in-sws t fontified t) 1173 1186 (c-in-sws t fontified t face font-lock-variable-name-face) 1186 1198 (c-in-sws t fontified t) 1198 1199 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 1199 1205 (c-in-sws t fontified t face font-lock-preprocessor-face) 1205 1206 (c-in-sws t fontified t) 1206 1213 (c-in-sws t fontified t face font-lock-variable-name-face) 1213 1225 (c-in-sws t fontified t) 1225 1226 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 1226 1232 (c-in-sws t fontified t face font-lock-preprocessor-face) 1232 1233 (c-in-sws t fontified t) 1233 1246 (c-in-sws t fontified t face font-lock-variable-name-face) 1246 1253 (c-in-sws t fontified t) 1253 1254 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 1254 1260 (c-in-sws t fontified t face font-lock-preprocessor-face) 1260 1261 (c-in-sws t fontified t) 1261 1274 (c-in-sws t fontified t face font-lock-variable-name-face) 1274 1286 (c-in-sws t fontified t) 1286 1289 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1289 1320 (c-in-sws t fontified t face font-lock-comment-face) 1320 1323 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1323 1324 (c-in-sws t fontified t)) . 1433) (undo-tree-id196 . -564) (undo-tree-id197 . -564) 1997 (t 25314 20970 244512 623000)) nil (25314 22138 160055 798000) 0 nil])
([nil nil ((nil fontified t 1510 . 1511) (nil fontified t 1509 . 1510) (nil c-type c-decl-id-start 1509 . 1510) (nil face font-lock-type-face 1509 . 1510) (nil fontified t 1505 . 1509) (nil face font-lock-type-face 1505 . 1509) (#("uint8 " 0 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 6 (fontified t)) . 1503) (1509 . 1517) (nil fontified t 1476 . 1477) (t 25314 20999 159756 9000) (nil fontified t 1475 . 1476) (t 25314 20999 159756 9000) (nil c-type c-decl-id-start 1475 . 1476) (t 25314 20999 159756 9000) (nil face font-lock-type-face 1475 . 1476) (t 25314 20999 159756 9000) (nil fontified t 1471 . 1475) (t 25314 20999 159756 9000) (nil face font-lock-type-face 1471 . 1475) (t 25314 20999 159756 9000) (#("uint8 " 0 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 6 (fontified t)) . 1469) (t 25314 20999 159756 9000) (1475 . 1483) (t 25314 20999 159756 9000)) nil (25314 22138 160034 378000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2633) (undo-tree-id212 . -3) (undo-tree-id213 . -3) (undo-tree-id214 . -3) (undo-tree-id215 . -4) (undo-tree-id216 . -3) (#("    " 0 4 (fontified t)) . 2574) (undo-tree-id217 . -4) (#("    " 0 4 (fontified t)) . 2572) (undo-tree-id218 . -4) (#("    " 0 4 (fontified t)) . 2549) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (#("    " 0 4 (fontified t)) . 2546) (undo-tree-id221 . -4) (#("    " 0 4 (fontified t)) . 2530) (undo-tree-id222 . -4) (#("    " 0 4 (fontified t)) . 2492) (undo-tree-id223 . -4) (#("    " 0 4 (fontified t)) . 2452) (undo-tree-id224 . -4) (#("    " 0 4 (fontified t)) . 2450) (undo-tree-id225 . -4) (#("    " 0 4 (fontified t)) . 2428) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (#("    " 0 4 (fontified t)) . 2425) (undo-tree-id228 . -4) (#("    " 0 4 (fontified t)) . 2396) (undo-tree-id229 . -4) (#("    " 0 4 (fontified t)) . 2394) (undo-tree-id230 . -4) (#("    " 0 4 (c-is-sws t c-in-sws t fontified t)) . 2363) (undo-tree-id231 . -4) (undo-tree-id232 . -4) 2688 (t 25314 22138 176343 371000)) nil (25314 22198 698081 368000) 0 nil])
([nil nil ((2363 . 2367) (2393 . 2394) (t 25314 22198 710852 915000)) nil (25314 22277 388087 122000) 0 nil])
([nil nil ((2433 . 2437) (2454 . 2455)) nil (25314 22277 388085 640000) 0 nil])
([nil nil ((2559 . 2563) (2581 . 2582)) nil (25314 22277 388084 294000) 0 nil])
([nil nil ((#(";" 0 1 (fontified nil ws-butler-chg chg)) . 2581) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2559)) nil (25314 22277 388082 830000) 0 nil])
([nil nil ((#(";" 0 1 (fontified nil ws-butler-chg chg)) . 2454) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2433)) nil (25314 22277 388081 251000) 0 nil])
([nil nil ((#(";" 0 1 (fontified nil ws-butler-chg chg)) . 2393) (#("    " 0 1 (fontified t c-is-sws t ws-butler-chg chg) 1 4 (fontified t c-is-sws t ws-butler-chg chg)) . 2363)) nil (25314 22277 388079 510000) 0 nil])
([nil nil ((2363 . 2367) (2393 . 2394) (t 25314 22198 710852 915000)) nil (25314 22277 388078 244000) 0 nil])
([nil nil ((2433 . 2437) (2454 . 2455)) nil (25314 22277 388076 694000) 0 nil])
([nil nil ((2559 . 2563) (2581 . 2582)) nil (25314 22277 388074 607000) 0 nil])
([nil nil ((#("{
    q->data[q->front++] = x;
}
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t)) . 2399) (undo-tree-id262 . -32) (undo-tree-id263 . 33) (undo-tree-id264 . -1) (undo-tree-id265 . 2) (undo-tree-id266 . -32)) nil (25314 22277 388071 830000) 0 nil])
([nil nil ((#("{
    if (q->back == q->front) return -1;
    uint8_t ret = q->data[q->back++];
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 31 (fontified t) 31 37 (fontified t face font-lock-keyword-face) 37 42 (fontified t) 42 43 (fontified t) 43 46 (fontified t) 46 52 (fontified t face font-lock-type-face) 52 53 (fontified t c-type c-decl-id-start face font-lock-type-face) 53 54 (fontified t) 54 57 (fontified t face font-lock-variable-name-face) 57 80 (fontified t)) . 2427) (undo-tree-id260 . 80) (undo-tree-id261 . -1)) nil (25314 22277 388062 886000) 0 nil])
([nil nil ((#("{
    return (q->front - q->back + QUEUE_SIZE) % QUEUE_SIZE;
}
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 6 (fontified t) 6 12 (fontified t face font-lock-keyword-face) 12 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t)) . 2474) (undo-tree-id253 . -62) (undo-tree-id254 . -62) (undo-tree-id255 . -62) (undo-tree-id256 . 63) (undo-tree-id257 . -1) (undo-tree-id258 . 2) (undo-tree-id259 . -62)) nil (25314 22277 388058 194000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 2446) (undo-tree-id251 . -4) (undo-tree-id252 . -4)) nil (25314 22277 388045 492000) 0 nil])
([nil nil ((#("    return ret;
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 15 (fontified t) 15 16 (fontified t)) . 2427)) nil (25314 22277 388040 882000) 0 nil])
([nil nil ((nil ws-butler-chg delete 2443 . 2444) (2427 . 2443)) nil (25314 22277 388038 903000) 0 nil])
([nil nil ((nil ws-butler-chg delete 2450 . 2451) (2446 . 2450)) nil (25314 22277 388036 882000) 0 nil])
([nil nil ((nil ws-butler-chg delete 2537 . 2538) (2474 . 2537)) nil (25314 22277 388034 531000) 0 nil])
([nil nil ((nil ws-butler-chg delete 2507 . 2508) (2427 . 2507)) nil (25314 22277 388032 196000) 0 nil])
([nil nil ((#("{
    if (q->back == q->front) return -1;
    uint8_t ret = q->data[q->back++];
    return ret;
}
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 31 (fontified t) 31 37 (fontified t face font-lock-keyword-face) 37 42 (fontified t) 42 43 (fontified t) 43 46 (fontified t) 46 52 (fontified t face font-lock-type-face) 52 53 (fontified t c-type c-decl-id-start face font-lock-type-face) 53 54 (fontified t) 54 57 (fontified t face font-lock-variable-name-face) 57 80 (fontified t) 80 81 (fontified t) 81 84 (fontified t) 84 90 (fontified t face font-lock-keyword-face) 90 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t)) . 2427) (undo-tree-id247 . 98) (undo-tree-id248 . -1) (undo-tree-id249 . 2) (undo-tree-id250 . -97)) nil (25314 22277 388029 375000) 0 nil])
([nil nil ((#("{
    return (q->front - q->back + QUEUE_SIZE) % QUEUE_SIZE;
}
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 6 (fontified t) 6 12 (fontified t face font-lock-keyword-face) 12 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t)) . 2456) (undo-tree-id241 . -62) (undo-tree-id242 . -62) (undo-tree-id243 . 63) (undo-tree-id244 . -1) (undo-tree-id245 . 2) (undo-tree-id246 . -62)) nil (25314 22277 388021 246000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 2428) (undo-tree-id240 . -4)) nil (25314 22277 388011 422000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 2400) (undo-tree-id239 . -4)) nil (25314 22277 388007 804000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t c-is-sws t ws-butler-chg chg) 1 4 (fontified t c-is-sws t ws-butler-chg chg)) . 2363) (undo-tree-id238 . -4)) nil (25314 22277 388004 558000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2395) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1)) nil (25314 22277 388000 203000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 2418) (undo-tree-id233 . -1) (undo-tree-id234 . -1)) nil (25314 22277 387989 153000) 0 nil])
([nil nil ((2363 . 2367) (t 25314 22277 395515 219000)) nil (25314 22339 39966 378000) 0 nil])
([nil nil ((2399 . 2403)) nil (25314 22339 39964 172000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2430) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) 2431 (2426 . 2431)) nil (25314 22339 39957 954000) 0 nil])
([nil nil ((1671 . 1681) (1667 . 1671) (1667 . 1668) (#("
" 0 1 (fontified t c-is-sws t)) . 1667) (t 25314 22339 51034 181000)) nil (25314 22517 610854 571000) 0 nil])
([nil nil ((nil ws-butler-chg delete 1668 . 1669) (1667 . 1668) (#("
" 0 1 (fontified nil ws-butler-chg chg c-is-sws t)) . 1667) (undo-tree-id301 . 1) (#("    " 0 1 (fontified nil ws-butler-chg chg c-is-sws t) 1 4 (fontified nil ws-butler-chg chg c-in-sws t c-is-sws t)) . 1667) (undo-tree-id302 . -4) (#("const int " 0 1 (fontified t ws-butler-chg chg c-is-sws t face font-lock-keyword-face) 1 3 (fontified t ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified t ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified t ws-butler-chg chg face font-lock-keyword-face) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg face font-lock-type-face) 7 8 (fontified t ws-butler-chg chg face font-lock-type-face) 8 9 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face) 9 10 (fontified t ws-butler-chg chg)) . 1671) (undo-tree-id303 . -9)) nil (25314 22517 610850 811000) 0 nil])
([nil nil ((#("#define QUEUE_SIZE 20
#define WINDOW_SIZE 5
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 7 (c-in-sws t fontified t face font-lock-preprocessor-face) 7 8 (c-in-sws t fontified t) 8 18 (c-in-sws t fontified t face font-lock-variable-name-face) 18 22 (c-in-sws t fontified t) 22 23 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 23 29 (c-in-sws t fontified t face font-lock-preprocessor-face) 29 30 (c-in-sws t fontified t) 30 41 (c-in-sws t fontified t face font-lock-variable-name-face) 41 44 (c-in-sws t fontified t)) . 2826) (undo-tree-id275 . -21) (undo-tree-id276 . -30) (undo-tree-id277 . -41) (undo-tree-id278 . -8) (undo-tree-id279 . -18) (undo-tree-id280 . -30) (undo-tree-id281 . -41) (undo-tree-id282 . -8) (undo-tree-id283 . -18) (undo-tree-id284 . -30) (undo-tree-id285 . -41) (undo-tree-id286 . -8) (undo-tree-id287 . -18) (undo-tree-id288 . -30) (undo-tree-id289 . -41) (undo-tree-id290 . -8) (undo-tree-id291 . -18) (undo-tree-id292 . -30) (undo-tree-id293 . -41) (undo-tree-id294 . -8) (undo-tree-id295 . -18) (undo-tree-id296 . -30) (undo-tree-id297 . -41) (undo-tree-id298 . -8) (undo-tree-id299 . -18) (undo-tree-id300 . -20) 2846 (t 25314 22339 51034 181000)) nil (25314 22517 610842 291000) 0 nil])
([nil nil ((nil ws-butler-chg delete 2870 . 2871) (2826 . 2870)) nil (25314 22517 610813 613000) 0 nil])
([nil nil ((#("#define QUEUE_SIZE 20
#define WINDOW_SIZE 5
" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1 7 (fontified t c-in-sws t face font-lock-preprocessor-face) 7 8 (fontified t c-in-sws t) 8 18 (fontified t c-in-sws t face font-lock-variable-name-face) 18 22 (fontified t c-in-sws t) 22 23 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 23 29 (fontified t c-in-sws t face font-lock-preprocessor-face) 29 30 (fontified t c-in-sws t) 30 41 (fontified t c-in-sws t face font-lock-variable-name-face) 41 44 (fontified t c-in-sws t)) . 2826) (undo-tree-id271 . -21) (undo-tree-id272 . -20) (undo-tree-id273 . -44) (undo-tree-id274 . -20) 2846 (t 25314 22339 51034 181000)) nil (25314 22517 610811 386000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1432 . 1433) (#("
" 0 1 (c-in-sws t fontified nil ws-butler-chg chg)) . -1476) (undo-tree-id270 . -1) (1432 . 1477) 1428) nil (25314 22517 610801 691000) 0 nil])
([nil nil ((1433 . 1437) (t 25314 22517 617537 211000)) nil (25314 22522 150734 514000) 0 nil])
([nil nil ((1459 . 1463)) nil (25314 22522 150729 117000) 0 nil])
([nil current ((#("    " 0 1 (fontified t ws-butler-chg chg c-is-sws t) 1 4 (fontified t ws-butler-chg chg c-is-sws t)) . -1485) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) 1489 (1484 . 1489) (t 25314 22522 161575 457000) 1462) nil (25314 22524 42999 895000) 0 nil])
nil
