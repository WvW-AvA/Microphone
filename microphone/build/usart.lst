ARM GAS  /tmp/ccNLyxz3.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/usart.c"
  20              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  21              		.align	1
  22              		.global	MX_USART1_UART_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_USART1_UART_Init:
  28              	.LFB133:
   1:Core/Src/usart.c **** /**
   2:Core/Src/usart.c ****   ******************************************************************************
   3:Core/Src/usart.c ****   * @file    usart.c
   4:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/usart.c ****   *          of the USART instances.
   6:Core/Src/usart.c ****   ******************************************************************************
   7:Core/Src/usart.c ****   * @attention
   8:Core/Src/usart.c ****   *
   9:Core/Src/usart.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/usart.c ****   * All rights reserved.</center></h2>
  11:Core/Src/usart.c ****   *
  12:Core/Src/usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/usart.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/usart.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** 
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** #include "main.h"
  25:Core/Src/usart.c **** #define STR_MAX_SIZE 128
  26:Core/Src/usart.c **** char usart1_buffer[STR_MAX_SIZE];
  27:Core/Src/usart.c **** char usart2_buffer[STR_MAX_SIZE];
  28:Core/Src/usart.c **** char usart3_buffer[STR_MAX_SIZE];
  29:Core/Src/usart.c **** /* USER CODE END 0 */
  30:Core/Src/usart.c **** 
ARM GAS  /tmp/ccNLyxz3.s 			page 2


  31:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  32:Core/Src/usart.c **** UART_HandleTypeDef huart2;
  33:Core/Src/usart.c **** UART_HandleTypeDef huart3;
  34:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart1_rx;
  35:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart2_rx;
  36:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart3_rx;
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c **** /* USART1 init function */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  41:Core/Src/usart.c **** {
  29              		.loc 1 41 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  42:Core/Src/usart.c **** 
  43:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  44:Core/Src/usart.c **** 
  45:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  46:Core/Src/usart.c **** 
  47:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  48:Core/Src/usart.c **** 
  49:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  50:Core/Src/usart.c ****   huart1.Instance = USART1;
  38              		.loc 1 50 3 view .LVU1
  39              		.loc 1 50 19 is_stmt 0 view .LVU2
  40 0002 0A48     		ldr	r0, .L5
  41 0004 0A4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  51:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  43              		.loc 1 51 3 is_stmt 1 view .LVU3
  44              		.loc 1 51 24 is_stmt 0 view .LVU4
  45 0008 4FF4E133 		mov	r3, #115200
  46 000c 4360     		str	r3, [r0, #4]
  52:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 52 3 is_stmt 1 view .LVU5
  48              		.loc 1 52 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  53:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 53 3 is_stmt 1 view .LVU7
  52              		.loc 1 53 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  54:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 54 3 is_stmt 1 view .LVU9
  55              		.loc 1 54 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  55:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 55 3 is_stmt 1 view .LVU11
  58              		.loc 1 55 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
ARM GAS  /tmp/ccNLyxz3.s 			page 3


  56:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 56 3 is_stmt 1 view .LVU13
  62              		.loc 1 56 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  57:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 57 3 is_stmt 1 view .LVU15
  65              		.loc 1 57 28 is_stmt 0 view .LVU16
  66 001c C361     		str	r3, [r0, #28]
  58:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  67              		.loc 1 58 3 is_stmt 1 view .LVU17
  68              		.loc 1 58 7 is_stmt 0 view .LVU18
  69 001e FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71              		.loc 1 58 6 view .LVU19
  72 0022 00B9     		cbnz	r0, .L4
  73              	.L1:
  59:Core/Src/usart.c ****   {
  60:Core/Src/usart.c ****     Error_Handler();
  61:Core/Src/usart.c ****   }
  62:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
  63:Core/Src/usart.c **** 
  64:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
  65:Core/Src/usart.c **** 
  66:Core/Src/usart.c **** }
  74              		.loc 1 66 1 view .LVU20
  75 0024 08BD     		pop	{r3, pc}
  76              	.L4:
  60:Core/Src/usart.c ****   }
  77              		.loc 1 60 5 is_stmt 1 view .LVU21
  78 0026 FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              		.loc 1 66 1 is_stmt 0 view .LVU22
  81 002a FBE7     		b	.L1
  82              	.L6:
  83              		.align	2
  84              	.L5:
  85 002c 00000000 		.word	huart1
  86 0030 00100140 		.word	1073811456
  87              		.cfi_endproc
  88              	.LFE133:
  90              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  91              		.align	1
  92              		.global	MX_USART2_UART_Init
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	MX_USART2_UART_Init:
  98              	.LFB134:
  67:Core/Src/usart.c **** /* USART2 init function */
  68:Core/Src/usart.c **** 
  69:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
  70:Core/Src/usart.c **** {
  99              		.loc 1 70 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccNLyxz3.s 			page 4


 104              	.LCFI1:
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 3, -8
 107              		.cfi_offset 14, -4
  71:Core/Src/usart.c **** 
  72:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 0 */
  73:Core/Src/usart.c **** 
  74:Core/Src/usart.c ****   /* USER CODE END USART2_Init 0 */
  75:Core/Src/usart.c **** 
  76:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 1 */
  77:Core/Src/usart.c **** 
  78:Core/Src/usart.c ****   /* USER CODE END USART2_Init 1 */
  79:Core/Src/usart.c ****   huart2.Instance = USART2;
 108              		.loc 1 79 3 view .LVU24
 109              		.loc 1 79 19 is_stmt 0 view .LVU25
 110 0002 0A48     		ldr	r0, .L11
 111 0004 0A4B     		ldr	r3, .L11+4
 112 0006 0360     		str	r3, [r0]
  80:Core/Src/usart.c ****   huart2.Init.BaudRate = 115200;
 113              		.loc 1 80 3 is_stmt 1 view .LVU26
 114              		.loc 1 80 24 is_stmt 0 view .LVU27
 115 0008 4FF4E133 		mov	r3, #115200
 116 000c 4360     		str	r3, [r0, #4]
  81:Core/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 117              		.loc 1 81 3 is_stmt 1 view .LVU28
 118              		.loc 1 81 26 is_stmt 0 view .LVU29
 119 000e 0023     		movs	r3, #0
 120 0010 8360     		str	r3, [r0, #8]
  82:Core/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 121              		.loc 1 82 3 is_stmt 1 view .LVU30
 122              		.loc 1 82 24 is_stmt 0 view .LVU31
 123 0012 C360     		str	r3, [r0, #12]
  83:Core/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 124              		.loc 1 83 3 is_stmt 1 view .LVU32
 125              		.loc 1 83 22 is_stmt 0 view .LVU33
 126 0014 0361     		str	r3, [r0, #16]
  84:Core/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 127              		.loc 1 84 3 is_stmt 1 view .LVU34
 128              		.loc 1 84 20 is_stmt 0 view .LVU35
 129 0016 0C22     		movs	r2, #12
 130 0018 4261     		str	r2, [r0, #20]
  85:Core/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 131              		.loc 1 85 3 is_stmt 1 view .LVU36
 132              		.loc 1 85 25 is_stmt 0 view .LVU37
 133 001a 8361     		str	r3, [r0, #24]
  86:Core/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 134              		.loc 1 86 3 is_stmt 1 view .LVU38
 135              		.loc 1 86 28 is_stmt 0 view .LVU39
 136 001c C361     		str	r3, [r0, #28]
  87:Core/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 137              		.loc 1 87 3 is_stmt 1 view .LVU40
 138              		.loc 1 87 7 is_stmt 0 view .LVU41
 139 001e FFF7FEFF 		bl	HAL_UART_Init
 140              	.LVL2:
 141              		.loc 1 87 6 view .LVU42
 142 0022 00B9     		cbnz	r0, .L10
 143              	.L7:
ARM GAS  /tmp/ccNLyxz3.s 			page 5


  88:Core/Src/usart.c ****   {
  89:Core/Src/usart.c ****     Error_Handler();
  90:Core/Src/usart.c ****   }
  91:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 2 */
  92:Core/Src/usart.c **** 
  93:Core/Src/usart.c ****   /* USER CODE END USART2_Init 2 */
  94:Core/Src/usart.c **** 
  95:Core/Src/usart.c **** }
 144              		.loc 1 95 1 view .LVU43
 145 0024 08BD     		pop	{r3, pc}
 146              	.L10:
  89:Core/Src/usart.c ****   }
 147              		.loc 1 89 5 is_stmt 1 view .LVU44
 148 0026 FFF7FEFF 		bl	Error_Handler
 149              	.LVL3:
 150              		.loc 1 95 1 is_stmt 0 view .LVU45
 151 002a FBE7     		b	.L7
 152              	.L12:
 153              		.align	2
 154              	.L11:
 155 002c 00000000 		.word	huart2
 156 0030 00440040 		.word	1073759232
 157              		.cfi_endproc
 158              	.LFE134:
 160              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 161              		.align	1
 162              		.global	MX_USART3_UART_Init
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	MX_USART3_UART_Init:
 168              	.LFB135:
  96:Core/Src/usart.c **** /* USART3 init function */
  97:Core/Src/usart.c **** 
  98:Core/Src/usart.c **** void MX_USART3_UART_Init(void)
  99:Core/Src/usart.c **** {
 169              		.loc 1 99 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
 100:Core/Src/usart.c **** 
 101:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 0 */
 102:Core/Src/usart.c **** 
 103:Core/Src/usart.c ****   /* USER CODE END USART3_Init 0 */
 104:Core/Src/usart.c **** 
 105:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 1 */
 106:Core/Src/usart.c **** 
 107:Core/Src/usart.c ****   /* USER CODE END USART3_Init 1 */
 108:Core/Src/usart.c ****   huart3.Instance = USART3;
 178              		.loc 1 108 3 view .LVU47
 179              		.loc 1 108 19 is_stmt 0 view .LVU48
 180 0002 0F48     		ldr	r0, .L17
ARM GAS  /tmp/ccNLyxz3.s 			page 6


 181 0004 0F4B     		ldr	r3, .L17+4
 182 0006 0360     		str	r3, [r0]
 109:Core/Src/usart.c ****   huart3.Init.BaudRate = 115200;
 183              		.loc 1 109 3 is_stmt 1 view .LVU49
 184              		.loc 1 109 24 is_stmt 0 view .LVU50
 185 0008 4FF4E133 		mov	r3, #115200
 186 000c 4360     		str	r3, [r0, #4]
 110:Core/Src/usart.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 187              		.loc 1 110 3 is_stmt 1 view .LVU51
 188              		.loc 1 110 26 is_stmt 0 view .LVU52
 189 000e 0023     		movs	r3, #0
 190 0010 8360     		str	r3, [r0, #8]
 111:Core/Src/usart.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 191              		.loc 1 111 3 is_stmt 1 view .LVU53
 192              		.loc 1 111 24 is_stmt 0 view .LVU54
 193 0012 C360     		str	r3, [r0, #12]
 112:Core/Src/usart.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 194              		.loc 1 112 3 is_stmt 1 view .LVU55
 195              		.loc 1 112 22 is_stmt 0 view .LVU56
 196 0014 0361     		str	r3, [r0, #16]
 113:Core/Src/usart.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 197              		.loc 1 113 3 is_stmt 1 view .LVU57
 198              		.loc 1 113 20 is_stmt 0 view .LVU58
 199 0016 0C22     		movs	r2, #12
 200 0018 4261     		str	r2, [r0, #20]
 114:Core/Src/usart.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 201              		.loc 1 114 3 is_stmt 1 view .LVU59
 202              		.loc 1 114 25 is_stmt 0 view .LVU60
 203 001a 8361     		str	r3, [r0, #24]
 115:Core/Src/usart.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 204              		.loc 1 115 3 is_stmt 1 view .LVU61
 205              		.loc 1 115 28 is_stmt 0 view .LVU62
 206 001c C361     		str	r3, [r0, #28]
 116:Core/Src/usart.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 207              		.loc 1 116 3 is_stmt 1 view .LVU63
 208              		.loc 1 116 7 is_stmt 0 view .LVU64
 209 001e FFF7FEFF 		bl	HAL_UART_Init
 210              	.LVL4:
 211              		.loc 1 116 6 view .LVU65
 212 0022 50B9     		cbnz	r0, .L16
 213              	.L14:
 117:Core/Src/usart.c ****   {
 118:Core/Src/usart.c ****     Error_Handler();
 119:Core/Src/usart.c ****   }
 120:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 2 */
 121:Core/Src/usart.c ****     __HAL_UART_ENABLE_IT(&huart3, UART_IT_IDLE);
 214              		.loc 1 121 5 is_stmt 1 view .LVU66
 215 0024 0648     		ldr	r0, .L17
 216 0026 0268     		ldr	r2, [r0]
 217 0028 D368     		ldr	r3, [r2, #12]
 218 002a 43F01003 		orr	r3, r3, #16
 219 002e D360     		str	r3, [r2, #12]
 122:Core/Src/usart.c ****     HAL_UART_Receive_DMA(&huart3, usart3_buffer, STR_MAX_SIZE);
 220              		.loc 1 122 5 view .LVU67
 221 0030 8022     		movs	r2, #128
 222 0032 0549     		ldr	r1, .L17+8
 223 0034 FFF7FEFF 		bl	HAL_UART_Receive_DMA
ARM GAS  /tmp/ccNLyxz3.s 			page 7


 224              	.LVL5:
 123:Core/Src/usart.c ****   /* USER CODE END USART3_Init 2 */
 124:Core/Src/usart.c **** 
 125:Core/Src/usart.c **** }
 225              		.loc 1 125 1 is_stmt 0 view .LVU68
 226 0038 08BD     		pop	{r3, pc}
 227              	.L16:
 118:Core/Src/usart.c ****   }
 228              		.loc 1 118 5 is_stmt 1 view .LVU69
 229 003a FFF7FEFF 		bl	Error_Handler
 230              	.LVL6:
 231 003e F1E7     		b	.L14
 232              	.L18:
 233              		.align	2
 234              	.L17:
 235 0040 00000000 		.word	huart3
 236 0044 00480040 		.word	1073760256
 237 0048 00000000 		.word	usart3_buffer
 238              		.cfi_endproc
 239              	.LFE135:
 241              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 242              		.align	1
 243              		.global	HAL_UART_MspInit
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 248              	HAL_UART_MspInit:
 249              	.LVL7:
 250              	.LFB136:
 126:Core/Src/usart.c **** 
 127:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
 128:Core/Src/usart.c **** {
 251              		.loc 1 128 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 48
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		.loc 1 128 1 is_stmt 0 view .LVU71
 256 0000 30B5     		push	{r4, r5, lr}
 257              	.LCFI3:
 258              		.cfi_def_cfa_offset 12
 259              		.cfi_offset 4, -12
 260              		.cfi_offset 5, -8
 261              		.cfi_offset 14, -4
 262 0002 8DB0     		sub	sp, sp, #52
 263              	.LCFI4:
 264              		.cfi_def_cfa_offset 64
 265 0004 0446     		mov	r4, r0
 129:Core/Src/usart.c **** 
 130:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 266              		.loc 1 130 3 is_stmt 1 view .LVU72
 267              		.loc 1 130 20 is_stmt 0 view .LVU73
 268 0006 0023     		movs	r3, #0
 269 0008 0793     		str	r3, [sp, #28]
 270 000a 0893     		str	r3, [sp, #32]
 271 000c 0993     		str	r3, [sp, #36]
 272 000e 0A93     		str	r3, [sp, #40]
 273 0010 0B93     		str	r3, [sp, #44]
ARM GAS  /tmp/ccNLyxz3.s 			page 8


 131:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 274              		.loc 1 131 3 is_stmt 1 view .LVU74
 275              		.loc 1 131 16 is_stmt 0 view .LVU75
 276 0012 0368     		ldr	r3, [r0]
 277              		.loc 1 131 5 view .LVU76
 278 0014 6C4A     		ldr	r2, .L33
 279 0016 9342     		cmp	r3, r2
 280 0018 08D0     		beq	.L27
 132:Core/Src/usart.c ****   {
 133:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
 134:Core/Src/usart.c **** 
 135:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
 136:Core/Src/usart.c ****     /* USART1 clock enable */
 137:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 138:Core/Src/usart.c **** 
 139:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 140:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 141:Core/Src/usart.c ****     PA9     ------> USART1_TX
 142:Core/Src/usart.c ****     PA10     ------> USART1_RX
 143:Core/Src/usart.c ****     */
 144:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 145:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 146:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 147:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 148:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 149:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 150:Core/Src/usart.c **** 
 151:Core/Src/usart.c ****     /* USART1 DMA Init */
 152:Core/Src/usart.c ****     /* USART1_RX Init */
 153:Core/Src/usart.c ****     hdma_usart1_rx.Instance = DMA2_Stream2;
 154:Core/Src/usart.c ****     hdma_usart1_rx.Init.Channel = DMA_CHANNEL_4;
 155:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 156:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 157:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 158:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 159:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 160:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 161:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 162:Core/Src/usart.c ****     hdma_usart1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 163:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 164:Core/Src/usart.c ****     {
 165:Core/Src/usart.c ****       Error_Handler();
 166:Core/Src/usart.c ****     }
 167:Core/Src/usart.c **** 
 168:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart1_rx);
 169:Core/Src/usart.c **** 
 170:Core/Src/usart.c ****     /* USART1 interrupt Init */
 171:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 2, 0);
 172:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 173:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 174:Core/Src/usart.c **** 
 175:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
 176:Core/Src/usart.c ****   }
 177:Core/Src/usart.c ****   else if(uartHandle->Instance==USART2)
 281              		.loc 1 177 8 is_stmt 1 view .LVU77
 282              		.loc 1 177 10 is_stmt 0 view .LVU78
 283 001a 6C4A     		ldr	r2, .L33+4
ARM GAS  /tmp/ccNLyxz3.s 			page 9


 284 001c 9342     		cmp	r3, r2
 285 001e 4AD0     		beq	.L28
 178:Core/Src/usart.c ****   {
 179:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
 180:Core/Src/usart.c **** 
 181:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 0 */
 182:Core/Src/usart.c ****     /* USART2 clock enable */
 183:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
 184:Core/Src/usart.c **** 
 185:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 186:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 187:Core/Src/usart.c ****     PA2     ------> USART2_TX
 188:Core/Src/usart.c ****     PA3     ------> USART2_RX
 189:Core/Src/usart.c ****     */
 190:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 191:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 192:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 193:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 194:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 195:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 196:Core/Src/usart.c **** 
 197:Core/Src/usart.c ****     /* USART2 DMA Init */
 198:Core/Src/usart.c ****     /* USART2_RX Init */
 199:Core/Src/usart.c ****     hdma_usart2_rx.Instance = DMA1_Stream5;
 200:Core/Src/usart.c ****     hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 201:Core/Src/usart.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 202:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 203:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 204:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 205:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 206:Core/Src/usart.c ****     hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 207:Core/Src/usart.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 208:Core/Src/usart.c ****     hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 209:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 210:Core/Src/usart.c ****     {
 211:Core/Src/usart.c ****       Error_Handler();
 212:Core/Src/usart.c ****     }
 213:Core/Src/usart.c **** 
 214:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart2_rx);
 215:Core/Src/usart.c **** 
 216:Core/Src/usart.c ****     /* USART2 interrupt Init */
 217:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART2_IRQn, 2, 0);
 218:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 219:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 220:Core/Src/usart.c **** 
 221:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 1 */
 222:Core/Src/usart.c ****   }
 223:Core/Src/usart.c ****   else if(uartHandle->Instance==USART3)
 286              		.loc 1 223 8 is_stmt 1 view .LVU79
 287              		.loc 1 223 10 is_stmt 0 view .LVU80
 288 0020 6B4A     		ldr	r2, .L33+8
 289 0022 9342     		cmp	r3, r2
 290 0024 00F08B80 		beq	.L29
 291              	.LVL8:
 292              	.L19:
 224:Core/Src/usart.c ****   {
 225:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
ARM GAS  /tmp/ccNLyxz3.s 			page 10


 226:Core/Src/usart.c **** 
 227:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 0 */
 228:Core/Src/usart.c ****     /* USART3 clock enable */
 229:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_ENABLE();
 230:Core/Src/usart.c **** 
 231:Core/Src/usart.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 232:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 233:Core/Src/usart.c ****     PB10     ------> USART3_TX
 234:Core/Src/usart.c ****     PB11     ------> USART3_RX
 235:Core/Src/usart.c ****     */
 236:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 237:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 238:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 239:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 240:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 241:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 242:Core/Src/usart.c **** 
 243:Core/Src/usart.c ****     /* USART3 DMA Init */
 244:Core/Src/usart.c ****     /* USART3_RX Init */
 245:Core/Src/usart.c ****     hdma_usart3_rx.Instance = DMA1_Stream1;
 246:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 247:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 248:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 249:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 250:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 251:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 252:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 253:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 254:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 255:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 256:Core/Src/usart.c ****     {
 257:Core/Src/usart.c ****       Error_Handler();
 258:Core/Src/usart.c ****     }
 259:Core/Src/usart.c **** 
 260:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart3_rx);
 261:Core/Src/usart.c **** 
 262:Core/Src/usart.c ****     /* USART3 interrupt Init */
 263:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART3_IRQn, 2, 0);
 264:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 265:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 266:Core/Src/usart.c **** 
 267:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 1 */
 268:Core/Src/usart.c ****   }
 269:Core/Src/usart.c **** }
 293              		.loc 1 269 1 view .LVU81
 294 0028 0DB0     		add	sp, sp, #52
 295              	.LCFI5:
 296              		.cfi_remember_state
 297              		.cfi_def_cfa_offset 12
 298              		@ sp needed
 299 002a 30BD     		pop	{r4, r5, pc}
 300              	.LVL9:
 301              	.L27:
 302              	.LCFI6:
 303              		.cfi_restore_state
 137:Core/Src/usart.c **** 
 304              		.loc 1 137 5 is_stmt 1 view .LVU82
ARM GAS  /tmp/ccNLyxz3.s 			page 11


 305              	.LBB2:
 137:Core/Src/usart.c **** 
 306              		.loc 1 137 5 view .LVU83
 307 002c 0025     		movs	r5, #0
 308 002e 0195     		str	r5, [sp, #4]
 137:Core/Src/usart.c **** 
 309              		.loc 1 137 5 view .LVU84
 310 0030 684B     		ldr	r3, .L33+12
 311 0032 5A6C     		ldr	r2, [r3, #68]
 312 0034 42F01002 		orr	r2, r2, #16
 313 0038 5A64     		str	r2, [r3, #68]
 137:Core/Src/usart.c **** 
 314              		.loc 1 137 5 view .LVU85
 315 003a 5A6C     		ldr	r2, [r3, #68]
 316 003c 02F01002 		and	r2, r2, #16
 317 0040 0192     		str	r2, [sp, #4]
 137:Core/Src/usart.c **** 
 318              		.loc 1 137 5 view .LVU86
 319 0042 019A     		ldr	r2, [sp, #4]
 320              	.LBE2:
 137:Core/Src/usart.c **** 
 321              		.loc 1 137 5 view .LVU87
 139:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 322              		.loc 1 139 5 view .LVU88
 323              	.LBB3:
 139:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 324              		.loc 1 139 5 view .LVU89
 325 0044 0295     		str	r5, [sp, #8]
 139:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 326              		.loc 1 139 5 view .LVU90
 327 0046 1A6B     		ldr	r2, [r3, #48]
 328 0048 42F00102 		orr	r2, r2, #1
 329 004c 1A63     		str	r2, [r3, #48]
 139:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 330              		.loc 1 139 5 view .LVU91
 331 004e 1B6B     		ldr	r3, [r3, #48]
 332 0050 03F00103 		and	r3, r3, #1
 333 0054 0293     		str	r3, [sp, #8]
 139:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 334              		.loc 1 139 5 view .LVU92
 335 0056 029B     		ldr	r3, [sp, #8]
 336              	.LBE3:
 139:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 337              		.loc 1 139 5 view .LVU93
 144:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 338              		.loc 1 144 5 view .LVU94
 144:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 339              		.loc 1 144 25 is_stmt 0 view .LVU95
 340 0058 4FF4C063 		mov	r3, #1536
 341 005c 0793     		str	r3, [sp, #28]
 145:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 342              		.loc 1 145 5 is_stmt 1 view .LVU96
 145:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 343              		.loc 1 145 26 is_stmt 0 view .LVU97
 344 005e 0223     		movs	r3, #2
 345 0060 0893     		str	r3, [sp, #32]
 146:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
ARM GAS  /tmp/ccNLyxz3.s 			page 12


 346              		.loc 1 146 5 is_stmt 1 view .LVU98
 147:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 347              		.loc 1 147 5 view .LVU99
 147:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 348              		.loc 1 147 27 is_stmt 0 view .LVU100
 349 0062 0323     		movs	r3, #3
 350 0064 0A93     		str	r3, [sp, #40]
 148:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 351              		.loc 1 148 5 is_stmt 1 view .LVU101
 148:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 352              		.loc 1 148 31 is_stmt 0 view .LVU102
 353 0066 0723     		movs	r3, #7
 354 0068 0B93     		str	r3, [sp, #44]
 149:Core/Src/usart.c **** 
 355              		.loc 1 149 5 is_stmt 1 view .LVU103
 356 006a 07A9     		add	r1, sp, #28
 357 006c 5A48     		ldr	r0, .L33+16
 358              	.LVL10:
 149:Core/Src/usart.c **** 
 359              		.loc 1 149 5 is_stmt 0 view .LVU104
 360 006e FFF7FEFF 		bl	HAL_GPIO_Init
 361              	.LVL11:
 153:Core/Src/usart.c ****     hdma_usart1_rx.Init.Channel = DMA_CHANNEL_4;
 362              		.loc 1 153 5 is_stmt 1 view .LVU105
 153:Core/Src/usart.c ****     hdma_usart1_rx.Init.Channel = DMA_CHANNEL_4;
 363              		.loc 1 153 29 is_stmt 0 view .LVU106
 364 0072 5A48     		ldr	r0, .L33+20
 365 0074 5A4B     		ldr	r3, .L33+24
 366 0076 0360     		str	r3, [r0]
 154:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 367              		.loc 1 154 5 is_stmt 1 view .LVU107
 154:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 368              		.loc 1 154 33 is_stmt 0 view .LVU108
 369 0078 4FF00063 		mov	r3, #134217728
 370 007c 4360     		str	r3, [r0, #4]
 155:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 371              		.loc 1 155 5 is_stmt 1 view .LVU109
 155:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 372              		.loc 1 155 35 is_stmt 0 view .LVU110
 373 007e 8560     		str	r5, [r0, #8]
 156:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 374              		.loc 1 156 5 is_stmt 1 view .LVU111
 156:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 375              		.loc 1 156 35 is_stmt 0 view .LVU112
 376 0080 C560     		str	r5, [r0, #12]
 157:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 377              		.loc 1 157 5 is_stmt 1 view .LVU113
 157:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 378              		.loc 1 157 32 is_stmt 0 view .LVU114
 379 0082 4FF48063 		mov	r3, #1024
 380 0086 0361     		str	r3, [r0, #16]
 158:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 381              		.loc 1 158 5 is_stmt 1 view .LVU115
 158:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 382              		.loc 1 158 45 is_stmt 0 view .LVU116
 383 0088 4561     		str	r5, [r0, #20]
 159:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
ARM GAS  /tmp/ccNLyxz3.s 			page 13


 384              		.loc 1 159 5 is_stmt 1 view .LVU117
 159:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 385              		.loc 1 159 42 is_stmt 0 view .LVU118
 386 008a 8561     		str	r5, [r0, #24]
 160:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 387              		.loc 1 160 5 is_stmt 1 view .LVU119
 160:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 388              		.loc 1 160 30 is_stmt 0 view .LVU120
 389 008c C561     		str	r5, [r0, #28]
 161:Core/Src/usart.c ****     hdma_usart1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 390              		.loc 1 161 5 is_stmt 1 view .LVU121
 161:Core/Src/usart.c ****     hdma_usart1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 391              		.loc 1 161 34 is_stmt 0 view .LVU122
 392 008e 0562     		str	r5, [r0, #32]
 162:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 393              		.loc 1 162 5 is_stmt 1 view .LVU123
 162:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 394              		.loc 1 162 34 is_stmt 0 view .LVU124
 395 0090 4562     		str	r5, [r0, #36]
 163:Core/Src/usart.c ****     {
 396              		.loc 1 163 5 is_stmt 1 view .LVU125
 163:Core/Src/usart.c ****     {
 397              		.loc 1 163 9 is_stmt 0 view .LVU126
 398 0092 FFF7FEFF 		bl	HAL_DMA_Init
 399              	.LVL12:
 163:Core/Src/usart.c ****     {
 400              		.loc 1 163 8 view .LVU127
 401 0096 58B9     		cbnz	r0, .L30
 402              	.L21:
 168:Core/Src/usart.c **** 
 403              		.loc 1 168 5 is_stmt 1 view .LVU128
 168:Core/Src/usart.c **** 
 404              		.loc 1 168 5 view .LVU129
 405 0098 504B     		ldr	r3, .L33+20
 406 009a A363     		str	r3, [r4, #56]
 168:Core/Src/usart.c **** 
 407              		.loc 1 168 5 view .LVU130
 408 009c 9C63     		str	r4, [r3, #56]
 168:Core/Src/usart.c **** 
 409              		.loc 1 168 5 view .LVU131
 171:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 410              		.loc 1 171 5 view .LVU132
 411 009e 0022     		movs	r2, #0
 412 00a0 0221     		movs	r1, #2
 413 00a2 2520     		movs	r0, #37
 414 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 415              	.LVL13:
 172:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 416              		.loc 1 172 5 view .LVU133
 417 00a8 2520     		movs	r0, #37
 418 00aa FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 419              	.LVL14:
 420 00ae BBE7     		b	.L19
 421              	.L30:
 165:Core/Src/usart.c ****     }
 422              		.loc 1 165 7 view .LVU134
 423 00b0 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccNLyxz3.s 			page 14


 424              	.LVL15:
 425 00b4 F0E7     		b	.L21
 426              	.LVL16:
 427              	.L28:
 183:Core/Src/usart.c **** 
 428              		.loc 1 183 5 view .LVU135
 429              	.LBB4:
 183:Core/Src/usart.c **** 
 430              		.loc 1 183 5 view .LVU136
 431 00b6 0025     		movs	r5, #0
 432 00b8 0395     		str	r5, [sp, #12]
 183:Core/Src/usart.c **** 
 433              		.loc 1 183 5 view .LVU137
 434 00ba 464B     		ldr	r3, .L33+12
 435 00bc 1A6C     		ldr	r2, [r3, #64]
 436 00be 42F40032 		orr	r2, r2, #131072
 437 00c2 1A64     		str	r2, [r3, #64]
 183:Core/Src/usart.c **** 
 438              		.loc 1 183 5 view .LVU138
 439 00c4 1A6C     		ldr	r2, [r3, #64]
 440 00c6 02F40032 		and	r2, r2, #131072
 441 00ca 0392     		str	r2, [sp, #12]
 183:Core/Src/usart.c **** 
 442              		.loc 1 183 5 view .LVU139
 443 00cc 039A     		ldr	r2, [sp, #12]
 444              	.LBE4:
 183:Core/Src/usart.c **** 
 445              		.loc 1 183 5 view .LVU140
 185:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 446              		.loc 1 185 5 view .LVU141
 447              	.LBB5:
 185:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 448              		.loc 1 185 5 view .LVU142
 449 00ce 0495     		str	r5, [sp, #16]
 185:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 450              		.loc 1 185 5 view .LVU143
 451 00d0 1A6B     		ldr	r2, [r3, #48]
 452 00d2 42F00102 		orr	r2, r2, #1
 453 00d6 1A63     		str	r2, [r3, #48]
 185:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 454              		.loc 1 185 5 view .LVU144
 455 00d8 1B6B     		ldr	r3, [r3, #48]
 456 00da 03F00103 		and	r3, r3, #1
 457 00de 0493     		str	r3, [sp, #16]
 185:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 458              		.loc 1 185 5 view .LVU145
 459 00e0 049B     		ldr	r3, [sp, #16]
 460              	.LBE5:
 185:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 461              		.loc 1 185 5 view .LVU146
 190:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 462              		.loc 1 190 5 view .LVU147
 190:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 463              		.loc 1 190 25 is_stmt 0 view .LVU148
 464 00e2 0C23     		movs	r3, #12
 465 00e4 0793     		str	r3, [sp, #28]
 191:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccNLyxz3.s 			page 15


 466              		.loc 1 191 5 is_stmt 1 view .LVU149
 191:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 467              		.loc 1 191 26 is_stmt 0 view .LVU150
 468 00e6 0223     		movs	r3, #2
 469 00e8 0893     		str	r3, [sp, #32]
 192:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 470              		.loc 1 192 5 is_stmt 1 view .LVU151
 193:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 471              		.loc 1 193 5 view .LVU152
 193:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 472              		.loc 1 193 27 is_stmt 0 view .LVU153
 473 00ea 0323     		movs	r3, #3
 474 00ec 0A93     		str	r3, [sp, #40]
 194:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 475              		.loc 1 194 5 is_stmt 1 view .LVU154
 194:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 476              		.loc 1 194 31 is_stmt 0 view .LVU155
 477 00ee 0723     		movs	r3, #7
 478 00f0 0B93     		str	r3, [sp, #44]
 195:Core/Src/usart.c **** 
 479              		.loc 1 195 5 is_stmt 1 view .LVU156
 480 00f2 07A9     		add	r1, sp, #28
 481 00f4 3848     		ldr	r0, .L33+16
 482              	.LVL17:
 195:Core/Src/usart.c **** 
 483              		.loc 1 195 5 is_stmt 0 view .LVU157
 484 00f6 FFF7FEFF 		bl	HAL_GPIO_Init
 485              	.LVL18:
 199:Core/Src/usart.c ****     hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 486              		.loc 1 199 5 is_stmt 1 view .LVU158
 199:Core/Src/usart.c ****     hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 487              		.loc 1 199 29 is_stmt 0 view .LVU159
 488 00fa 3A48     		ldr	r0, .L33+28
 489 00fc 3A4B     		ldr	r3, .L33+32
 490 00fe 0360     		str	r3, [r0]
 200:Core/Src/usart.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 491              		.loc 1 200 5 is_stmt 1 view .LVU160
 200:Core/Src/usart.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 492              		.loc 1 200 33 is_stmt 0 view .LVU161
 493 0100 4FF00063 		mov	r3, #134217728
 494 0104 4360     		str	r3, [r0, #4]
 201:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 495              		.loc 1 201 5 is_stmt 1 view .LVU162
 201:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 496              		.loc 1 201 35 is_stmt 0 view .LVU163
 497 0106 8560     		str	r5, [r0, #8]
 202:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 498              		.loc 1 202 5 is_stmt 1 view .LVU164
 202:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 499              		.loc 1 202 35 is_stmt 0 view .LVU165
 500 0108 C560     		str	r5, [r0, #12]
 203:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 501              		.loc 1 203 5 is_stmt 1 view .LVU166
 203:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 502              		.loc 1 203 32 is_stmt 0 view .LVU167
 503 010a 4FF48063 		mov	r3, #1024
 504 010e 0361     		str	r3, [r0, #16]
ARM GAS  /tmp/ccNLyxz3.s 			page 16


 204:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 505              		.loc 1 204 5 is_stmt 1 view .LVU168
 204:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 506              		.loc 1 204 45 is_stmt 0 view .LVU169
 507 0110 4561     		str	r5, [r0, #20]
 205:Core/Src/usart.c ****     hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 508              		.loc 1 205 5 is_stmt 1 view .LVU170
 205:Core/Src/usart.c ****     hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 509              		.loc 1 205 42 is_stmt 0 view .LVU171
 510 0112 8561     		str	r5, [r0, #24]
 206:Core/Src/usart.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 511              		.loc 1 206 5 is_stmt 1 view .LVU172
 206:Core/Src/usart.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 512              		.loc 1 206 30 is_stmt 0 view .LVU173
 513 0114 C561     		str	r5, [r0, #28]
 207:Core/Src/usart.c ****     hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 514              		.loc 1 207 5 is_stmt 1 view .LVU174
 207:Core/Src/usart.c ****     hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 515              		.loc 1 207 34 is_stmt 0 view .LVU175
 516 0116 0562     		str	r5, [r0, #32]
 208:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 517              		.loc 1 208 5 is_stmt 1 view .LVU176
 208:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 518              		.loc 1 208 34 is_stmt 0 view .LVU177
 519 0118 4562     		str	r5, [r0, #36]
 209:Core/Src/usart.c ****     {
 520              		.loc 1 209 5 is_stmt 1 view .LVU178
 209:Core/Src/usart.c ****     {
 521              		.loc 1 209 9 is_stmt 0 view .LVU179
 522 011a FFF7FEFF 		bl	HAL_DMA_Init
 523              	.LVL19:
 209:Core/Src/usart.c ****     {
 524              		.loc 1 209 8 view .LVU180
 525 011e 58B9     		cbnz	r0, .L31
 526              	.L24:
 214:Core/Src/usart.c **** 
 527              		.loc 1 214 5 is_stmt 1 view .LVU181
 214:Core/Src/usart.c **** 
 528              		.loc 1 214 5 view .LVU182
 529 0120 304B     		ldr	r3, .L33+28
 530 0122 A363     		str	r3, [r4, #56]
 214:Core/Src/usart.c **** 
 531              		.loc 1 214 5 view .LVU183
 532 0124 9C63     		str	r4, [r3, #56]
 214:Core/Src/usart.c **** 
 533              		.loc 1 214 5 view .LVU184
 217:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 534              		.loc 1 217 5 view .LVU185
 535 0126 0022     		movs	r2, #0
 536 0128 0221     		movs	r1, #2
 537 012a 2620     		movs	r0, #38
 538 012c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 539              	.LVL20:
 218:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 540              		.loc 1 218 5 view .LVU186
 541 0130 2620     		movs	r0, #38
 542 0132 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  /tmp/ccNLyxz3.s 			page 17


 543              	.LVL21:
 544 0136 77E7     		b	.L19
 545              	.L31:
 211:Core/Src/usart.c ****     }
 546              		.loc 1 211 7 view .LVU187
 547 0138 FFF7FEFF 		bl	Error_Handler
 548              	.LVL22:
 549 013c F0E7     		b	.L24
 550              	.LVL23:
 551              	.L29:
 229:Core/Src/usart.c **** 
 552              		.loc 1 229 5 view .LVU188
 553              	.LBB6:
 229:Core/Src/usart.c **** 
 554              		.loc 1 229 5 view .LVU189
 555 013e 0025     		movs	r5, #0
 556 0140 0595     		str	r5, [sp, #20]
 229:Core/Src/usart.c **** 
 557              		.loc 1 229 5 view .LVU190
 558 0142 244B     		ldr	r3, .L33+12
 559 0144 1A6C     		ldr	r2, [r3, #64]
 560 0146 42F48022 		orr	r2, r2, #262144
 561 014a 1A64     		str	r2, [r3, #64]
 229:Core/Src/usart.c **** 
 562              		.loc 1 229 5 view .LVU191
 563 014c 1A6C     		ldr	r2, [r3, #64]
 564 014e 02F48022 		and	r2, r2, #262144
 565 0152 0592     		str	r2, [sp, #20]
 229:Core/Src/usart.c **** 
 566              		.loc 1 229 5 view .LVU192
 567 0154 059A     		ldr	r2, [sp, #20]
 568              	.LBE6:
 229:Core/Src/usart.c **** 
 569              		.loc 1 229 5 view .LVU193
 231:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 570              		.loc 1 231 5 view .LVU194
 571              	.LBB7:
 231:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 572              		.loc 1 231 5 view .LVU195
 573 0156 0695     		str	r5, [sp, #24]
 231:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 574              		.loc 1 231 5 view .LVU196
 575 0158 1A6B     		ldr	r2, [r3, #48]
 576 015a 42F00202 		orr	r2, r2, #2
 577 015e 1A63     		str	r2, [r3, #48]
 231:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 578              		.loc 1 231 5 view .LVU197
 579 0160 1B6B     		ldr	r3, [r3, #48]
 580 0162 03F00203 		and	r3, r3, #2
 581 0166 0693     		str	r3, [sp, #24]
 231:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 582              		.loc 1 231 5 view .LVU198
 583 0168 069B     		ldr	r3, [sp, #24]
 584              	.LBE7:
 231:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 585              		.loc 1 231 5 view .LVU199
 236:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccNLyxz3.s 			page 18


 586              		.loc 1 236 5 view .LVU200
 236:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 587              		.loc 1 236 25 is_stmt 0 view .LVU201
 588 016a 4FF44063 		mov	r3, #3072
 589 016e 0793     		str	r3, [sp, #28]
 237:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 590              		.loc 1 237 5 is_stmt 1 view .LVU202
 237:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 591              		.loc 1 237 26 is_stmt 0 view .LVU203
 592 0170 0223     		movs	r3, #2
 593 0172 0893     		str	r3, [sp, #32]
 238:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 594              		.loc 1 238 5 is_stmt 1 view .LVU204
 239:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 595              		.loc 1 239 5 view .LVU205
 239:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 596              		.loc 1 239 27 is_stmt 0 view .LVU206
 597 0174 0323     		movs	r3, #3
 598 0176 0A93     		str	r3, [sp, #40]
 240:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 599              		.loc 1 240 5 is_stmt 1 view .LVU207
 240:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 600              		.loc 1 240 31 is_stmt 0 view .LVU208
 601 0178 0723     		movs	r3, #7
 602 017a 0B93     		str	r3, [sp, #44]
 241:Core/Src/usart.c **** 
 603              		.loc 1 241 5 is_stmt 1 view .LVU209
 604 017c 07A9     		add	r1, sp, #28
 605 017e 1B48     		ldr	r0, .L33+36
 606              	.LVL24:
 241:Core/Src/usart.c **** 
 607              		.loc 1 241 5 is_stmt 0 view .LVU210
 608 0180 FFF7FEFF 		bl	HAL_GPIO_Init
 609              	.LVL25:
 245:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 610              		.loc 1 245 5 is_stmt 1 view .LVU211
 245:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 611              		.loc 1 245 29 is_stmt 0 view .LVU212
 612 0184 1A48     		ldr	r0, .L33+40
 613 0186 1B4B     		ldr	r3, .L33+44
 614 0188 0360     		str	r3, [r0]
 246:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 615              		.loc 1 246 5 is_stmt 1 view .LVU213
 246:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 616              		.loc 1 246 33 is_stmt 0 view .LVU214
 617 018a 4FF00063 		mov	r3, #134217728
 618 018e 4360     		str	r3, [r0, #4]
 247:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 619              		.loc 1 247 5 is_stmt 1 view .LVU215
 247:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 620              		.loc 1 247 35 is_stmt 0 view .LVU216
 621 0190 8560     		str	r5, [r0, #8]
 248:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 622              		.loc 1 248 5 is_stmt 1 view .LVU217
 248:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 623              		.loc 1 248 35 is_stmt 0 view .LVU218
 624 0192 C560     		str	r5, [r0, #12]
ARM GAS  /tmp/ccNLyxz3.s 			page 19


 249:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 625              		.loc 1 249 5 is_stmt 1 view .LVU219
 249:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 626              		.loc 1 249 32 is_stmt 0 view .LVU220
 627 0194 4FF48063 		mov	r3, #1024
 628 0198 0361     		str	r3, [r0, #16]
 250:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 629              		.loc 1 250 5 is_stmt 1 view .LVU221
 250:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 630              		.loc 1 250 45 is_stmt 0 view .LVU222
 631 019a 4561     		str	r5, [r0, #20]
 251:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 632              		.loc 1 251 5 is_stmt 1 view .LVU223
 251:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 633              		.loc 1 251 42 is_stmt 0 view .LVU224
 634 019c 8561     		str	r5, [r0, #24]
 252:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 635              		.loc 1 252 5 is_stmt 1 view .LVU225
 252:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 636              		.loc 1 252 30 is_stmt 0 view .LVU226
 637 019e C561     		str	r5, [r0, #28]
 253:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 638              		.loc 1 253 5 is_stmt 1 view .LVU227
 253:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 639              		.loc 1 253 34 is_stmt 0 view .LVU228
 640 01a0 0562     		str	r5, [r0, #32]
 254:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 641              		.loc 1 254 5 is_stmt 1 view .LVU229
 254:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 642              		.loc 1 254 34 is_stmt 0 view .LVU230
 643 01a2 4562     		str	r5, [r0, #36]
 255:Core/Src/usart.c ****     {
 644              		.loc 1 255 5 is_stmt 1 view .LVU231
 255:Core/Src/usart.c ****     {
 645              		.loc 1 255 9 is_stmt 0 view .LVU232
 646 01a4 FFF7FEFF 		bl	HAL_DMA_Init
 647              	.LVL26:
 255:Core/Src/usart.c ****     {
 648              		.loc 1 255 8 view .LVU233
 649 01a8 58B9     		cbnz	r0, .L32
 650              	.L25:
 260:Core/Src/usart.c **** 
 651              		.loc 1 260 5 is_stmt 1 view .LVU234
 260:Core/Src/usart.c **** 
 652              		.loc 1 260 5 view .LVU235
 653 01aa 114B     		ldr	r3, .L33+40
 654 01ac A363     		str	r3, [r4, #56]
 260:Core/Src/usart.c **** 
 655              		.loc 1 260 5 view .LVU236
 656 01ae 9C63     		str	r4, [r3, #56]
 260:Core/Src/usart.c **** 
 657              		.loc 1 260 5 view .LVU237
 263:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 658              		.loc 1 263 5 view .LVU238
 659 01b0 0022     		movs	r2, #0
 660 01b2 0221     		movs	r1, #2
 661 01b4 2720     		movs	r0, #39
ARM GAS  /tmp/ccNLyxz3.s 			page 20


 662 01b6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 663              	.LVL27:
 264:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 664              		.loc 1 264 5 view .LVU239
 665 01ba 2720     		movs	r0, #39
 666 01bc FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 667              	.LVL28:
 668              		.loc 1 269 1 is_stmt 0 view .LVU240
 669 01c0 32E7     		b	.L19
 670              	.L32:
 257:Core/Src/usart.c ****     }
 671              		.loc 1 257 7 is_stmt 1 view .LVU241
 672 01c2 FFF7FEFF 		bl	Error_Handler
 673              	.LVL29:
 674 01c6 F0E7     		b	.L25
 675              	.L34:
 676              		.align	2
 677              	.L33:
 678 01c8 00100140 		.word	1073811456
 679 01cc 00440040 		.word	1073759232
 680 01d0 00480040 		.word	1073760256
 681 01d4 00380240 		.word	1073887232
 682 01d8 00000240 		.word	1073872896
 683 01dc 00000000 		.word	hdma_usart1_rx
 684 01e0 40640240 		.word	1073898560
 685 01e4 00000000 		.word	hdma_usart2_rx
 686 01e8 88600240 		.word	1073897608
 687 01ec 00040240 		.word	1073873920
 688 01f0 00000000 		.word	hdma_usart3_rx
 689 01f4 28600240 		.word	1073897512
 690              		.cfi_endproc
 691              	.LFE136:
 693              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 694              		.align	1
 695              		.global	HAL_UART_MspDeInit
 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 700              	HAL_UART_MspDeInit:
 701              	.LVL30:
 702              	.LFB137:
 270:Core/Src/usart.c **** 
 271:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 272:Core/Src/usart.c **** {
 703              		.loc 1 272 1 view -0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              		.loc 1 272 1 is_stmt 0 view .LVU243
 708 0000 10B5     		push	{r4, lr}
 709              	.LCFI7:
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 4, -8
 712              		.cfi_offset 14, -4
 713 0002 0446     		mov	r4, r0
 273:Core/Src/usart.c **** 
 274:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
ARM GAS  /tmp/ccNLyxz3.s 			page 21


 714              		.loc 1 274 3 is_stmt 1 view .LVU244
 715              		.loc 1 274 16 is_stmt 0 view .LVU245
 716 0004 0368     		ldr	r3, [r0]
 717              		.loc 1 274 5 view .LVU246
 718 0006 1F4A     		ldr	r2, .L43
 719 0008 9342     		cmp	r3, r2
 720 000a 06D0     		beq	.L40
 275:Core/Src/usart.c ****   {
 276:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 277:Core/Src/usart.c **** 
 278:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 279:Core/Src/usart.c ****     /* Peripheral clock disable */
 280:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 281:Core/Src/usart.c **** 
 282:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 283:Core/Src/usart.c ****     PA9     ------> USART1_TX
 284:Core/Src/usart.c ****     PA10     ------> USART1_RX
 285:Core/Src/usart.c ****     */
 286:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 287:Core/Src/usart.c **** 
 288:Core/Src/usart.c ****     /* USART1 DMA DeInit */
 289:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 290:Core/Src/usart.c **** 
 291:Core/Src/usart.c ****     /* USART1 interrupt Deinit */
 292:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 293:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 294:Core/Src/usart.c **** 
 295:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 296:Core/Src/usart.c ****   }
 297:Core/Src/usart.c ****   else if(uartHandle->Instance==USART2)
 721              		.loc 1 297 8 is_stmt 1 view .LVU247
 722              		.loc 1 297 10 is_stmt 0 view .LVU248
 723 000c 1E4A     		ldr	r2, .L43+4
 724 000e 9342     		cmp	r3, r2
 725 0010 15D0     		beq	.L41
 298:Core/Src/usart.c ****   {
 299:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 300:Core/Src/usart.c **** 
 301:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 0 */
 302:Core/Src/usart.c ****     /* Peripheral clock disable */
 303:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 304:Core/Src/usart.c **** 
 305:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 306:Core/Src/usart.c ****     PA2     ------> USART2_TX
 307:Core/Src/usart.c ****     PA3     ------> USART2_RX
 308:Core/Src/usart.c ****     */
 309:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 310:Core/Src/usart.c **** 
 311:Core/Src/usart.c ****     /* USART2 DMA DeInit */
 312:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 313:Core/Src/usart.c **** 
 314:Core/Src/usart.c ****     /* USART2 interrupt Deinit */
 315:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 316:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 317:Core/Src/usart.c **** 
 318:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 1 */
 319:Core/Src/usart.c ****   }
ARM GAS  /tmp/ccNLyxz3.s 			page 22


 320:Core/Src/usart.c ****   else if(uartHandle->Instance==USART3)
 726              		.loc 1 320 8 is_stmt 1 view .LVU249
 727              		.loc 1 320 10 is_stmt 0 view .LVU250
 728 0012 1E4A     		ldr	r2, .L43+8
 729 0014 9342     		cmp	r3, r2
 730 0016 23D0     		beq	.L42
 731              	.LVL31:
 732              	.L35:
 321:Core/Src/usart.c ****   {
 322:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 323:Core/Src/usart.c **** 
 324:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 0 */
 325:Core/Src/usart.c ****     /* Peripheral clock disable */
 326:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 327:Core/Src/usart.c **** 
 328:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 329:Core/Src/usart.c ****     PB10     ------> USART3_TX
 330:Core/Src/usart.c ****     PB11     ------> USART3_RX
 331:Core/Src/usart.c ****     */
 332:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10|GPIO_PIN_11);
 333:Core/Src/usart.c **** 
 334:Core/Src/usart.c ****     /* USART3 DMA DeInit */
 335:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 336:Core/Src/usart.c **** 
 337:Core/Src/usart.c ****     /* USART3 interrupt Deinit */
 338:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
 339:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 340:Core/Src/usart.c **** 
 341:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 1 */
 342:Core/Src/usart.c ****   }
 343:Core/Src/usart.c **** }
 733              		.loc 1 343 1 view .LVU251
 734 0018 10BD     		pop	{r4, pc}
 735              	.LVL32:
 736              	.L40:
 280:Core/Src/usart.c **** 
 737              		.loc 1 280 5 is_stmt 1 view .LVU252
 738 001a 02F59432 		add	r2, r2, #75776
 739 001e 536C     		ldr	r3, [r2, #68]
 740 0020 23F01003 		bic	r3, r3, #16
 741 0024 5364     		str	r3, [r2, #68]
 286:Core/Src/usart.c **** 
 742              		.loc 1 286 5 view .LVU253
 743 0026 4FF4C061 		mov	r1, #1536
 744 002a 1948     		ldr	r0, .L43+12
 745              	.LVL33:
 286:Core/Src/usart.c **** 
 746              		.loc 1 286 5 is_stmt 0 view .LVU254
 747 002c FFF7FEFF 		bl	HAL_GPIO_DeInit
 748              	.LVL34:
 289:Core/Src/usart.c **** 
 749              		.loc 1 289 5 is_stmt 1 view .LVU255
 750 0030 A06B     		ldr	r0, [r4, #56]
 751 0032 FFF7FEFF 		bl	HAL_DMA_DeInit
 752              	.LVL35:
 292:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 753              		.loc 1 292 5 view .LVU256
ARM GAS  /tmp/ccNLyxz3.s 			page 23


 754 0036 2520     		movs	r0, #37
 755 0038 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 756              	.LVL36:
 757 003c ECE7     		b	.L35
 758              	.LVL37:
 759              	.L41:
 303:Core/Src/usart.c **** 
 760              		.loc 1 303 5 view .LVU257
 761 003e 02F5FA32 		add	r2, r2, #128000
 762 0042 136C     		ldr	r3, [r2, #64]
 763 0044 23F40033 		bic	r3, r3, #131072
 764 0048 1364     		str	r3, [r2, #64]
 309:Core/Src/usart.c **** 
 765              		.loc 1 309 5 view .LVU258
 766 004a 0C21     		movs	r1, #12
 767 004c 1048     		ldr	r0, .L43+12
 768              	.LVL38:
 309:Core/Src/usart.c **** 
 769              		.loc 1 309 5 is_stmt 0 view .LVU259
 770 004e FFF7FEFF 		bl	HAL_GPIO_DeInit
 771              	.LVL39:
 312:Core/Src/usart.c **** 
 772              		.loc 1 312 5 is_stmt 1 view .LVU260
 773 0052 A06B     		ldr	r0, [r4, #56]
 774 0054 FFF7FEFF 		bl	HAL_DMA_DeInit
 775              	.LVL40:
 315:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 776              		.loc 1 315 5 view .LVU261
 777 0058 2620     		movs	r0, #38
 778 005a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 779              	.LVL41:
 780 005e DBE7     		b	.L35
 781              	.LVL42:
 782              	.L42:
 326:Core/Src/usart.c **** 
 783              		.loc 1 326 5 view .LVU262
 784 0060 02F5F832 		add	r2, r2, #126976
 785 0064 136C     		ldr	r3, [r2, #64]
 786 0066 23F48023 		bic	r3, r3, #262144
 787 006a 1364     		str	r3, [r2, #64]
 332:Core/Src/usart.c **** 
 788              		.loc 1 332 5 view .LVU263
 789 006c 4FF44061 		mov	r1, #3072
 790 0070 0848     		ldr	r0, .L43+16
 791              	.LVL43:
 332:Core/Src/usart.c **** 
 792              		.loc 1 332 5 is_stmt 0 view .LVU264
 793 0072 FFF7FEFF 		bl	HAL_GPIO_DeInit
 794              	.LVL44:
 335:Core/Src/usart.c **** 
 795              		.loc 1 335 5 is_stmt 1 view .LVU265
 796 0076 A06B     		ldr	r0, [r4, #56]
 797 0078 FFF7FEFF 		bl	HAL_DMA_DeInit
 798              	.LVL45:
 338:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 799              		.loc 1 338 5 view .LVU266
 800 007c 2720     		movs	r0, #39
ARM GAS  /tmp/ccNLyxz3.s 			page 24


 801 007e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 802              	.LVL46:
 803              		.loc 1 343 1 is_stmt 0 view .LVU267
 804 0082 C9E7     		b	.L35
 805              	.L44:
 806              		.align	2
 807              	.L43:
 808 0084 00100140 		.word	1073811456
 809 0088 00440040 		.word	1073759232
 810 008c 00480040 		.word	1073760256
 811 0090 00000240 		.word	1073872896
 812 0094 00040240 		.word	1073873920
 813              		.cfi_endproc
 814              	.LFE137:
 816              		.section	.text.__io_putchar,"ax",%progbits
 817              		.align	1
 818              		.global	__io_putchar
 819              		.syntax unified
 820              		.thumb
 821              		.thumb_func
 823              	__io_putchar:
 824              	.LVL47:
 825              	.LFB138:
 344:Core/Src/usart.c **** 
 345:Core/Src/usart.c **** /* USER CODE BEGIN 1 */
 346:Core/Src/usart.c **** #ifdef __GNUC__
 347:Core/Src/usart.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 348:Core/Src/usart.c **** #else
 349:Core/Src/usart.c **** #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
 350:Core/Src/usart.c **** #endif
 351:Core/Src/usart.c **** PUTCHAR_PROTOTYPE
 352:Core/Src/usart.c **** {
 826              		.loc 1 352 1 is_stmt 1 view -0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 8
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		.loc 1 352 1 is_stmt 0 view .LVU269
 831 0000 00B5     		push	{lr}
 832              	.LCFI8:
 833              		.cfi_def_cfa_offset 4
 834              		.cfi_offset 14, -4
 835 0002 83B0     		sub	sp, sp, #12
 836              	.LCFI9:
 837              		.cfi_def_cfa_offset 16
 838 0004 0190     		str	r0, [sp, #4]
 353:Core/Src/usart.c ****     HAL_UART_Transmit(&huart3, (uint8_t *)&ch, 1, 0xFFFF);
 839              		.loc 1 353 5 is_stmt 1 view .LVU270
 840 0006 4FF6FF73 		movw	r3, #65535
 841 000a 0122     		movs	r2, #1
 842 000c 01A9     		add	r1, sp, #4
 843 000e 0348     		ldr	r0, .L47
 844              	.LVL48:
 845              		.loc 1 353 5 is_stmt 0 view .LVU271
 846 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 847              	.LVL49:
 354:Core/Src/usart.c ****     return ch;
 848              		.loc 1 354 5 is_stmt 1 view .LVU272
ARM GAS  /tmp/ccNLyxz3.s 			page 25


 355:Core/Src/usart.c **** }
 849              		.loc 1 355 1 is_stmt 0 view .LVU273
 850 0014 0198     		ldr	r0, [sp, #4]
 851 0016 03B0     		add	sp, sp, #12
 852              	.LCFI10:
 853              		.cfi_def_cfa_offset 4
 854              		@ sp needed
 855 0018 5DF804FB 		ldr	pc, [sp], #4
 856              	.L48:
 857              		.align	2
 858              	.L47:
 859 001c 00000000 		.word	huart3
 860              		.cfi_endproc
 861              	.LFE138:
 863              		.section	.rodata.USER_UART_IDLECallback.str1.4,"aMS",%progbits,1
 864              		.align	2
 865              	.LC0:
 866 0000 75736172 		.ascii	"usart2_buffer:%s\012\000"
 866      74325F62 
 866      75666665 
 866      723A2573 
 866      0A00
 867 0012 0000     		.align	2
 868              	.LC1:
 869 0014 75736172 		.ascii	"usart3_buffer:%s\012\000"
 869      74335F62 
 869      75666665 
 869      723A2573 
 869      0A00
 870 0026 0000     		.align	2
 871              	.LC2:
 872 0028 75736172 		.ascii	"usart1_buffer:%s\012\000"
 872      74315F62 
 872      75666665 
 872      723A2573 
 872      0A00
 873              		.section	.text.USER_UART_IDLECallback,"ax",%progbits
 874              		.align	1
 875              		.global	USER_UART_IDLECallback
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 880              	USER_UART_IDLECallback:
 881              	.LVL50:
 882              	.LFB139:
 356:Core/Src/usart.c **** void USER_UART_IDLECallback(UART_HandleTypeDef *huart)
 357:Core/Src/usart.c **** {
 883              		.loc 1 357 1 is_stmt 1 view -0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 8
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              		.loc 1 357 1 is_stmt 0 view .LVU275
 888 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 889              	.LCFI11:
 890              		.cfi_def_cfa_offset 36
 891              		.cfi_offset 4, -36
 892              		.cfi_offset 5, -32
ARM GAS  /tmp/ccNLyxz3.s 			page 26


 893              		.cfi_offset 6, -28
 894              		.cfi_offset 7, -24
 895              		.cfi_offset 8, -20
 896              		.cfi_offset 9, -16
 897              		.cfi_offset 10, -12
 898              		.cfi_offset 11, -8
 899              		.cfi_offset 14, -4
 900 0004 83B0     		sub	sp, sp, #12
 901              	.LCFI12:
 902              		.cfi_def_cfa_offset 48
 903 0006 8146     		mov	r9, r0
 358:Core/Src/usart.c ****     HAL_UART_DMAStop(huart);
 904              		.loc 1 358 5 is_stmt 1 view .LVU276
 905 0008 FFF7FEFF 		bl	HAL_UART_DMAStop
 906              	.LVL51:
 359:Core/Src/usart.c **** 
 360:Core/Src/usart.c ****     char **argv = (char **)malloc(sizeof(char *) * 10);
 907              		.loc 1 360 5 view .LVU277
 908              		.loc 1 360 28 is_stmt 0 view .LVU278
 909 000c 2820     		movs	r0, #40
 910 000e FFF7FEFF 		bl	malloc
 911              	.LVL52:
 912 0012 0646     		mov	r6, r0
 913              	.LVL53:
 361:Core/Src/usart.c ****     int argc = 0;
 914              		.loc 1 361 5 is_stmt 1 view .LVU279
 362:Core/Src/usart.c ****     int tem_p = 0;
 915              		.loc 1 362 5 view .LVU280
 363:Core/Src/usart.c ****     int len;
 916              		.loc 1 363 5 view .LVU281
 364:Core/Src/usart.c ****     char *buffer;
 917              		.loc 1 364 5 view .LVU282
 365:Core/Src/usart.c ****     if (huart->Instance == huart2.Instance)
 918              		.loc 1 365 5 view .LVU283
 919              		.loc 1 365 14 is_stmt 0 view .LVU284
 920 0014 D9F80030 		ldr	r3, [r9]
 921              		.loc 1 365 34 view .LVU285
 922 0018 3D4A     		ldr	r2, .L64
 923 001a 1268     		ldr	r2, [r2]
 924              		.loc 1 365 8 view .LVU286
 925 001c 9342     		cmp	r3, r2
 926 001e 0BD0     		beq	.L61
 366:Core/Src/usart.c ****     {
 367:Core/Src/usart.c ****         len = STR_MAX_SIZE - __HAL_DMA_GET_COUNTER(&hdma_usart2_rx);
 368:Core/Src/usart.c ****         buffer = usart2_buffer;
 369:Core/Src/usart.c ****         printf("usart2_buffer:%s\n", usart2_buffer);
 370:Core/Src/usart.c ****     }
 371:Core/Src/usart.c ****     else if (huart->Instance == huart3.Instance)
 927              		.loc 1 371 10 is_stmt 1 view .LVU287
 928              		.loc 1 371 39 is_stmt 0 view .LVU288
 929 0020 3C4A     		ldr	r2, .L64+4
 930 0022 1268     		ldr	r2, [r2]
 931              		.loc 1 371 13 view .LVU289
 932 0024 9342     		cmp	r3, r2
 933 0026 13D0     		beq	.L62
 372:Core/Src/usart.c ****     {
 373:Core/Src/usart.c ****         len = STR_MAX_SIZE - __HAL_DMA_GET_COUNTER(&hdma_usart3_rx);
ARM GAS  /tmp/ccNLyxz3.s 			page 27


 374:Core/Src/usart.c ****         printf("usart3_buffer:%s\n", usart3_buffer);
 375:Core/Src/usart.c ****         buffer = usart3_buffer;
 376:Core/Src/usart.c ****     }
 377:Core/Src/usart.c ****     else if (huart->Instance == huart1.Instance)
 934              		.loc 1 377 10 is_stmt 1 view .LVU290
 935              		.loc 1 377 39 is_stmt 0 view .LVU291
 936 0028 3B4A     		ldr	r2, .L64+8
 937 002a 1268     		ldr	r2, [r2]
 938              		.loc 1 377 13 view .LVU292
 939 002c 9342     		cmp	r3, r2
 940 002e 1BD0     		beq	.L63
 941              	.LVL54:
 942              	.L51:
 378:Core/Src/usart.c ****     {
 379:Core/Src/usart.c ****         len = STR_MAX_SIZE - __HAL_DMA_GET_COUNTER(&hdma_usart1_rx);
 380:Core/Src/usart.c ****         printf("usart1_buffer:%s\n", usart1_buffer);
 381:Core/Src/usart.c ****         buffer = usart1_buffer;
 382:Core/Src/usart.c ****     }
 383:Core/Src/usart.c **** 
 384:Core/Src/usart.c ****     for (int i = 0; i < len; i++)
 943              		.loc 1 384 5 is_stmt 1 view .LVU293
 944              	.LBB8:
 945              		.loc 1 384 10 view .LVU294
 946              		.loc 1 384 14 is_stmt 0 view .LVU295
 947 0030 0024     		movs	r4, #0
 948              	.LBE8:
 362:Core/Src/usart.c ****     int len;
 949              		.loc 1 362 9 view .LVU296
 950 0032 A246     		mov	r10, r4
 361:Core/Src/usart.c ****     int tem_p = 0;
 951              		.loc 1 361 9 view .LVU297
 952 0034 2546     		mov	r5, r4
 953              	.LBB9:
 954              		.loc 1 384 5 view .LVU298
 955 0036 3BE0     		b	.L53
 956              	.LVL55:
 957              	.L61:
 958              		.loc 1 384 5 view .LVU299
 959              	.LBE9:
 367:Core/Src/usart.c ****         buffer = usart2_buffer;
 960              		.loc 1 367 9 is_stmt 1 view .LVU300
 367:Core/Src/usart.c ****         buffer = usart2_buffer;
 961              		.loc 1 367 30 is_stmt 0 view .LVU301
 962 0038 384B     		ldr	r3, .L64+12
 963 003a 1B68     		ldr	r3, [r3]
 964 003c 5F68     		ldr	r7, [r3, #4]
 367:Core/Src/usart.c ****         buffer = usart2_buffer;
 965              		.loc 1 367 28 view .LVU302
 966 003e C7F18007 		rsb	r7, r7, #128
 967              	.LVL56:
 368:Core/Src/usart.c ****         printf("usart2_buffer:%s\n", usart2_buffer);
 968              		.loc 1 368 9 is_stmt 1 view .LVU303
 369:Core/Src/usart.c ****     }
 969              		.loc 1 369 9 view .LVU304
 970 0042 374C     		ldr	r4, .L64+16
 971 0044 2146     		mov	r1, r4
 972 0046 3748     		ldr	r0, .L64+20
ARM GAS  /tmp/ccNLyxz3.s 			page 28


 973              	.LVL57:
 369:Core/Src/usart.c ****     }
 974              		.loc 1 369 9 is_stmt 0 view .LVU305
 975 0048 FFF7FEFF 		bl	printf
 976              	.LVL58:
 368:Core/Src/usart.c ****         printf("usart2_buffer:%s\n", usart2_buffer);
 977              		.loc 1 368 16 view .LVU306
 978 004c A046     		mov	r8, r4
 979 004e EFE7     		b	.L51
 980              	.LVL59:
 981              	.L62:
 373:Core/Src/usart.c ****         printf("usart3_buffer:%s\n", usart3_buffer);
 982              		.loc 1 373 9 is_stmt 1 view .LVU307
 373:Core/Src/usart.c ****         printf("usart3_buffer:%s\n", usart3_buffer);
 983              		.loc 1 373 30 is_stmt 0 view .LVU308
 984 0050 354B     		ldr	r3, .L64+24
 985 0052 1B68     		ldr	r3, [r3]
 986 0054 5F68     		ldr	r7, [r3, #4]
 373:Core/Src/usart.c ****         printf("usart3_buffer:%s\n", usart3_buffer);
 987              		.loc 1 373 28 view .LVU309
 988 0056 C7F18007 		rsb	r7, r7, #128
 989              	.LVL60:
 374:Core/Src/usart.c ****         buffer = usart3_buffer;
 990              		.loc 1 374 9 is_stmt 1 view .LVU310
 991 005a 344C     		ldr	r4, .L64+28
 992 005c 2146     		mov	r1, r4
 993 005e 3448     		ldr	r0, .L64+32
 994              	.LVL61:
 374:Core/Src/usart.c ****         buffer = usart3_buffer;
 995              		.loc 1 374 9 is_stmt 0 view .LVU311
 996 0060 FFF7FEFF 		bl	printf
 997              	.LVL62:
 375:Core/Src/usart.c ****     }
 998              		.loc 1 375 9 is_stmt 1 view .LVU312
 375:Core/Src/usart.c ****     }
 999              		.loc 1 375 16 is_stmt 0 view .LVU313
 1000 0064 A046     		mov	r8, r4
 1001 0066 E3E7     		b	.L51
 1002              	.LVL63:
 1003              	.L63:
 379:Core/Src/usart.c ****         printf("usart1_buffer:%s\n", usart1_buffer);
 1004              		.loc 1 379 9 is_stmt 1 view .LVU314
 379:Core/Src/usart.c ****         printf("usart1_buffer:%s\n", usart1_buffer);
 1005              		.loc 1 379 30 is_stmt 0 view .LVU315
 1006 0068 324B     		ldr	r3, .L64+36
 1007 006a 1B68     		ldr	r3, [r3]
 1008 006c 5F68     		ldr	r7, [r3, #4]
 379:Core/Src/usart.c ****         printf("usart1_buffer:%s\n", usart1_buffer);
 1009              		.loc 1 379 28 view .LVU316
 1010 006e C7F18007 		rsb	r7, r7, #128
 1011              	.LVL64:
 380:Core/Src/usart.c ****         buffer = usart1_buffer;
 1012              		.loc 1 380 9 is_stmt 1 view .LVU317
 1013 0072 314C     		ldr	r4, .L64+40
 1014 0074 2146     		mov	r1, r4
 1015 0076 3148     		ldr	r0, .L64+44
 1016              	.LVL65:
ARM GAS  /tmp/ccNLyxz3.s 			page 29


 380:Core/Src/usart.c ****         buffer = usart1_buffer;
 1017              		.loc 1 380 9 is_stmt 0 view .LVU318
 1018 0078 FFF7FEFF 		bl	printf
 1019              	.LVL66:
 381:Core/Src/usart.c ****     }
 1020              		.loc 1 381 9 is_stmt 1 view .LVU319
 381:Core/Src/usart.c ****     }
 1021              		.loc 1 381 16 is_stmt 0 view .LVU320
 1022 007c A046     		mov	r8, r4
 1023 007e D7E7     		b	.L51
 1024              	.LVL67:
 1025              	.L54:
 1026              	.LBB10:
 385:Core/Src/usart.c ****     {
 386:Core/Src/usart.c ****         if (buffer[i] == ' ' || i == len - 1)
 387:Core/Src/usart.c ****         {
 388:Core/Src/usart.c ****             argv[argc] = (char *)malloc(sizeof(char) * (i - tem_p + 1));
 1027              		.loc 1 388 13 is_stmt 1 view .LVU321
 1028              		.loc 1 388 59 is_stmt 0 view .LVU322
 1029 0080 A4EB0A0B 		sub	fp, r4, r10
 1030              		.loc 1 388 34 view .LVU323
 1031 0084 0BF10100 		add	r0, fp, #1
 1032 0088 FFF7FEFF 		bl	malloc
 1033              	.LVL68:
 1034              		.loc 1 388 24 view .LVU324
 1035 008c 46F82500 		str	r0, [r6, r5, lsl #2]
 389:Core/Src/usart.c ****             memcpy(argv[argc], buffer + tem_p, i - tem_p);
 1036              		.loc 1 389 13 is_stmt 1 view .LVU325
 1037 0090 5A46     		mov	r2, fp
 1038 0092 08EB0A01 		add	r1, r8, r10
 1039 0096 FFF7FEFF 		bl	memcpy
 1040              	.LVL69:
 390:Core/Src/usart.c ****             argv[argc][i - tem_p] = '\0';
 1041              		.loc 1 390 13 view .LVU326
 1042              		.loc 1 390 17 is_stmt 0 view .LVU327
 1043 009a 56F82530 		ldr	r3, [r6, r5, lsl #2]
 1044              		.loc 1 390 35 view .LVU328
 1045 009e 0022     		movs	r2, #0
 1046 00a0 03F80B20 		strb	r2, [r3, fp]
 391:Core/Src/usart.c ****             tem_p = i + 1;
 1047              		.loc 1 391 13 is_stmt 1 view .LVU329
 1048              		.loc 1 391 19 is_stmt 0 view .LVU330
 1049 00a4 04F1010A 		add	r10, r4, #1
 1050              	.LVL70:
 392:Core/Src/usart.c ****             argc++;
 1051              		.loc 1 392 13 is_stmt 1 view .LVU331
 1052              		.loc 1 392 17 is_stmt 0 view .LVU332
 1053 00a8 0135     		adds	r5, r5, #1
 1054              	.LVL71:
 393:Core/Src/usart.c ****             if (argc >= 10)
 1055              		.loc 1 393 13 is_stmt 1 view .LVU333
 1056              		.loc 1 393 16 is_stmt 0 view .LVU334
 1057 00aa 092D     		cmp	r5, #9
 1058 00ac 0ADC     		bgt	.L56
 1059              	.L55:
 384:Core/Src/usart.c ****     {
 1060              		.loc 1 384 31 is_stmt 1 discriminator 2 view .LVU335
ARM GAS  /tmp/ccNLyxz3.s 			page 30


 1061 00ae 0134     		adds	r4, r4, #1
 1062              	.LVL72:
 1063              	.L53:
 384:Core/Src/usart.c ****     {
 1064              		.loc 1 384 23 discriminator 1 view .LVU336
 1065 00b0 A742     		cmp	r7, r4
 1066 00b2 07DD     		ble	.L56
 386:Core/Src/usart.c ****         {
 1067              		.loc 1 386 9 view .LVU337
 386:Core/Src/usart.c ****         {
 1068              		.loc 1 386 19 is_stmt 0 view .LVU338
 1069 00b4 18F80430 		ldrb	r3, [r8, r4]	@ zero_extendqisi2
 386:Core/Src/usart.c ****         {
 1070              		.loc 1 386 12 view .LVU339
 1071 00b8 202B     		cmp	r3, #32
 1072 00ba E1D0     		beq	.L54
 386:Core/Src/usart.c ****         {
 1073              		.loc 1 386 42 discriminator 1 view .LVU340
 1074 00bc 7B1E     		subs	r3, r7, #1
 386:Core/Src/usart.c ****         {
 1075              		.loc 1 386 30 discriminator 1 view .LVU341
 1076 00be A342     		cmp	r3, r4
 1077 00c0 F5D1     		bne	.L55
 1078 00c2 DDE7     		b	.L54
 1079              	.L56:
 386:Core/Src/usart.c ****         {
 1080              		.loc 1 386 30 discriminator 1 view .LVU342
 1081              	.LBE10:
 394:Core/Src/usart.c ****                 break;
 395:Core/Src/usart.c ****         }
 396:Core/Src/usart.c ****     }
 397:Core/Src/usart.c ****     arg_prase(argc, argv);
 1082              		.loc 1 397 5 is_stmt 1 view .LVU343
 1083 00c4 3146     		mov	r1, r6
 1084 00c6 2846     		mov	r0, r5
 1085 00c8 FFF7FEFF 		bl	arg_prase
 1086              	.LVL73:
 398:Core/Src/usart.c ****     memset(buffer, 0, len);
 1087              		.loc 1 398 5 view .LVU344
 1088 00cc 3A46     		mov	r2, r7
 1089 00ce 0021     		movs	r1, #0
 1090 00d0 4046     		mov	r0, r8
 1091 00d2 FFF7FEFF 		bl	memset
 1092              	.LVL74:
 399:Core/Src/usart.c **** 
 400:Core/Src/usart.c ****     for (int i = 0; i < argc; i++)
 1093              		.loc 1 400 5 view .LVU345
 1094              	.LBB11:
 1095              		.loc 1 400 10 view .LVU346
 1096              		.loc 1 400 14 is_stmt 0 view .LVU347
 1097 00d6 0024     		movs	r4, #0
 1098              	.LVL75:
 1099              		.loc 1 400 5 view .LVU348
 1100 00d8 04E0     		b	.L58
 1101              	.LVL76:
 1102              	.L59:
 401:Core/Src/usart.c ****     {
ARM GAS  /tmp/ccNLyxz3.s 			page 31


 402:Core/Src/usart.c ****         free(argv[i]);
 1103              		.loc 1 402 9 is_stmt 1 discriminator 3 view .LVU349
 1104 00da 56F82400 		ldr	r0, [r6, r4, lsl #2]
 1105 00de FFF7FEFF 		bl	free
 1106              	.LVL77:
 400:Core/Src/usart.c ****     {
 1107              		.loc 1 400 32 discriminator 3 view .LVU350
 1108 00e2 0134     		adds	r4, r4, #1
 1109              	.LVL78:
 1110              	.L58:
 400:Core/Src/usart.c ****     {
 1111              		.loc 1 400 23 discriminator 1 view .LVU351
 1112 00e4 A542     		cmp	r5, r4
 1113 00e6 F8DC     		bgt	.L59
 1114              	.LBE11:
 403:Core/Src/usart.c ****     }
 404:Core/Src/usart.c ****     free(argv);
 1115              		.loc 1 404 5 view .LVU352
 1116 00e8 3046     		mov	r0, r6
 1117 00ea FFF7FEFF 		bl	free
 1118              	.LVL79:
 405:Core/Src/usart.c ****     HAL_UART_Receive_DMA(huart, buffer, STR_MAX_SIZE);
 1119              		.loc 1 405 5 view .LVU353
 1120 00ee 8022     		movs	r2, #128
 1121 00f0 4146     		mov	r1, r8
 1122 00f2 4846     		mov	r0, r9
 1123 00f4 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 1124              	.LVL80:
 406:Core/Src/usart.c ****     __HAL_UART_CLEAR_IDLEFLAG(huart);
 1125              		.loc 1 406 5 view .LVU354
 1126              	.LBB12:
 1127              		.loc 1 406 5 view .LVU355
 1128 00f8 0023     		movs	r3, #0
 1129 00fa 0193     		str	r3, [sp, #4]
 1130              		.loc 1 406 5 view .LVU356
 1131 00fc D9F80030 		ldr	r3, [r9]
 1132 0100 1A68     		ldr	r2, [r3]
 1133 0102 0192     		str	r2, [sp, #4]
 1134              		.loc 1 406 5 view .LVU357
 1135 0104 5B68     		ldr	r3, [r3, #4]
 1136 0106 0193     		str	r3, [sp, #4]
 1137              		.loc 1 406 5 view .LVU358
 1138 0108 019B     		ldr	r3, [sp, #4]
 1139              	.LBE12:
 1140              		.loc 1 406 5 view .LVU359
 407:Core/Src/usart.c **** }
 1141              		.loc 1 407 1 is_stmt 0 view .LVU360
 1142 010a 03B0     		add	sp, sp, #12
 1143              	.LCFI13:
 1144              		.cfi_def_cfa_offset 36
 1145              		@ sp needed
 1146 010c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1147              	.LVL81:
 1148              	.L65:
 1149              		.loc 1 407 1 view .LVU361
 1150              		.align	2
 1151              	.L64:
ARM GAS  /tmp/ccNLyxz3.s 			page 32


 1152 0110 00000000 		.word	huart2
 1153 0114 00000000 		.word	huart3
 1154 0118 00000000 		.word	huart1
 1155 011c 00000000 		.word	hdma_usart2_rx
 1156 0120 00000000 		.word	usart2_buffer
 1157 0124 00000000 		.word	.LC0
 1158 0128 00000000 		.word	hdma_usart3_rx
 1159 012c 00000000 		.word	usart3_buffer
 1160 0130 14000000 		.word	.LC1
 1161 0134 00000000 		.word	hdma_usart1_rx
 1162 0138 00000000 		.word	usart1_buffer
 1163 013c 28000000 		.word	.LC2
 1164              		.cfi_endproc
 1165              	.LFE139:
 1167              		.global	hdma_usart3_rx
 1168              		.section	.bss.hdma_usart3_rx,"aw",%nobits
 1169              		.align	2
 1172              	hdma_usart3_rx:
 1173 0000 00000000 		.space	96
 1173      00000000 
 1173      00000000 
 1173      00000000 
 1173      00000000 
 1174              		.global	hdma_usart2_rx
 1175              		.section	.bss.hdma_usart2_rx,"aw",%nobits
 1176              		.align	2
 1179              	hdma_usart2_rx:
 1180 0000 00000000 		.space	96
 1180      00000000 
 1180      00000000 
 1180      00000000 
 1180      00000000 
 1181              		.global	hdma_usart1_rx
 1182              		.section	.bss.hdma_usart1_rx,"aw",%nobits
 1183              		.align	2
 1186              	hdma_usart1_rx:
 1187 0000 00000000 		.space	96
 1187      00000000 
 1187      00000000 
 1187      00000000 
 1187      00000000 
 1188              		.global	huart3
 1189              		.section	.bss.huart3,"aw",%nobits
 1190              		.align	2
 1193              	huart3:
 1194 0000 00000000 		.space	68
 1194      00000000 
 1194      00000000 
 1194      00000000 
 1194      00000000 
 1195              		.global	huart2
 1196              		.section	.bss.huart2,"aw",%nobits
 1197              		.align	2
 1200              	huart2:
 1201 0000 00000000 		.space	68
 1201      00000000 
 1201      00000000 
ARM GAS  /tmp/ccNLyxz3.s 			page 33


 1201      00000000 
 1201      00000000 
 1202              		.global	huart1
 1203              		.section	.bss.huart1,"aw",%nobits
 1204              		.align	2
 1207              	huart1:
 1208 0000 00000000 		.space	68
 1208      00000000 
 1208      00000000 
 1208      00000000 
 1208      00000000 
 1209              		.global	usart3_buffer
 1210              		.section	.bss.usart3_buffer,"aw",%nobits
 1211              		.align	2
 1214              	usart3_buffer:
 1215 0000 00000000 		.space	128
 1215      00000000 
 1215      00000000 
 1215      00000000 
 1215      00000000 
 1216              		.global	usart2_buffer
 1217              		.section	.bss.usart2_buffer,"aw",%nobits
 1218              		.align	2
 1221              	usart2_buffer:
 1222 0000 00000000 		.space	128
 1222      00000000 
 1222      00000000 
 1222      00000000 
 1222      00000000 
 1223              		.global	usart1_buffer
 1224              		.section	.bss.usart1_buffer,"aw",%nobits
 1225              		.align	2
 1228              	usart1_buffer:
 1229 0000 00000000 		.space	128
 1229      00000000 
 1229      00000000 
 1229      00000000 
 1229      00000000 
 1230              		.text
 1231              	.Letext0:
 1232              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1233              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1234              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1235              		.file 5 "/usr/lib/gcc/arm-none-eabi/12.1.0/include/stddef.h"
 1236              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1237              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1238              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1239              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1240              		.file 10 "Core/Inc/usart.h"
 1241              		.file 11 "/usr/arm-none-eabi/include/stdlib.h"
 1242              		.file 12 "Core/Inc/main.h"
 1243              		.file 13 "/usr/arm-none-eabi/include/string.h"
 1244              		.file 14 "/usr/arm-none-eabi/include/stdio.h"
 1245              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1246              		.file 16 "<built-in>"
ARM GAS  /tmp/ccNLyxz3.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccNLyxz3.s:21     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccNLyxz3.s:27     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccNLyxz3.s:85     .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccNLyxz3.s:1207   .bss.huart1:0000000000000000 huart1
     /tmp/ccNLyxz3.s:91     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccNLyxz3.s:97     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccNLyxz3.s:155    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/ccNLyxz3.s:1200   .bss.huart2:0000000000000000 huart2
     /tmp/ccNLyxz3.s:161    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccNLyxz3.s:167    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccNLyxz3.s:235    .text.MX_USART3_UART_Init:0000000000000040 $d
     /tmp/ccNLyxz3.s:1193   .bss.huart3:0000000000000000 huart3
     /tmp/ccNLyxz3.s:1214   .bss.usart3_buffer:0000000000000000 usart3_buffer
     /tmp/ccNLyxz3.s:242    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccNLyxz3.s:248    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccNLyxz3.s:678    .text.HAL_UART_MspInit:00000000000001c8 $d
     /tmp/ccNLyxz3.s:1186   .bss.hdma_usart1_rx:0000000000000000 hdma_usart1_rx
     /tmp/ccNLyxz3.s:1179   .bss.hdma_usart2_rx:0000000000000000 hdma_usart2_rx
     /tmp/ccNLyxz3.s:1172   .bss.hdma_usart3_rx:0000000000000000 hdma_usart3_rx
     /tmp/ccNLyxz3.s:694    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccNLyxz3.s:700    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccNLyxz3.s:808    .text.HAL_UART_MspDeInit:0000000000000084 $d
     /tmp/ccNLyxz3.s:817    .text.__io_putchar:0000000000000000 $t
     /tmp/ccNLyxz3.s:823    .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/ccNLyxz3.s:859    .text.__io_putchar:000000000000001c $d
     /tmp/ccNLyxz3.s:864    .rodata.USER_UART_IDLECallback.str1.4:0000000000000000 $d
     /tmp/ccNLyxz3.s:874    .text.USER_UART_IDLECallback:0000000000000000 $t
     /tmp/ccNLyxz3.s:880    .text.USER_UART_IDLECallback:0000000000000000 USER_UART_IDLECallback
     /tmp/ccNLyxz3.s:1152   .text.USER_UART_IDLECallback:0000000000000110 $d
     /tmp/ccNLyxz3.s:1221   .bss.usart2_buffer:0000000000000000 usart2_buffer
     /tmp/ccNLyxz3.s:1228   .bss.usart1_buffer:0000000000000000 usart1_buffer
     /tmp/ccNLyxz3.s:1169   .bss.hdma_usart3_rx:0000000000000000 $d
     /tmp/ccNLyxz3.s:1176   .bss.hdma_usart2_rx:0000000000000000 $d
     /tmp/ccNLyxz3.s:1183   .bss.hdma_usart1_rx:0000000000000000 $d
     /tmp/ccNLyxz3.s:1190   .bss.huart3:0000000000000000 $d
     /tmp/ccNLyxz3.s:1197   .bss.huart2:0000000000000000 $d
     /tmp/ccNLyxz3.s:1204   .bss.huart1:0000000000000000 $d
     /tmp/ccNLyxz3.s:1211   .bss.usart3_buffer:0000000000000000 $d
     /tmp/ccNLyxz3.s:1218   .bss.usart2_buffer:0000000000000000 $d
     /tmp/ccNLyxz3.s:1225   .bss.usart1_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_UART_Receive_DMA
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
HAL_UART_Transmit
HAL_UART_DMAStop
malloc
ARM GAS  /tmp/ccNLyxz3.s 			page 35


printf
memcpy
arg_prase
memset
free
